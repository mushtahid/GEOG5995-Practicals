No sheep 10
No wolves 5

*************** ITERATION NUMBER 0 ************

-> ------------ 0-Sheep initialised with (y=73, x=20, store=300) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=73, x=20, store=300). Will move normally and eat
-->0-Sheep (y=73, x=20, store=300) before normal moving and eating
-->0-Sheep (y=72, x=19, store=310) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=91, x=52, store=300) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=91, x=52, store=300). Will move normally and eat
-->1-Sheep (y=91, x=52, store=300) before normal moving and eating
-->1-Sheep (y=90, x=53, store=310) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=52, x=40, store=400) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=52, x=40, store=400). Will move normally and eat
-->2-Sheep (y=52, x=40, store=400) before normal moving and eating
-->2-Sheep (y=51, x=41, store=410) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=93, x=14, store=300) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=93, x=14, store=300). Will move normally and eat
-->3-Sheep (y=93, x=14, store=300) before normal moving and eating
-->3-Sheep (y=94, x=15, store=310) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=48, x=35, store=300) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=48, x=35, store=300). Will move normally and eat
-->4-Sheep (y=48, x=35, store=300) before normal moving and eating
-->4-Sheep (y=47, x=34, store=310) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=11, x=63, store=400) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=11, x=63, store=400). Will move normally and eat
-->5-Sheep (y=11, x=63, store=400) before normal moving and eating
-->5-Sheep (y=10, x=62, store=410) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=70, x=63, store=400) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=70, x=63, store=400). Will move normally and eat
-->6-Sheep (y=70, x=63, store=400) before normal moving and eating
-->6-Sheep (y=69, x=62, store=410) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=19, x=30, store=200) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=19, x=30, store=200). Will move normally and eat
-->7-Sheep (y=19, x=30, store=200) before normal moving and eating
-->7-Sheep (y=18, x=29, store=210) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________


-> ------------ 8-Sheep initialised with (y=42, x=80, store=400) -----------
--> 8-Sheep looping with 0-Wolf.
--> 8-Sheep looping with 1-Wolf.
--> 8-Sheep looping with 2-Wolf.
--> 8-Sheep looping with 3-Wolf.
--> 8-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->8-Sheep has Store < Min_ernergy(600) (y=42, x=80, store=400). Will move normally and eat
-->8-Sheep (y=42, x=80, store=400) before normal moving and eating
-->8-Sheep (y=43, x=81, store=410) after normal moving and eating
___e2________ 8-Sheep moved normally and ate ___________


-> ------------ 9-Sheep initialised with (y=20, x=46, store=300) -----------
--> 9-Sheep looping with 0-Wolf.
--> 9-Sheep looping with 1-Wolf.
--> 9-Sheep looping with 2-Wolf.
--> 9-Sheep looping with 3-Wolf.
--> 9-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->9-Sheep has Store < Min_ernergy(600) (y=20, x=46, store=300). Will move normally and eat
-->9-Sheep (y=20, x=46, store=300) before normal moving and eating
-->9-Sheep (y=21, x=47, store=310) after normal moving and eating
___e2________ 9-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=219, x=60, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=219, x=60, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
---> 0-Wolf looping with 8-Sheep
---> 0-Wolf looping with 9-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=219, x=60, store=100) before normal moving
-->else1 ends: 0-Wolf (y=220, x=59, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=114, x=279, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=114, x=279, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
---> 1-Wolf looping with 8-Sheep
---> 1-Wolf looping with 9-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=114, x=279, store=300) before normal moving
-->else1 ends: 1-Wolf (y=115, x=278, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=210, x=114, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=210, x=114, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
---> 2-Wolf looping with 8-Sheep
---> 2-Wolf looping with 9-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=210, x=114, store=200) before normal moving
-->else1 ends: 2-Wolf (y=211, x=115, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=24, x=156, store=400) --------
--> 3-Wolf has <=Min_energy(500) store (y=24, x=156, store=400). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
---> 3-Wolf looping with 8-Sheep
---> 3-Wolf looping with 9-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=24, x=156, store=400) before normal moving
-->else1 ends: 3-Wolf (y=23, x=157, store=400) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=132, x=24, store=100) --------
--> 4-Wolf has <=Min_energy(500) store (y=132, x=24, store=100). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
----> action_dist(5) < distance(39.05124837953327) < min_dist(50)
----> Min Distance = 39.05124837953327 for 4-Wolf (y=132, x=24, store=100) with 3-Sheep (y=94, x=15, store=310)
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
---> 4-Wolf looping with 8-Sheep
---> 4-Wolf looping with 9-Sheep
-> CS Found!
--> 4-Wolf (y=132, x=24, store=100) before moving closer to  Closest-Sheep (y=94, x=15, store=310)
--> 4-Wolf (y=113, x=19, store=100) after moving closer to Closest-Sheep (y=94, x=15, store=310)
___________ 4-Wolf moved closer to CS___________
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 1 ************

-> ------------ 0-Sheep initialised with (y=72, x=19, store=310) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=72, x=19, store=310). Will move normally and eat
-->0-Sheep (y=72, x=19, store=310) before normal moving and eating
-->0-Sheep (y=71, x=18, store=320) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=90, x=53, store=310) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=90, x=53, store=310). Will move normally and eat
-->1-Sheep (y=90, x=53, store=310) before normal moving and eating
-->1-Sheep (y=91, x=54, store=320) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=51, x=41, store=410) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=51, x=41, store=410). Will move normally and eat
-->2-Sheep (y=51, x=41, store=410) before normal moving and eating
-->2-Sheep (y=50, x=40, store=420) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=94, x=15, store=310) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
---> d<md+... 3-Sheep noticed closest 4-Wolf ...
---> 3-Sheep (y=94, x=15, store=310) detected 4-Wolf (y=113, x=19, store=100) within d=19.4164878389476.
-> CW FOUND.
--> Before 3-Sheep (y=94, x=15, store=310) tries to run away from CW: (y=113, x=19, store=100).
--> After 3-Sheep (y=85, x=13, store=310) tried to run away from CW (y=113, x=19, store=100).
___________ 3 Sheep tried to run away from CW ___________ 


-> ------------ 4-Sheep initialised with (y=47, x=34, store=310) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=47, x=34, store=310). Will move normally and eat
-->4-Sheep (y=47, x=34, store=310) before normal moving and eating
-->4-Sheep (y=46, x=33, store=320) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=10, x=62, store=410) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=10, x=62, store=410). Will move normally and eat
-->5-Sheep (y=10, x=62, store=410) before normal moving and eating
-->5-Sheep (y=11, x=63, store=420) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=69, x=62, store=410) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=69, x=62, store=410). Will move normally and eat
-->6-Sheep (y=69, x=62, store=410) before normal moving and eating
-->6-Sheep (y=68, x=63, store=420) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=18, x=29, store=210) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=18, x=29, store=210). Will move normally and eat
-->7-Sheep (y=18, x=29, store=210) before normal moving and eating
-->7-Sheep (y=17, x=28, store=220) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________


-> ------------ 8-Sheep initialised with (y=43, x=81, store=410) -----------
--> 8-Sheep looping with 0-Wolf.
--> 8-Sheep looping with 1-Wolf.
--> 8-Sheep looping with 2-Wolf.
--> 8-Sheep looping with 3-Wolf.
--> 8-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->8-Sheep has Store < Min_ernergy(600) (y=43, x=81, store=410). Will move normally and eat
-->8-Sheep (y=43, x=81, store=410) before normal moving and eating
-->8-Sheep (y=44, x=80, store=420) after normal moving and eating
___e2________ 8-Sheep moved normally and ate ___________


-> ------------ 9-Sheep initialised with (y=21, x=47, store=310) -----------
--> 9-Sheep looping with 0-Wolf.
--> 9-Sheep looping with 1-Wolf.
--> 9-Sheep looping with 2-Wolf.
--> 9-Sheep looping with 3-Wolf.
--> 9-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->9-Sheep has Store < Min_ernergy(600) (y=21, x=47, store=310). Will move normally and eat
-->9-Sheep (y=21, x=47, store=310) before normal moving and eating
-->9-Sheep (y=22, x=48, store=320) after normal moving and eating
___e2________ 9-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=220, x=59, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=220, x=59, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
---> 0-Wolf looping with 8-Sheep
---> 0-Wolf looping with 9-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=220, x=59, store=100) before normal moving
-->else1 ends: 0-Wolf (y=221, x=60, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=115, x=278, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=115, x=278, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
---> 1-Wolf looping with 8-Sheep
---> 1-Wolf looping with 9-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=115, x=278, store=300) before normal moving
-->else1 ends: 1-Wolf (y=116, x=277, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=211, x=115, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=211, x=115, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
---> 2-Wolf looping with 8-Sheep
---> 2-Wolf looping with 9-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=211, x=115, store=200) before normal moving
-->else1 ends: 2-Wolf (y=212, x=114, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=23, x=157, store=400) --------
--> 3-Wolf has <=Min_energy(500) store (y=23, x=157, store=400). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
---> 3-Wolf looping with 8-Sheep
---> 3-Wolf looping with 9-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=23, x=157, store=400) before normal moving
-->else1 ends: 3-Wolf (y=22, x=156, store=400) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=113, x=19, store=100) --------
--> 4-Wolf has <=Min_energy(500) store (y=113, x=19, store=100). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
----> action_dist(5) < distance(42.01190307520001) < min_dist(50)
----> Min Distance = 42.01190307520001 for 4-Wolf (y=113, x=19, store=100) with 0-Sheep (y=71, x=18, store=320)
---> 4-Wolf looping with 1-Sheep
----> action_dist(5) < distance(41.340053217188775) < min_dist(42.01190307520001)
----> Min Distance = 41.340053217188775 for 4-Wolf (y=113, x=19, store=100) with 1-Sheep (y=91, x=54, store=320)
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
----> action_dist(5) < distance(28.635642126552707) < min_dist(41.340053217188775)
----> Min Distance = 28.635642126552707 for 4-Wolf (y=113, x=19, store=100) with 3-Sheep (y=85, x=13, store=310)
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
---> 4-Wolf looping with 8-Sheep
---> 4-Wolf looping with 9-Sheep
-> CS Found!
--> 4-Wolf (y=113, x=19, store=100) before moving closer to  Closest-Sheep (y=85, x=13, store=310)
--> 4-Wolf (y=99, x=16, store=100) after moving closer to Closest-Sheep (y=85, x=13, store=310)
___________ 4-Wolf moved closer to CS___________
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 2 ************

-> ------------ 0-Sheep initialised with (y=71, x=18, store=320) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=71, x=18, store=320). Will move normally and eat
-->0-Sheep (y=71, x=18, store=320) before normal moving and eating
-->0-Sheep (y=70, x=19, store=330) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=91, x=54, store=320) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=91, x=54, store=320). Will move normally and eat
-->1-Sheep (y=91, x=54, store=320) before normal moving and eating
-->1-Sheep (y=92, x=53, store=330) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=50, x=40, store=420) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=50, x=40, store=420). Will move normally and eat
-->2-Sheep (y=50, x=40, store=420) before normal moving and eating
-->2-Sheep (y=49, x=39, store=430) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=85, x=13, store=310) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
---> d<md+... 3-Sheep noticed closest 4-Wolf ...
---> 3-Sheep (y=85, x=13, store=310) detected 4-Wolf (y=99, x=16, store=100) within d=14.317821063276353.
-> CW FOUND.
--> Before 3-Sheep (y=85, x=13, store=310) tries to run away from CW: (y=99, x=16, store=100).
--> After 3-Sheep (y=78, x=12, store=310) tried to run away from CW (y=99, x=16, store=100).
___________ 3 Sheep tried to run away from CW ___________ 


-> ------------ 4-Sheep initialised with (y=46, x=33, store=320) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=46, x=33, store=320). Will move normally and eat
-->4-Sheep (y=46, x=33, store=320) before normal moving and eating
-->4-Sheep (y=45, x=32, store=330) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=11, x=63, store=420) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=11, x=63, store=420). Will move normally and eat
-->5-Sheep (y=11, x=63, store=420) before normal moving and eating
-->5-Sheep (y=10, x=64, store=430) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=68, x=63, store=420) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=68, x=63, store=420). Will move normally and eat
-->6-Sheep (y=68, x=63, store=420) before normal moving and eating
-->6-Sheep (y=67, x=64, store=430) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=17, x=28, store=220) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=17, x=28, store=220). Will move normally and eat
-->7-Sheep (y=17, x=28, store=220) before normal moving and eating
-->7-Sheep (y=18, x=27, store=230) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________


-> ------------ 8-Sheep initialised with (y=44, x=80, store=420) -----------
--> 8-Sheep looping with 0-Wolf.
--> 8-Sheep looping with 1-Wolf.
--> 8-Sheep looping with 2-Wolf.
--> 8-Sheep looping with 3-Wolf.
--> 8-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->8-Sheep has Store < Min_ernergy(600) (y=44, x=80, store=420). Will move normally and eat
-->8-Sheep (y=44, x=80, store=420) before normal moving and eating
-->8-Sheep (y=45, x=79, store=430) after normal moving and eating
___e2________ 8-Sheep moved normally and ate ___________


-> ------------ 9-Sheep initialised with (y=22, x=48, store=320) -----------
--> 9-Sheep looping with 0-Wolf.
--> 9-Sheep looping with 1-Wolf.
--> 9-Sheep looping with 2-Wolf.
--> 9-Sheep looping with 3-Wolf.
--> 9-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->9-Sheep has Store < Min_ernergy(600) (y=22, x=48, store=320). Will move normally and eat
-->9-Sheep (y=22, x=48, store=320) before normal moving and eating
-->9-Sheep (y=21, x=47, store=330) after normal moving and eating
___e2________ 9-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=221, x=60, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=221, x=60, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
---> 0-Wolf looping with 8-Sheep
---> 0-Wolf looping with 9-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=221, x=60, store=100) before normal moving
-->else1 ends: 0-Wolf (y=220, x=59, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=116, x=277, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=116, x=277, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
---> 1-Wolf looping with 8-Sheep
---> 1-Wolf looping with 9-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=116, x=277, store=300) before normal moving
-->else1 ends: 1-Wolf (y=117, x=276, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=212, x=114, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=212, x=114, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
---> 2-Wolf looping with 8-Sheep
---> 2-Wolf looping with 9-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=212, x=114, store=200) before normal moving
-->else1 ends: 2-Wolf (y=213, x=115, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=22, x=156, store=400) --------
--> 3-Wolf has <=Min_energy(500) store (y=22, x=156, store=400). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
---> 3-Wolf looping with 8-Sheep
---> 3-Wolf looping with 9-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=22, x=156, store=400) before normal moving
-->else1 ends: 3-Wolf (y=23, x=157, store=400) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=99, x=16, store=100) --------
--> 4-Wolf has <=Min_energy(500) store (y=99, x=16, store=100). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
----> action_dist(5) < distance(29.154759474226502) < min_dist(50)
----> Min Distance = 29.154759474226502 for 4-Wolf (y=99, x=16, store=100) with 0-Sheep (y=70, x=19, store=330)
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
----> action_dist(5) < distance(21.37755832643195) < min_dist(29.154759474226502)
----> Min Distance = 21.37755832643195 for 4-Wolf (y=99, x=16, store=100) with 3-Sheep (y=78, x=12, store=310)
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
---> 4-Wolf looping with 8-Sheep
---> 4-Wolf looping with 9-Sheep
-> CS Found!
--> 4-Wolf (y=99, x=16, store=100) before moving closer to  Closest-Sheep (y=78, x=12, store=310)
--> 4-Wolf (y=88, x=14, store=100) after moving closer to Closest-Sheep (y=78, x=12, store=310)
___________ 4-Wolf moved closer to CS___________
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 3 ************

-> ------------ 0-Sheep initialised with (y=70, x=19, store=330) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
---> d<md+... 0-Sheep noticed closest 4-Wolf ...
---> 0-Sheep (y=70, x=19, store=330) detected 4-Wolf (y=88, x=14, store=100) within d=18.681541692269406.
-> CW FOUND.
--> Before 0-Sheep (y=70, x=19, store=330) tries to run away from CW: (y=88, x=14, store=100).
--> After 0-Sheep (y=61, x=22, store=330) tried to run away from CW (y=88, x=14, store=100).
___________ 0 Sheep tried to run away from CW ___________ 


-> ------------ 1-Sheep initialised with (y=92, x=53, store=330) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=92, x=53, store=330). Will move normally and eat
-->1-Sheep (y=92, x=53, store=330) before normal moving and eating
-->1-Sheep (y=91, x=54, store=340) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=49, x=39, store=430) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=49, x=39, store=430). Will move normally and eat
-->2-Sheep (y=49, x=39, store=430) before normal moving and eating
-->2-Sheep (y=50, x=38, store=440) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=78, x=12, store=310) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
---> d<md+... 3-Sheep noticed closest 4-Wolf ...
---> 3-Sheep (y=78, x=12, store=310) detected 4-Wolf (y=88, x=14, store=100) within d=10.198039027185569.
-> CW FOUND.
--> Before 3-Sheep (y=78, x=12, store=310) tries to run away from CW: (y=88, x=14, store=100).
--> After 3-Sheep (y=73, x=11, store=310) tried to run away from CW (y=88, x=14, store=100).
___________ 3 Sheep tried to run away from CW ___________ 


-> ------------ 4-Sheep initialised with (y=45, x=32, store=330) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=45, x=32, store=330). Will move normally and eat
-->4-Sheep (y=45, x=32, store=330) before normal moving and eating
-->4-Sheep (y=46, x=33, store=340) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=10, x=64, store=430) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=10, x=64, store=430). Will move normally and eat
-->5-Sheep (y=10, x=64, store=430) before normal moving and eating
-->5-Sheep (y=9, x=65, store=440) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=67, x=64, store=430) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=67, x=64, store=430). Will move normally and eat
-->6-Sheep (y=67, x=64, store=430) before normal moving and eating
-->6-Sheep (y=66, x=63, store=440) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=18, x=27, store=230) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=18, x=27, store=230). Will move normally and eat
-->7-Sheep (y=18, x=27, store=230) before normal moving and eating
-->7-Sheep (y=17, x=28, store=240) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________


-> ------------ 8-Sheep initialised with (y=45, x=79, store=430) -----------
--> 8-Sheep looping with 0-Wolf.
--> 8-Sheep looping with 1-Wolf.
--> 8-Sheep looping with 2-Wolf.
--> 8-Sheep looping with 3-Wolf.
--> 8-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->8-Sheep has Store < Min_ernergy(600) (y=45, x=79, store=430). Will move normally and eat
-->8-Sheep (y=45, x=79, store=430) before normal moving and eating
-->8-Sheep (y=44, x=78, store=440) after normal moving and eating
___e2________ 8-Sheep moved normally and ate ___________


-> ------------ 9-Sheep initialised with (y=21, x=47, store=330) -----------
--> 9-Sheep looping with 0-Wolf.
--> 9-Sheep looping with 1-Wolf.
--> 9-Sheep looping with 2-Wolf.
--> 9-Sheep looping with 3-Wolf.
--> 9-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->9-Sheep has Store < Min_ernergy(600) (y=21, x=47, store=330). Will move normally and eat
-->9-Sheep (y=21, x=47, store=330) before normal moving and eating
-->9-Sheep (y=22, x=48, store=340) after normal moving and eating
___e2________ 9-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=220, x=59, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=220, x=59, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
---> 0-Wolf looping with 8-Sheep
---> 0-Wolf looping with 9-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=220, x=59, store=100) before normal moving
-->else1 ends: 0-Wolf (y=221, x=58, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=117, x=276, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=117, x=276, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
---> 1-Wolf looping with 8-Sheep
---> 1-Wolf looping with 9-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=117, x=276, store=300) before normal moving
-->else1 ends: 1-Wolf (y=116, x=275, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=213, x=115, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=213, x=115, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
---> 2-Wolf looping with 8-Sheep
---> 2-Wolf looping with 9-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=213, x=115, store=200) before normal moving
-->else1 ends: 2-Wolf (y=214, x=116, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=23, x=157, store=400) --------
--> 3-Wolf has <=Min_energy(500) store (y=23, x=157, store=400). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
---> 3-Wolf looping with 8-Sheep
---> 3-Wolf looping with 9-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=23, x=157, store=400) before normal moving
-->else1 ends: 3-Wolf (y=22, x=158, store=400) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=88, x=14, store=100) --------
--> 4-Wolf has <=Min_energy(500) store (y=88, x=14, store=100). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
----> action_dist(5) < distance(28.160255680657446) < min_dist(50)
----> Min Distance = 28.160255680657446 for 4-Wolf (y=88, x=14, store=100) with 0-Sheep (y=61, x=22, store=330)
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
----> action_dist(5) < distance(15.297058540778355) < min_dist(28.160255680657446)
----> Min Distance = 15.297058540778355 for 4-Wolf (y=88, x=14, store=100) with 3-Sheep (y=73, x=11, store=310)
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
---> 4-Wolf looping with 8-Sheep
---> 4-Wolf looping with 9-Sheep
-> CS Found!
--> 4-Wolf (y=88, x=14, store=100) before moving closer to  Closest-Sheep (y=73, x=11, store=310)
--> 4-Wolf (y=80, x=12, store=100) after moving closer to Closest-Sheep (y=73, x=11, store=310)
___________ 4-Wolf moved closer to CS___________
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 4 ************

-> ------------ 0-Sheep initialised with (y=61, x=22, store=330) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
---> d<md+... 0-Sheep noticed closest 4-Wolf ...
---> 0-Sheep (y=61, x=22, store=330) detected 4-Wolf (y=80, x=12, store=100) within d=21.470910553583888.
-> CW FOUND.
--> Before 0-Sheep (y=61, x=22, store=330) tries to run away from CW: (y=80, x=12, store=100).
--> After 0-Sheep (y=52, x=27, store=330) tried to run away from CW (y=80, x=12, store=100).
___________ 0 Sheep tried to run away from CW ___________ 


-> ------------ 1-Sheep initialised with (y=91, x=54, store=340) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=91, x=54, store=340). Will move normally and eat
-->1-Sheep (y=91, x=54, store=340) before normal moving and eating
-->1-Sheep (y=92, x=55, store=350) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=50, x=38, store=440) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=50, x=38, store=440). Will move normally and eat
-->2-Sheep (y=50, x=38, store=440) before normal moving and eating
-->2-Sheep (y=51, x=37, store=450) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=73, x=11, store=310) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
---> d<md+... 3-Sheep noticed closest 4-Wolf ...
---> 3-Sheep (y=73, x=11, store=310) detected 4-Wolf (y=80, x=12, store=100) within d=7.0710678118654755.
-> CW FOUND.
--> Before 3-Sheep (y=73, x=11, store=310) tries to run away from CW: (y=80, x=12, store=100).
--> After 3-Sheep (y=70, x=11, store=310) tried to run away from CW (y=80, x=12, store=100).
___________ 3 Sheep tried to run away from CW ___________ 


-> ------------ 4-Sheep initialised with (y=46, x=33, store=340) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=46, x=33, store=340). Will move normally and eat
-->4-Sheep (y=46, x=33, store=340) before normal moving and eating
-->4-Sheep (y=47, x=32, store=350) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=9, x=65, store=440) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=9, x=65, store=440). Will move normally and eat
-->5-Sheep (y=9, x=65, store=440) before normal moving and eating
-->5-Sheep (y=8, x=64, store=450) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=66, x=63, store=440) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=66, x=63, store=440). Will move normally and eat
-->6-Sheep (y=66, x=63, store=440) before normal moving and eating
-->6-Sheep (y=65, x=62, store=450) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=17, x=28, store=240) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=17, x=28, store=240). Will move normally and eat
-->7-Sheep (y=17, x=28, store=240) before normal moving and eating
-->7-Sheep (y=16, x=29, store=250) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________


-> ------------ 8-Sheep initialised with (y=44, x=78, store=440) -----------
--> 8-Sheep looping with 0-Wolf.
--> 8-Sheep looping with 1-Wolf.
--> 8-Sheep looping with 2-Wolf.
--> 8-Sheep looping with 3-Wolf.
--> 8-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->8-Sheep has Store < Min_ernergy(600) (y=44, x=78, store=440). Will move normally and eat
-->8-Sheep (y=44, x=78, store=440) before normal moving and eating
-->8-Sheep (y=45, x=77, store=450) after normal moving and eating
___e2________ 8-Sheep moved normally and ate ___________


-> ------------ 9-Sheep initialised with (y=22, x=48, store=340) -----------
--> 9-Sheep looping with 0-Wolf.
--> 9-Sheep looping with 1-Wolf.
--> 9-Sheep looping with 2-Wolf.
--> 9-Sheep looping with 3-Wolf.
--> 9-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->9-Sheep has Store < Min_ernergy(600) (y=22, x=48, store=340). Will move normally and eat
-->9-Sheep (y=22, x=48, store=340) before normal moving and eating
-->9-Sheep (y=21, x=47, store=350) after normal moving and eating
___e2________ 9-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=221, x=58, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=221, x=58, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
---> 0-Wolf looping with 8-Sheep
---> 0-Wolf looping with 9-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=221, x=58, store=100) before normal moving
-->else1 ends: 0-Wolf (y=220, x=59, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=116, x=275, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=116, x=275, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
---> 1-Wolf looping with 8-Sheep
---> 1-Wolf looping with 9-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=116, x=275, store=300) before normal moving
-->else1 ends: 1-Wolf (y=117, x=274, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=214, x=116, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=214, x=116, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
---> 2-Wolf looping with 8-Sheep
---> 2-Wolf looping with 9-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=214, x=116, store=200) before normal moving
-->else1 ends: 2-Wolf (y=215, x=117, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=22, x=158, store=400) --------
--> 3-Wolf has <=Min_energy(500) store (y=22, x=158, store=400). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
---> 3-Wolf looping with 8-Sheep
---> 3-Wolf looping with 9-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=22, x=158, store=400) before normal moving
-->else1 ends: 3-Wolf (y=21, x=157, store=400) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=80, x=12, store=100) --------
--> 4-Wolf has <=Min_energy(500) store (y=80, x=12, store=100). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
----> action_dist(5) < distance(31.76476034853718) < min_dist(50)
----> Min Distance = 31.76476034853718 for 4-Wolf (y=80, x=12, store=100) with 0-Sheep (y=52, x=27, store=330)
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
----> action_dist(5) < distance(10.04987562112089) < min_dist(31.76476034853718)
----> Min Distance = 10.04987562112089 for 4-Wolf (y=80, x=12, store=100) with 3-Sheep (y=70, x=11, store=310)
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
---> 4-Wolf looping with 8-Sheep
---> 4-Wolf looping with 9-Sheep
-> CS Found!
--> 4-Wolf (y=80, x=12, store=100) before moving closer to  Closest-Sheep (y=70, x=11, store=310)
--> 4-Wolf (y=75, x=11, store=100) after moving closer to Closest-Sheep (y=70, x=11, store=310)
___________ 4-Wolf moved closer to CS___________
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 5 ************

-> ------------ 0-Sheep initialised with (y=52, x=27, store=330) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=52, x=27, store=330). Will move normally and eat
-->0-Sheep (y=52, x=27, store=330) before normal moving and eating
-->0-Sheep (y=53, x=28, store=340) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=92, x=55, store=350) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=92, x=55, store=350). Will move normally and eat
-->1-Sheep (y=92, x=55, store=350) before normal moving and eating
-->1-Sheep (y=91, x=54, store=360) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=51, x=37, store=450) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=51, x=37, store=450). Will move normally and eat
-->2-Sheep (y=51, x=37, store=450) before normal moving and eating
-->2-Sheep (y=50, x=38, store=460) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=70, x=11, store=310) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
---> d<md+... 3-Sheep noticed closest 4-Wolf ...
---> 3-Sheep (y=70, x=11, store=310) detected 4-Wolf (y=75, x=11, store=100) within d=5.0.
-> CW FOUND.
--> Before 3-Sheep (y=70, x=11, store=310) tries to run away from CW: (y=75, x=11, store=100).
--> After 3-Sheep (y=68, x=11, store=310) tried to run away from CW (y=75, x=11, store=100).
___________ 3 Sheep tried to run away from CW ___________ 


-> ------------ 4-Sheep initialised with (y=47, x=32, store=350) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=47, x=32, store=350). Will move normally and eat
-->4-Sheep (y=47, x=32, store=350) before normal moving and eating
-->4-Sheep (y=46, x=31, store=360) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=8, x=64, store=450) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=8, x=64, store=450). Will move normally and eat
-->5-Sheep (y=8, x=64, store=450) before normal moving and eating
-->5-Sheep (y=9, x=63, store=460) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=65, x=62, store=450) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=65, x=62, store=450). Will move normally and eat
-->6-Sheep (y=65, x=62, store=450) before normal moving and eating
-->6-Sheep (y=66, x=63, store=460) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=16, x=29, store=250) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=16, x=29, store=250). Will move normally and eat
-->7-Sheep (y=16, x=29, store=250) before normal moving and eating
-->7-Sheep (y=17, x=28, store=260) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________


-> ------------ 8-Sheep initialised with (y=45, x=77, store=450) -----------
--> 8-Sheep looping with 0-Wolf.
--> 8-Sheep looping with 1-Wolf.
--> 8-Sheep looping with 2-Wolf.
--> 8-Sheep looping with 3-Wolf.
--> 8-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->8-Sheep has Store < Min_ernergy(600) (y=45, x=77, store=450). Will move normally and eat
-->8-Sheep (y=45, x=77, store=450) before normal moving and eating
-->8-Sheep (y=44, x=78, store=460) after normal moving and eating
___e2________ 8-Sheep moved normally and ate ___________


-> ------------ 9-Sheep initialised with (y=21, x=47, store=350) -----------
--> 9-Sheep looping with 0-Wolf.
--> 9-Sheep looping with 1-Wolf.
--> 9-Sheep looping with 2-Wolf.
--> 9-Sheep looping with 3-Wolf.
--> 9-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->9-Sheep has Store < Min_ernergy(600) (y=21, x=47, store=350). Will move normally and eat
-->9-Sheep (y=21, x=47, store=350) before normal moving and eating
-->9-Sheep (y=22, x=46, store=360) after normal moving and eating
___e2________ 9-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=220, x=59, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=220, x=59, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
---> 0-Wolf looping with 8-Sheep
---> 0-Wolf looping with 9-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=220, x=59, store=100) before normal moving
-->else1 ends: 0-Wolf (y=221, x=58, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=117, x=274, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=117, x=274, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
---> 1-Wolf looping with 8-Sheep
---> 1-Wolf looping with 9-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=117, x=274, store=300) before normal moving
-->else1 ends: 1-Wolf (y=116, x=273, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=215, x=117, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=215, x=117, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
---> 2-Wolf looping with 8-Sheep
---> 2-Wolf looping with 9-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=215, x=117, store=200) before normal moving
-->else1 ends: 2-Wolf (y=216, x=118, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=21, x=157, store=400) --------
--> 3-Wolf has <=Min_energy(500) store (y=21, x=157, store=400). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
---> 3-Wolf looping with 8-Sheep
---> 3-Wolf looping with 9-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=21, x=157, store=400) before normal moving
-->else1 ends: 3-Wolf (y=22, x=156, store=400) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=75, x=11, store=100) --------
--> 4-Wolf has <=Min_energy(500) store (y=75, x=11, store=100). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
----> action_dist(5) < distance(27.80287754891569) < min_dist(50)
----> Min Distance = 27.80287754891569 for 4-Wolf (y=75, x=11, store=100) with 0-Sheep (y=53, x=28, store=340)
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
----> action_dist(5) < distance(7.0) < min_dist(27.80287754891569)
----> Min Distance = 7.0 for 4-Wolf (y=75, x=11, store=100) with 3-Sheep (y=68, x=11, store=310)
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
---> 4-Wolf looping with 8-Sheep
---> 4-Wolf looping with 9-Sheep
-> CS Found!
--> 4-Wolf (y=75, x=11, store=100) before moving closer to  Closest-Sheep (y=68, x=11, store=310)
--> 4-Wolf (y=71, x=11, store=100) after moving closer to Closest-Sheep (y=68, x=11, store=310)
___________ 4-Wolf moved closer to CS___________
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 6 ************

-> ------------ 0-Sheep initialised with (y=53, x=28, store=340) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
---> d<md+... 0-Sheep noticed closest 4-Wolf ...
---> 0-Sheep (y=53, x=28, store=340) detected 4-Wolf (y=71, x=11, store=100) within d=24.758836806279895.
-> CW FOUND.
--> Before 0-Sheep (y=53, x=28, store=340) tries to run away from CW: (y=71, x=11, store=100).
--> After 0-Sheep (y=44, x=37, store=340) tried to run away from CW (y=71, x=11, store=100).
___________ 0 Sheep tried to run away from CW ___________ 


-> ------------ 1-Sheep initialised with (y=91, x=54, store=360) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=91, x=54, store=360). Will move normally and eat
-->1-Sheep (y=91, x=54, store=360) before normal moving and eating
-->1-Sheep (y=92, x=53, store=370) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=50, x=38, store=460) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=50, x=38, store=460). Will move normally and eat
-->2-Sheep (y=50, x=38, store=460) before normal moving and eating
-->2-Sheep (y=49, x=39, store=470) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=68, x=11, store=310) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
---> d<md+... 3-Sheep noticed closest 4-Wolf ...
---> 3-Sheep (y=68, x=11, store=310) detected 4-Wolf (y=71, x=11, store=100) within d=3.0.
-> CW FOUND.
--> Before 3-Sheep (y=68, x=11, store=310) tries to run away from CW: (y=71, x=11, store=100).
--> After 3-Sheep (y=67, x=11, store=310) tried to run away from CW (y=71, x=11, store=100).
___________ 3 Sheep tried to run away from CW ___________ 


-> ------------ 4-Sheep initialised with (y=46, x=31, store=360) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=46, x=31, store=360). Will move normally and eat
-->4-Sheep (y=46, x=31, store=360) before normal moving and eating
-->4-Sheep (y=47, x=32, store=370) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=9, x=63, store=460) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=9, x=63, store=460). Will move normally and eat
-->5-Sheep (y=9, x=63, store=460) before normal moving and eating
-->5-Sheep (y=8, x=62, store=470) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=66, x=63, store=460) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=66, x=63, store=460). Will move normally and eat
-->6-Sheep (y=66, x=63, store=460) before normal moving and eating
-->6-Sheep (y=67, x=62, store=470) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=17, x=28, store=260) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=17, x=28, store=260). Will move normally and eat
-->7-Sheep (y=17, x=28, store=260) before normal moving and eating
-->7-Sheep (y=16, x=27, store=270) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________


-> ------------ 8-Sheep initialised with (y=44, x=78, store=460) -----------
--> 8-Sheep looping with 0-Wolf.
--> 8-Sheep looping with 1-Wolf.
--> 8-Sheep looping with 2-Wolf.
--> 8-Sheep looping with 3-Wolf.
--> 8-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->8-Sheep has Store < Min_ernergy(600) (y=44, x=78, store=460). Will move normally and eat
-->8-Sheep (y=44, x=78, store=460) before normal moving and eating
-->8-Sheep (y=43, x=77, store=470) after normal moving and eating
___e2________ 8-Sheep moved normally and ate ___________


-> ------------ 9-Sheep initialised with (y=22, x=46, store=360) -----------
--> 9-Sheep looping with 0-Wolf.
--> 9-Sheep looping with 1-Wolf.
--> 9-Sheep looping with 2-Wolf.
--> 9-Sheep looping with 3-Wolf.
--> 9-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->9-Sheep has Store < Min_ernergy(600) (y=22, x=46, store=360). Will move normally and eat
-->9-Sheep (y=22, x=46, store=360) before normal moving and eating
-->9-Sheep (y=23, x=47, store=370) after normal moving and eating
___e2________ 9-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=221, x=58, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=221, x=58, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
---> 0-Wolf looping with 8-Sheep
---> 0-Wolf looping with 9-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=221, x=58, store=100) before normal moving
-->else1 ends: 0-Wolf (y=222, x=57, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=116, x=273, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=116, x=273, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
---> 1-Wolf looping with 8-Sheep
---> 1-Wolf looping with 9-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=116, x=273, store=300) before normal moving
-->else1 ends: 1-Wolf (y=117, x=274, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=216, x=118, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=216, x=118, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
---> 2-Wolf looping with 8-Sheep
---> 2-Wolf looping with 9-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=216, x=118, store=200) before normal moving
-->else1 ends: 2-Wolf (y=215, x=119, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=22, x=156, store=400) --------
--> 3-Wolf has <=Min_energy(500) store (y=22, x=156, store=400). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
---> 3-Wolf looping with 8-Sheep
---> 3-Wolf looping with 9-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=22, x=156, store=400) before normal moving
-->else1 ends: 3-Wolf (y=23, x=155, store=400) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=71, x=11, store=100) --------
--> 4-Wolf has <=Min_energy(500) store (y=71, x=11, store=100). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
----> action_dist(5) < distance(37.48332962798263) < min_dist(50)
----> Min Distance = 37.48332962798263 for 4-Wolf (y=71, x=11, store=100) with 0-Sheep (y=44, x=37, store=340)
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
----> action_dist(5) < distance(35.608987629529715) < min_dist(37.48332962798263)
----> Min Distance = 35.608987629529715 for 4-Wolf (y=71, x=11, store=100) with 2-Sheep (y=49, x=39, store=470)
---> 4-Wolf looping with 3-Sheep
----> d<=action_dist found
----> 4-Wolf (y=71, x=11, store=100) before eating 3-Sheep (y=67, x=11, store=310)
----> 4-Wolf (y=71, x=11, store=348.0) after eating 3-Sheep (y=67, x=11, store=0). Env received (62.0)
___________ Eaten=True. 4-Wolf one ate 3-Sheep__________
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 7 ************

-> ------------ 0-Sheep initialised with (y=44, x=37, store=340) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=44, x=37, store=340). Will move normally and eat
-->0-Sheep (y=44, x=37, store=340) before normal moving and eating
-->0-Sheep (y=45, x=38, store=350) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=92, x=53, store=370) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=92, x=53, store=370). Will move normally and eat
-->1-Sheep (y=92, x=53, store=370) before normal moving and eating
-->1-Sheep (y=93, x=54, store=380) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=49, x=39, store=470) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=49, x=39, store=470). Will move normally and eat
-->2-Sheep (y=49, x=39, store=470) before normal moving and eating
-->2-Sheep (y=48, x=38, store=480) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=47, x=32, store=370) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=47, x=32, store=370). Will move normally and eat
-->3-Sheep (y=47, x=32, store=370) before normal moving and eating
-->3-Sheep (y=46, x=31, store=380) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=8, x=62, store=470) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=8, x=62, store=470). Will move normally and eat
-->4-Sheep (y=8, x=62, store=470) before normal moving and eating
-->4-Sheep (y=7, x=63, store=480) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=67, x=62, store=470) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=67, x=62, store=470). Will move normally and eat
-->5-Sheep (y=67, x=62, store=470) before normal moving and eating
-->5-Sheep (y=68, x=63, store=480) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=16, x=27, store=270) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=16, x=27, store=270). Will move normally and eat
-->6-Sheep (y=16, x=27, store=270) before normal moving and eating
-->6-Sheep (y=17, x=26, store=280) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=43, x=77, store=470) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=43, x=77, store=470). Will move normally and eat
-->7-Sheep (y=43, x=77, store=470) before normal moving and eating
-->7-Sheep (y=42, x=78, store=480) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________


-> ------------ 8-Sheep initialised with (y=23, x=47, store=370) -----------
--> 8-Sheep looping with 0-Wolf.
--> 8-Sheep looping with 1-Wolf.
--> 8-Sheep looping with 2-Wolf.
--> 8-Sheep looping with 3-Wolf.
--> 8-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->8-Sheep has Store < Min_ernergy(600) (y=23, x=47, store=370). Will move normally and eat
-->8-Sheep (y=23, x=47, store=370) before normal moving and eating
-->8-Sheep (y=22, x=48, store=380) after normal moving and eating
___e2________ 8-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=222, x=57, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=222, x=57, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
---> 0-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=222, x=57, store=100) before normal moving
-->else1 ends: 0-Wolf (y=223, x=56, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=117, x=274, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=117, x=274, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
---> 1-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=117, x=274, store=300) before normal moving
-->else1 ends: 1-Wolf (y=116, x=273, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=215, x=119, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=215, x=119, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
---> 2-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=215, x=119, store=200) before normal moving
-->else1 ends: 2-Wolf (y=214, x=118, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=23, x=155, store=400) --------
--> 3-Wolf has <=Min_energy(500) store (y=23, x=155, store=400). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
---> 3-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=23, x=155, store=400) before normal moving
-->else1 ends: 3-Wolf (y=22, x=154, store=400) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=71, x=11, store=348.0) --------
--> 4-Wolf has <=Min_energy(500) store (y=71, x=11, store=348.0). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
----> action_dist(5) < distance(37.48332962798263) < min_dist(50)
----> Min Distance = 37.48332962798263 for 4-Wolf (y=71, x=11, store=348.0) with 0-Sheep (y=45, x=38, store=350)
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
----> action_dist(5) < distance(35.4682957019364) < min_dist(37.48332962798263)
----> Min Distance = 35.4682957019364 for 4-Wolf (y=71, x=11, store=348.0) with 2-Sheep (y=48, x=38, store=480)
---> 4-Wolf looping with 3-Sheep
----> action_dist(5) < distance(32.01562118716424) < min_dist(35.4682957019364)
----> Min Distance = 32.01562118716424 for 4-Wolf (y=71, x=11, store=348.0) with 3-Sheep (y=46, x=31, store=380)
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
---> 4-Wolf looping with 8-Sheep
-> CS Found!
--> 4-Wolf (y=71, x=11, store=348.0) before moving closer to  Closest-Sheep (y=46, x=31, store=380)
--> 4-Wolf (y=58, x=21, store=348.0) after moving closer to Closest-Sheep (y=46, x=31, store=380)
___________ 4-Wolf moved closer to CS___________
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 8 ************

-> ------------ 0-Sheep initialised with (y=45, x=38, store=350) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
---> d<md+... 0-Sheep noticed closest 4-Wolf ...
---> 0-Sheep (y=45, x=38, store=350) detected 4-Wolf (y=58, x=21, store=348.0) within d=21.400934559032695.
-> CW FOUND.
--> Before 0-Sheep (y=45, x=38, store=350) tries to run away from CW: (y=58, x=21, store=348.0).
--> After 0-Sheep (y=39, x=47, store=350) tried to run away from CW (y=58, x=21, store=348.0).
___________ 0 Sheep tried to run away from CW ___________ 


-> ------------ 1-Sheep initialised with (y=93, x=54, store=380) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=93, x=54, store=380). Will move normally and eat
-->1-Sheep (y=93, x=54, store=380) before normal moving and eating
-->1-Sheep (y=94, x=55, store=390) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=48, x=38, store=480) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
---> d<md+... 2-Sheep noticed closest 4-Wolf ...
---> 2-Sheep (y=48, x=38, store=480) detected 4-Wolf (y=58, x=21, store=348.0) within d=19.72308292331602.
-> CW FOUND.
--> Before 2-Sheep (y=48, x=38, store=480) tries to run away from CW: (y=58, x=21, store=348.0).
--> After 2-Sheep (y=43, x=47, store=480) tried to run away from CW (y=58, x=21, store=348.0).
___________ 2 Sheep tried to run away from CW ___________ 


-> ------------ 3-Sheep initialised with (y=46, x=31, store=380) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
---> d<md+... 3-Sheep noticed closest 4-Wolf ...
---> 3-Sheep (y=46, x=31, store=380) detected 4-Wolf (y=58, x=21, store=348.0) within d=15.620499351813308.
-> CW FOUND.
--> Before 3-Sheep (y=46, x=31, store=380) tries to run away from CW: (y=58, x=21, store=348.0).
--> After 3-Sheep (y=40, x=36, store=380) tried to run away from CW (y=58, x=21, store=348.0).
___________ 3 Sheep tried to run away from CW ___________ 


-> ------------ 4-Sheep initialised with (y=7, x=63, store=480) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=7, x=63, store=480). Will move normally and eat
-->4-Sheep (y=7, x=63, store=480) before normal moving and eating
-->4-Sheep (y=8, x=62, store=490) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=68, x=63, store=480) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=68, x=63, store=480). Will move normally and eat
-->5-Sheep (y=68, x=63, store=480) before normal moving and eating
-->5-Sheep (y=69, x=64, store=490) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=17, x=26, store=280) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=17, x=26, store=280). Will move normally and eat
-->6-Sheep (y=17, x=26, store=280) before normal moving and eating
-->6-Sheep (y=18, x=27, store=290) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=42, x=78, store=480) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=42, x=78, store=480). Will move normally and eat
-->7-Sheep (y=42, x=78, store=480) before normal moving and eating
-->7-Sheep (y=41, x=77, store=490) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________


-> ------------ 8-Sheep initialised with (y=22, x=48, store=380) -----------
--> 8-Sheep looping with 0-Wolf.
--> 8-Sheep looping with 1-Wolf.
--> 8-Sheep looping with 2-Wolf.
--> 8-Sheep looping with 3-Wolf.
--> 8-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->8-Sheep has Store < Min_ernergy(600) (y=22, x=48, store=380). Will move normally and eat
-->8-Sheep (y=22, x=48, store=380) before normal moving and eating
-->8-Sheep (y=23, x=47, store=390) after normal moving and eating
___e2________ 8-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=223, x=56, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=223, x=56, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
---> 0-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=223, x=56, store=100) before normal moving
-->else1 ends: 0-Wolf (y=222, x=57, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=116, x=273, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=116, x=273, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
---> 1-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=116, x=273, store=300) before normal moving
-->else1 ends: 1-Wolf (y=117, x=274, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=214, x=118, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=214, x=118, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
---> 2-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=214, x=118, store=200) before normal moving
-->else1 ends: 2-Wolf (y=215, x=117, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=22, x=154, store=400) --------
--> 3-Wolf has <=Min_energy(500) store (y=22, x=154, store=400). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
---> 3-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=22, x=154, store=400) before normal moving
-->else1 ends: 3-Wolf (y=23, x=155, store=400) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=58, x=21, store=348.0) --------
--> 4-Wolf has <=Min_energy(500) store (y=58, x=21, store=348.0). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
----> action_dist(5) < distance(32.202484376209235) < min_dist(50)
----> Min Distance = 32.202484376209235 for 4-Wolf (y=58, x=21, store=348.0) with 0-Sheep (y=39, x=47, store=350)
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
----> action_dist(5) < distance(30.01666203960727) < min_dist(32.202484376209235)
----> Min Distance = 30.01666203960727 for 4-Wolf (y=58, x=21, store=348.0) with 2-Sheep (y=43, x=47, store=480)
---> 4-Wolf looping with 3-Sheep
----> action_dist(5) < distance(23.430749027719962) < min_dist(30.01666203960727)
----> Min Distance = 23.430749027719962 for 4-Wolf (y=58, x=21, store=348.0) with 3-Sheep (y=40, x=36, store=380)
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
---> 4-Wolf looping with 8-Sheep
-> CS Found!
--> 4-Wolf (y=58, x=21, store=348.0) before moving closer to  Closest-Sheep (y=40, x=36, store=380)
--> 4-Wolf (y=49, x=28, store=348.0) after moving closer to Closest-Sheep (y=40, x=36, store=380)
___________ 4-Wolf moved closer to CS___________
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 9 ************

-> ------------ 0-Sheep initialised with (y=39, x=47, store=350) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
---> d<md+... 0-Sheep noticed closest 4-Wolf ...
---> 0-Sheep (y=39, x=47, store=350) detected 4-Wolf (y=49, x=28, store=348.0) within d=21.470910553583888.
-> CW FOUND.
--> Before 0-Sheep (y=39, x=47, store=350) tries to run away from CW: (y=49, x=28, store=348.0).
--> After 0-Sheep (y=34, x=57, store=350) tried to run away from CW (y=49, x=28, store=348.0).
___________ 0 Sheep tried to run away from CW ___________ 


-> ------------ 1-Sheep initialised with (y=94, x=55, store=390) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=94, x=55, store=390). Will move normally and eat
-->1-Sheep (y=94, x=55, store=390) before normal moving and eating
-->1-Sheep (y=95, x=54, store=400) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=43, x=47, store=480) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
---> d<md+... 2-Sheep noticed closest 4-Wolf ...
---> 2-Sheep (y=43, x=47, store=480) detected 4-Wolf (y=49, x=28, store=348.0) within d=19.924858845171276.
-> CW FOUND.
--> Before 2-Sheep (y=43, x=47, store=480) tries to run away from CW: (y=49, x=28, store=348.0).
--> After 2-Sheep (y=40, x=57, store=480) tried to run away from CW (y=49, x=28, store=348.0).
___________ 2 Sheep tried to run away from CW ___________ 


-> ------------ 3-Sheep initialised with (y=40, x=36, store=380) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
---> d<md+... 3-Sheep noticed closest 4-Wolf ...
---> 3-Sheep (y=40, x=36, store=380) detected 4-Wolf (y=49, x=28, store=348.0) within d=12.041594578792296.
-> CW FOUND.
--> Before 3-Sheep (y=40, x=36, store=380) tries to run away from CW: (y=49, x=28, store=348.0).
--> After 3-Sheep (y=36, x=40, store=380) tried to run away from CW (y=49, x=28, store=348.0).
___________ 3 Sheep tried to run away from CW ___________ 


-> ------------ 4-Sheep initialised with (y=8, x=62, store=490) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=8, x=62, store=490). Will move normally and eat
-->4-Sheep (y=8, x=62, store=490) before normal moving and eating
-->4-Sheep (y=9, x=63, store=500) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=69, x=64, store=490) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=69, x=64, store=490). Will move normally and eat
-->5-Sheep (y=69, x=64, store=490) before normal moving and eating
-->5-Sheep (y=70, x=63, store=500) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=18, x=27, store=290) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=18, x=27, store=290). Will move normally and eat
-->6-Sheep (y=18, x=27, store=290) before normal moving and eating
-->6-Sheep (y=19, x=28, store=300) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=41, x=77, store=490) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=41, x=77, store=490). Will move normally and eat
-->7-Sheep (y=41, x=77, store=490) before normal moving and eating
-->7-Sheep (y=40, x=78, store=500) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________


-> ------------ 8-Sheep initialised with (y=23, x=47, store=390) -----------
--> 8-Sheep looping with 0-Wolf.
--> 8-Sheep looping with 1-Wolf.
--> 8-Sheep looping with 2-Wolf.
--> 8-Sheep looping with 3-Wolf.
--> 8-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->8-Sheep has Store < Min_ernergy(600) (y=23, x=47, store=390). Will move normally and eat
-->8-Sheep (y=23, x=47, store=390) before normal moving and eating
-->8-Sheep (y=24, x=46, store=400) after normal moving and eating
___e2________ 8-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=222, x=57, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=222, x=57, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
---> 0-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=222, x=57, store=100) before normal moving
-->else1 ends: 0-Wolf (y=221, x=56, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=117, x=274, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=117, x=274, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
---> 1-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=117, x=274, store=300) before normal moving
-->else1 ends: 1-Wolf (y=116, x=275, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=215, x=117, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=215, x=117, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
---> 2-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=215, x=117, store=200) before normal moving
-->else1 ends: 2-Wolf (y=216, x=118, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=23, x=155, store=400) --------
--> 3-Wolf has <=Min_energy(500) store (y=23, x=155, store=400). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
---> 3-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=23, x=155, store=400) before normal moving
-->else1 ends: 3-Wolf (y=22, x=154, store=400) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=49, x=28, store=348.0) --------
--> 4-Wolf has <=Min_energy(500) store (y=49, x=28, store=348.0). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
----> action_dist(5) < distance(32.64965543462902) < min_dist(50)
----> Min Distance = 32.64965543462902 for 4-Wolf (y=49, x=28, store=348.0) with 0-Sheep (y=34, x=57, store=350)
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
----> action_dist(5) < distance(30.364452901377952) < min_dist(32.64965543462902)
----> Min Distance = 30.364452901377952 for 4-Wolf (y=49, x=28, store=348.0) with 2-Sheep (y=40, x=57, store=480)
---> 4-Wolf looping with 3-Sheep
----> action_dist(5) < distance(17.69180601295413) < min_dist(30.364452901377952)
----> Min Distance = 17.69180601295413 for 4-Wolf (y=49, x=28, store=348.0) with 3-Sheep (y=36, x=40, store=380)
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
---> 4-Wolf looping with 8-Sheep
-> CS Found!
--> 4-Wolf (y=49, x=28, store=348.0) before moving closer to  Closest-Sheep (y=36, x=40, store=380)
--> 4-Wolf (y=42, x=34, store=348.0) after moving closer to Closest-Sheep (y=36, x=40, store=380)
___________ 4-Wolf moved closer to CS___________
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 10 ************

-> ------------ 0-Sheep initialised with (y=34, x=57, store=350) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
---> d<md+... 0-Sheep noticed closest 4-Wolf ...
---> 0-Sheep (y=34, x=57, store=350) detected 4-Wolf (y=42, x=34, store=348.0) within d=24.351591323771842.
-> CW FOUND.
--> Before 0-Sheep (y=34, x=57, store=350) tries to run away from CW: (y=42, x=34, store=348.0).
--> After 0-Sheep (y=30, x=69, store=350) tried to run away from CW (y=42, x=34, store=348.0).
___________ 0 Sheep tried to run away from CW ___________ 


-> ------------ 1-Sheep initialised with (y=95, x=54, store=400) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=95, x=54, store=400). Will move normally and eat
-->1-Sheep (y=95, x=54, store=400) before normal moving and eating
-->1-Sheep (y=96, x=53, store=410) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=40, x=57, store=480) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
---> d<md+... 2-Sheep noticed closest 4-Wolf ...
---> 2-Sheep (y=40, x=57, store=480) detected 4-Wolf (y=42, x=34, store=348.0) within d=23.08679276123039.
-> CW FOUND.
--> Before 2-Sheep (y=40, x=57, store=480) tries to run away from CW: (y=42, x=34, store=348.0).
--> After 2-Sheep (y=39, x=69, store=480) tried to run away from CW (y=42, x=34, store=348.0).
___________ 2 Sheep tried to run away from CW ___________ 


-> ------------ 3-Sheep initialised with (y=36, x=40, store=380) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
---> d<md+... 3-Sheep noticed closest 4-Wolf ...
---> 3-Sheep (y=36, x=40, store=380) detected 4-Wolf (y=42, x=34, store=348.0) within d=8.48528137423857.
-> CW FOUND.
--> Before 3-Sheep (y=36, x=40, store=380) tries to run away from CW: (y=42, x=34, store=348.0).
--> After 3-Sheep (y=33, x=43, store=380) tried to run away from CW (y=42, x=34, store=348.0).
___________ 3 Sheep tried to run away from CW ___________ 


-> ------------ 4-Sheep initialised with (y=9, x=63, store=500) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=9, x=63, store=500). Will move normally and eat
-->4-Sheep (y=9, x=63, store=500) before normal moving and eating
-->4-Sheep (y=10, x=64, store=510) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=70, x=63, store=500) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=70, x=63, store=500). Will move normally and eat
-->5-Sheep (y=70, x=63, store=500) before normal moving and eating
-->5-Sheep (y=69, x=62, store=510) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=19, x=28, store=300) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
---> d<md+... 6-Sheep noticed closest 4-Wolf ...
---> 6-Sheep (y=19, x=28, store=300) detected 4-Wolf (y=42, x=34, store=348.0) within d=23.769728648009426.
-> CW FOUND.
--> Before 6-Sheep (y=19, x=28, store=300) tries to run away from CW: (y=42, x=34, store=348.0).
--> After 6-Sheep (y=8, x=25, store=300) tried to run away from CW (y=42, x=34, store=348.0).
___________ 6 Sheep tried to run away from CW ___________ 


-> ------------ 7-Sheep initialised with (y=40, x=78, store=500) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=40, x=78, store=500). Will move normally and eat
-->7-Sheep (y=40, x=78, store=500) before normal moving and eating
-->7-Sheep (y=39, x=77, store=510) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________


-> ------------ 8-Sheep initialised with (y=24, x=46, store=400) -----------
--> 8-Sheep looping with 0-Wolf.
--> 8-Sheep looping with 1-Wolf.
--> 8-Sheep looping with 2-Wolf.
--> 8-Sheep looping with 3-Wolf.
--> 8-Sheep looping with 4-Wolf.
---> d<md+... 8-Sheep noticed closest 4-Wolf ...
---> 8-Sheep (y=24, x=46, store=400) detected 4-Wolf (y=42, x=34, store=348.0) within d=21.633307652783937.
-> CW FOUND.
--> Before 8-Sheep (y=24, x=46, store=400) tries to run away from CW: (y=42, x=34, store=348.0).
--> After 8-Sheep (y=15, x=52, store=400) tried to run away from CW (y=42, x=34, store=348.0).
___________ 8 Sheep tried to run away from CW ___________ 

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=221, x=56, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=221, x=56, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
---> 0-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=221, x=56, store=100) before normal moving
-->else1 ends: 0-Wolf (y=222, x=55, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=116, x=275, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=116, x=275, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
---> 1-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=116, x=275, store=300) before normal moving
-->else1 ends: 1-Wolf (y=115, x=274, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=216, x=118, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=216, x=118, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
---> 2-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=216, x=118, store=200) before normal moving
-->else1 ends: 2-Wolf (y=217, x=117, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=22, x=154, store=400) --------
--> 3-Wolf has <=Min_energy(500) store (y=22, x=154, store=400). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
---> 3-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=22, x=154, store=400) before normal moving
-->else1 ends: 3-Wolf (y=21, x=153, store=400) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=42, x=34, store=348.0) --------
--> 4-Wolf has <=Min_energy(500) store (y=42, x=34, store=348.0). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
----> action_dist(5) < distance(37.0) < min_dist(50)
----> Min Distance = 37.0 for 4-Wolf (y=42, x=34, store=348.0) with 0-Sheep (y=30, x=69, store=350)
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
----> action_dist(5) < distance(35.12833614050059) < min_dist(37.0)
----> Min Distance = 35.12833614050059 for 4-Wolf (y=42, x=34, store=348.0) with 2-Sheep (y=39, x=69, store=480)
---> 4-Wolf looping with 3-Sheep
----> action_dist(5) < distance(12.727922061357855) < min_dist(35.12833614050059)
----> Min Distance = 12.727922061357855 for 4-Wolf (y=42, x=34, store=348.0) with 3-Sheep (y=33, x=43, store=380)
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
---> 4-Wolf looping with 8-Sheep
-> CS Found!
--> 4-Wolf (y=42, x=34, store=348.0) before moving closer to  Closest-Sheep (y=33, x=43, store=380)
--> 4-Wolf (y=37, x=38, store=348.0) after moving closer to Closest-Sheep (y=33, x=43, store=380)
___________ 4-Wolf moved closer to CS___________
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 11 ************

-> ------------ 0-Sheep initialised with (y=30, x=69, store=350) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=30, x=69, store=350). Will move normally and eat
-->0-Sheep (y=30, x=69, store=350) before normal moving and eating
-->0-Sheep (y=31, x=70, store=360) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=96, x=53, store=410) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=96, x=53, store=410). Will move normally and eat
-->1-Sheep (y=96, x=53, store=410) before normal moving and eating
-->1-Sheep (y=95, x=52, store=420) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=39, x=69, store=480) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=39, x=69, store=480). Will move normally and eat
-->2-Sheep (y=39, x=69, store=480) before normal moving and eating
-->2-Sheep (y=38, x=70, store=490) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=33, x=43, store=380) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
---> d<md+... 3-Sheep noticed closest 4-Wolf ...
---> 3-Sheep (y=33, x=43, store=380) detected 4-Wolf (y=37, x=38, store=348.0) within d=6.4031242374328485.
-> CW FOUND.
--> Before 3-Sheep (y=33, x=43, store=380) tries to run away from CW: (y=37, x=38, store=348.0).
--> After 3-Sheep (y=31, x=46, store=380) tried to run away from CW (y=37, x=38, store=348.0).
___________ 3 Sheep tried to run away from CW ___________ 


-> ------------ 4-Sheep initialised with (y=10, x=64, store=510) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=10, x=64, store=510). Will move normally and eat
-->4-Sheep (y=10, x=64, store=510) before normal moving and eating
-->4-Sheep (y=11, x=65, store=520) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=69, x=62, store=510) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=69, x=62, store=510). Will move normally and eat
-->5-Sheep (y=69, x=62, store=510) before normal moving and eating
-->5-Sheep (y=70, x=63, store=520) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=8, x=25, store=300) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=8, x=25, store=300). Will move normally and eat
-->6-Sheep (y=8, x=25, store=300) before normal moving and eating
-->6-Sheep (y=9, x=26, store=310) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=39, x=77, store=510) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=39, x=77, store=510). Will move normally and eat
-->7-Sheep (y=39, x=77, store=510) before normal moving and eating
-->7-Sheep (y=38, x=78, store=520) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________


-> ------------ 8-Sheep initialised with (y=15, x=52, store=400) -----------
--> 8-Sheep looping with 0-Wolf.
--> 8-Sheep looping with 1-Wolf.
--> 8-Sheep looping with 2-Wolf.
--> 8-Sheep looping with 3-Wolf.
--> 8-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->8-Sheep has Store < Min_ernergy(600) (y=15, x=52, store=400). Will move normally and eat
-->8-Sheep (y=15, x=52, store=400) before normal moving and eating
-->8-Sheep (y=14, x=51, store=410) after normal moving and eating
___e2________ 8-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=222, x=55, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=222, x=55, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
---> 0-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=222, x=55, store=100) before normal moving
-->else1 ends: 0-Wolf (y=223, x=54, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=115, x=274, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=115, x=274, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
---> 1-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=115, x=274, store=300) before normal moving
-->else1 ends: 1-Wolf (y=114, x=273, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=217, x=117, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=217, x=117, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
---> 2-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=217, x=117, store=200) before normal moving
-->else1 ends: 2-Wolf (y=218, x=118, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=21, x=153, store=400) --------
--> 3-Wolf has <=Min_energy(500) store (y=21, x=153, store=400). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
---> 3-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=21, x=153, store=400) before normal moving
-->else1 ends: 3-Wolf (y=22, x=152, store=400) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=37, x=38, store=348.0) --------
--> 4-Wolf has <=Min_energy(500) store (y=37, x=38, store=348.0). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
----> action_dist(5) < distance(32.55764119219941) < min_dist(50)
----> Min Distance = 32.55764119219941 for 4-Wolf (y=37, x=38, store=348.0) with 0-Sheep (y=31, x=70, store=360)
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
----> action_dist(5) < distance(32.01562118716424) < min_dist(32.55764119219941)
----> Min Distance = 32.01562118716424 for 4-Wolf (y=37, x=38, store=348.0) with 2-Sheep (y=38, x=70, store=490)
---> 4-Wolf looping with 3-Sheep
----> action_dist(5) < distance(10.0) < min_dist(32.01562118716424)
----> Min Distance = 10.0 for 4-Wolf (y=37, x=38, store=348.0) with 3-Sheep (y=31, x=46, store=380)
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
---> 4-Wolf looping with 8-Sheep
-> CS Found!
--> 4-Wolf (y=37, x=38, store=348.0) before moving closer to  Closest-Sheep (y=31, x=46, store=380)
--> 4-Wolf (y=34, x=42, store=348.0) after moving closer to Closest-Sheep (y=31, x=46, store=380)
___________ 4-Wolf moved closer to CS___________
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 12 ************

-> ------------ 0-Sheep initialised with (y=31, x=70, store=360) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=31, x=70, store=360). Will move normally and eat
-->0-Sheep (y=31, x=70, store=360) before normal moving and eating
-->0-Sheep (y=30, x=69, store=370) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=95, x=52, store=420) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=95, x=52, store=420). Will move normally and eat
-->1-Sheep (y=95, x=52, store=420) before normal moving and eating
-->1-Sheep (y=96, x=51, store=430) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=38, x=70, store=490) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=38, x=70, store=490). Will move normally and eat
-->2-Sheep (y=38, x=70, store=490) before normal moving and eating
-->2-Sheep (y=37, x=71, store=500) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=31, x=46, store=380) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
---> d<md+... 3-Sheep noticed closest 4-Wolf ...
---> 3-Sheep (y=31, x=46, store=380) detected 4-Wolf (y=34, x=42, store=348.0) within d=5.0.
-> CW FOUND.
--> Before 3-Sheep (y=31, x=46, store=380) tries to run away from CW: (y=34, x=42, store=348.0).
--> After 3-Sheep (y=30, x=48, store=380) tried to run away from CW (y=34, x=42, store=348.0).
___________ 3 Sheep tried to run away from CW ___________ 


-> ------------ 4-Sheep initialised with (y=11, x=65, store=520) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=11, x=65, store=520). Will move normally and eat
-->4-Sheep (y=11, x=65, store=520) before normal moving and eating
-->4-Sheep (y=10, x=66, store=530) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=70, x=63, store=520) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=70, x=63, store=520). Will move normally and eat
-->5-Sheep (y=70, x=63, store=520) before normal moving and eating
-->5-Sheep (y=71, x=62, store=530) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=9, x=26, store=310) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=9, x=26, store=310). Will move normally and eat
-->6-Sheep (y=9, x=26, store=310) before normal moving and eating
-->6-Sheep (y=10, x=27, store=320) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=38, x=78, store=520) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=38, x=78, store=520). Will move normally and eat
-->7-Sheep (y=38, x=78, store=520) before normal moving and eating
-->7-Sheep (y=37, x=77, store=530) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________


-> ------------ 8-Sheep initialised with (y=14, x=51, store=410) -----------
--> 8-Sheep looping with 0-Wolf.
--> 8-Sheep looping with 1-Wolf.
--> 8-Sheep looping with 2-Wolf.
--> 8-Sheep looping with 3-Wolf.
--> 8-Sheep looping with 4-Wolf.
---> d<md+... 8-Sheep noticed closest 4-Wolf ...
---> 8-Sheep (y=14, x=51, store=410) detected 4-Wolf (y=34, x=42, store=348.0) within d=21.93171219946131.
-> CW FOUND.
--> Before 8-Sheep (y=14, x=51, store=410) tries to run away from CW: (y=34, x=42, store=348.0).
--> After 8-Sheep (y=4, x=56, store=410) tried to run away from CW (y=34, x=42, store=348.0).
___________ 8 Sheep tried to run away from CW ___________ 

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=223, x=54, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=223, x=54, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
---> 0-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=223, x=54, store=100) before normal moving
-->else1 ends: 0-Wolf (y=224, x=55, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=114, x=273, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=114, x=273, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
---> 1-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=114, x=273, store=300) before normal moving
-->else1 ends: 1-Wolf (y=115, x=274, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=218, x=118, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=218, x=118, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
---> 2-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=218, x=118, store=200) before normal moving
-->else1 ends: 2-Wolf (y=217, x=119, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=22, x=152, store=400) --------
--> 3-Wolf has <=Min_energy(500) store (y=22, x=152, store=400). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
---> 3-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=22, x=152, store=400) before normal moving
-->else1 ends: 3-Wolf (y=23, x=153, store=400) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=34, x=42, store=348.0) --------
--> 4-Wolf has <=Min_energy(500) store (y=34, x=42, store=348.0). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
----> action_dist(5) < distance(27.294688127912362) < min_dist(50)
----> Min Distance = 27.294688127912362 for 4-Wolf (y=34, x=42, store=348.0) with 0-Sheep (y=30, x=69, store=370)
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
----> action_dist(5) < distance(7.211102550927978) < min_dist(27.294688127912362)
----> Min Distance = 7.211102550927978 for 4-Wolf (y=34, x=42, store=348.0) with 3-Sheep (y=30, x=48, store=380)
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
---> 4-Wolf looping with 8-Sheep
-> CS Found!
--> 4-Wolf (y=34, x=42, store=348.0) before moving closer to  Closest-Sheep (y=30, x=48, store=380)
--> 4-Wolf (y=32, x=45, store=348.0) after moving closer to Closest-Sheep (y=30, x=48, store=380)
___________ 4-Wolf moved closer to CS___________
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 13 ************

-> ------------ 0-Sheep initialised with (y=30, x=69, store=370) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
---> d<md+... 0-Sheep noticed closest 4-Wolf ...
---> 0-Sheep (y=30, x=69, store=370) detected 4-Wolf (y=32, x=45, store=348.0) within d=24.08318915758459.
-> CW FOUND.
--> Before 0-Sheep (y=30, x=69, store=370) tries to run away from CW: (y=32, x=45, store=348.0).
--> After 0-Sheep (y=29, x=81, store=370) tried to run away from CW (y=32, x=45, store=348.0).
___________ 0 Sheep tried to run away from CW ___________ 


-> ------------ 1-Sheep initialised with (y=96, x=51, store=430) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=96, x=51, store=430). Will move normally and eat
-->1-Sheep (y=96, x=51, store=430) before normal moving and eating
-->1-Sheep (y=95, x=52, store=440) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=37, x=71, store=500) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=37, x=71, store=500). Will move normally and eat
-->2-Sheep (y=37, x=71, store=500) before normal moving and eating
-->2-Sheep (y=36, x=72, store=510) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=30, x=48, store=380) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
---> d<md+... 3-Sheep noticed closest 4-Wolf ...
---> 3-Sheep (y=30, x=48, store=380) detected 4-Wolf (y=32, x=45, store=348.0) within d=3.605551275463989.
-> CW FOUND.
--> Before 3-Sheep (y=30, x=48, store=380) tries to run away from CW: (y=32, x=45, store=348.0).
--> After 3-Sheep (y=29, x=50, store=380) tried to run away from CW (y=32, x=45, store=348.0).
___________ 3 Sheep tried to run away from CW ___________ 


-> ------------ 4-Sheep initialised with (y=10, x=66, store=530) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=10, x=66, store=530). Will move normally and eat
-->4-Sheep (y=10, x=66, store=530) before normal moving and eating
-->4-Sheep (y=11, x=67, store=540) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=71, x=62, store=530) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=71, x=62, store=530). Will move normally and eat
-->5-Sheep (y=71, x=62, store=530) before normal moving and eating
-->5-Sheep (y=70, x=61, store=540) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=10, x=27, store=320) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=10, x=27, store=320). Will move normally and eat
-->6-Sheep (y=10, x=27, store=320) before normal moving and eating
-->6-Sheep (y=11, x=26, store=330) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=37, x=77, store=530) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=37, x=77, store=530). Will move normally and eat
-->7-Sheep (y=37, x=77, store=530) before normal moving and eating
-->7-Sheep (y=36, x=76, store=540) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________


-> ------------ 8-Sheep initialised with (y=4, x=56, store=410) -----------
--> 8-Sheep looping with 0-Wolf.
--> 8-Sheep looping with 1-Wolf.
--> 8-Sheep looping with 2-Wolf.
--> 8-Sheep looping with 3-Wolf.
--> 8-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->8-Sheep has Store < Min_ernergy(600) (y=4, x=56, store=410). Will move normally and eat
-->8-Sheep (y=4, x=56, store=410) before normal moving and eating
-->8-Sheep (y=5, x=57, store=420) after normal moving and eating
___e2________ 8-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=224, x=55, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=224, x=55, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
---> 0-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=224, x=55, store=100) before normal moving
-->else1 ends: 0-Wolf (y=223, x=54, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=115, x=274, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=115, x=274, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
---> 1-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=115, x=274, store=300) before normal moving
-->else1 ends: 1-Wolf (y=114, x=273, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=217, x=119, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=217, x=119, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
---> 2-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=217, x=119, store=200) before normal moving
-->else1 ends: 2-Wolf (y=216, x=120, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=23, x=153, store=400) --------
--> 3-Wolf has <=Min_energy(500) store (y=23, x=153, store=400). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
---> 3-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=23, x=153, store=400) before normal moving
-->else1 ends: 3-Wolf (y=22, x=152, store=400) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=32, x=45, store=348.0) --------
--> 4-Wolf has <=Min_energy(500) store (y=32, x=45, store=348.0). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
----> action_dist(5) < distance(36.124783736376884) < min_dist(50)
----> Min Distance = 36.124783736376884 for 4-Wolf (y=32, x=45, store=348.0) with 0-Sheep (y=29, x=81, store=370)
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
----> action_dist(5) < distance(27.294688127912362) < min_dist(36.124783736376884)
----> Min Distance = 27.294688127912362 for 4-Wolf (y=32, x=45, store=348.0) with 2-Sheep (y=36, x=72, store=510)
---> 4-Wolf looping with 3-Sheep
----> action_dist(5) < distance(5.830951894845301) < min_dist(27.294688127912362)
----> Min Distance = 5.830951894845301 for 4-Wolf (y=32, x=45, store=348.0) with 3-Sheep (y=29, x=50, store=380)
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
---> 4-Wolf looping with 8-Sheep
-> CS Found!
--> 4-Wolf (y=32, x=45, store=348.0) before moving closer to  Closest-Sheep (y=29, x=50, store=380)
--> 4-Wolf (y=30, x=47, store=348.0) after moving closer to Closest-Sheep (y=29, x=50, store=380)
___________ 4-Wolf moved closer to CS___________
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 14 ************

-> ------------ 0-Sheep initialised with (y=29, x=81, store=370) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=29, x=81, store=370). Will move normally and eat
-->0-Sheep (y=29, x=81, store=370) before normal moving and eating
-->0-Sheep (y=30, x=80, store=380) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=95, x=52, store=440) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=95, x=52, store=440). Will move normally and eat
-->1-Sheep (y=95, x=52, store=440) before normal moving and eating
-->1-Sheep (y=96, x=53, store=450) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=36, x=72, store=510) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=36, x=72, store=510). Will move normally and eat
-->2-Sheep (y=36, x=72, store=510) before normal moving and eating
-->2-Sheep (y=37, x=71, store=520) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=29, x=50, store=380) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
---> d<md+... 3-Sheep noticed closest 4-Wolf ...
---> 3-Sheep (y=29, x=50, store=380) detected 4-Wolf (y=30, x=47, store=348.0) within d=3.1622776601683795.
-> CW FOUND.
--> Before 3-Sheep (y=29, x=50, store=380) tries to run away from CW: (y=30, x=47, store=348.0).
--> After 3-Sheep (y=29, x=52, store=380) tried to run away from CW (y=30, x=47, store=348.0).
___________ 3 Sheep tried to run away from CW ___________ 


-> ------------ 4-Sheep initialised with (y=11, x=67, store=540) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=11, x=67, store=540). Will move normally and eat
-->4-Sheep (y=11, x=67, store=540) before normal moving and eating
-->4-Sheep (y=12, x=68, store=550) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=70, x=61, store=540) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=70, x=61, store=540). Will move normally and eat
-->5-Sheep (y=70, x=61, store=540) before normal moving and eating
-->5-Sheep (y=71, x=60, store=550) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=11, x=26, store=330) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=11, x=26, store=330). Will move normally and eat
-->6-Sheep (y=11, x=26, store=330) before normal moving and eating
-->6-Sheep (y=10, x=27, store=340) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=36, x=76, store=540) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=36, x=76, store=540). Will move normally and eat
-->7-Sheep (y=36, x=76, store=540) before normal moving and eating
-->7-Sheep (y=37, x=77, store=550) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________


-> ------------ 8-Sheep initialised with (y=5, x=57, store=420) -----------
--> 8-Sheep looping with 0-Wolf.
--> 8-Sheep looping with 1-Wolf.
--> 8-Sheep looping with 2-Wolf.
--> 8-Sheep looping with 3-Wolf.
--> 8-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->8-Sheep has Store < Min_ernergy(600) (y=5, x=57, store=420). Will move normally and eat
-->8-Sheep (y=5, x=57, store=420) before normal moving and eating
-->8-Sheep (y=6, x=56, store=430) after normal moving and eating
___e2________ 8-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=223, x=54, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=223, x=54, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
---> 0-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=223, x=54, store=100) before normal moving
-->else1 ends: 0-Wolf (y=224, x=55, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=114, x=273, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=114, x=273, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
---> 1-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=114, x=273, store=300) before normal moving
-->else1 ends: 1-Wolf (y=115, x=272, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=216, x=120, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=216, x=120, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
---> 2-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=216, x=120, store=200) before normal moving
-->else1 ends: 2-Wolf (y=217, x=121, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=22, x=152, store=400) --------
--> 3-Wolf has <=Min_energy(500) store (y=22, x=152, store=400). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
---> 3-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=22, x=152, store=400) before normal moving
-->else1 ends: 3-Wolf (y=23, x=151, store=400) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=30, x=47, store=348.0) --------
--> 4-Wolf has <=Min_energy(500) store (y=30, x=47, store=348.0). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
----> action_dist(5) < distance(33.0) < min_dist(50)
----> Min Distance = 33.0 for 4-Wolf (y=30, x=47, store=348.0) with 0-Sheep (y=30, x=80, store=380)
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
----> action_dist(5) < distance(25.0) < min_dist(33.0)
----> Min Distance = 25.0 for 4-Wolf (y=30, x=47, store=348.0) with 2-Sheep (y=37, x=71, store=520)
---> 4-Wolf looping with 3-Sheep
----> action_dist(5) < distance(5.0990195135927845) < min_dist(25.0)
----> Min Distance = 5.0990195135927845 for 4-Wolf (y=30, x=47, store=348.0) with 3-Sheep (y=29, x=52, store=380)
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
---> 4-Wolf looping with 8-Sheep
-> CS Found!
--> 4-Wolf (y=30, x=47, store=348.0) before moving closer to  Closest-Sheep (y=29, x=52, store=380)
--> 4-Wolf (y=29, x=49, store=348.0) after moving closer to Closest-Sheep (y=29, x=52, store=380)
___________ 4-Wolf moved closer to CS___________
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 15 ************

-> ------------ 0-Sheep initialised with (y=30, x=80, store=380) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=30, x=80, store=380). Will move normally and eat
-->0-Sheep (y=30, x=80, store=380) before normal moving and eating
-->0-Sheep (y=31, x=79, store=390) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=96, x=53, store=450) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=96, x=53, store=450). Will move normally and eat
-->1-Sheep (y=96, x=53, store=450) before normal moving and eating
-->1-Sheep (y=95, x=52, store=460) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=37, x=71, store=520) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
---> d<md+... 2-Sheep noticed closest 4-Wolf ...
---> 2-Sheep (y=37, x=71, store=520) detected 4-Wolf (y=29, x=49, store=348.0) within d=23.40939982143925.
-> CW FOUND.
--> Before 2-Sheep (y=37, x=71, store=520) tries to run away from CW: (y=29, x=49, store=348.0).
--> After 2-Sheep (y=41, x=82, store=520) tried to run away from CW (y=29, x=49, store=348.0).
___________ 2 Sheep tried to run away from CW ___________ 


-> ------------ 3-Sheep initialised with (y=29, x=52, store=380) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
---> d<md+... 3-Sheep noticed closest 4-Wolf ...
---> 3-Sheep (y=29, x=52, store=380) detected 4-Wolf (y=29, x=49, store=348.0) within d=3.0.
-> CW FOUND.
--> Before 3-Sheep (y=29, x=52, store=380) tries to run away from CW: (y=29, x=49, store=348.0).
--> After 3-Sheep (y=29, x=54, store=380) tried to run away from CW (y=29, x=49, store=348.0).
___________ 3 Sheep tried to run away from CW ___________ 


-> ------------ 4-Sheep initialised with (y=12, x=68, store=550) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=12, x=68, store=550). Will move normally and eat
-->4-Sheep (y=12, x=68, store=550) before normal moving and eating
-->4-Sheep (y=13, x=67, store=560) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=71, x=60, store=550) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=71, x=60, store=550). Will move normally and eat
-->5-Sheep (y=71, x=60, store=550) before normal moving and eating
-->5-Sheep (y=72, x=59, store=560) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=10, x=27, store=340) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=10, x=27, store=340). Will move normally and eat
-->6-Sheep (y=10, x=27, store=340) before normal moving and eating
-->6-Sheep (y=9, x=26, store=350) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=37, x=77, store=550) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=37, x=77, store=550). Will move normally and eat
-->7-Sheep (y=37, x=77, store=550) before normal moving and eating
-->7-Sheep (y=36, x=78, store=560) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________


-> ------------ 8-Sheep initialised with (y=6, x=56, store=430) -----------
--> 8-Sheep looping with 0-Wolf.
--> 8-Sheep looping with 1-Wolf.
--> 8-Sheep looping with 2-Wolf.
--> 8-Sheep looping with 3-Wolf.
--> 8-Sheep looping with 4-Wolf.
---> d<md+... 8-Sheep noticed closest 4-Wolf ...
---> 8-Sheep (y=6, x=56, store=430) detected 4-Wolf (y=29, x=49, store=348.0) within d=24.041630560342615.
-> CW FOUND.
--> Before 8-Sheep (y=6, x=56, store=430) tries to run away from CW: (y=29, x=49, store=348.0).
--> After 8-Sheep (y=0, x=60, store=430) tried to run away from CW (y=29, x=49, store=348.0).
___________ 8 Sheep tried to run away from CW ___________ 

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=224, x=55, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=224, x=55, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
---> 0-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=224, x=55, store=100) before normal moving
-->else1 ends: 0-Wolf (y=223, x=54, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=115, x=272, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=115, x=272, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
---> 1-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=115, x=272, store=300) before normal moving
-->else1 ends: 1-Wolf (y=116, x=271, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=217, x=121, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=217, x=121, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
---> 2-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=217, x=121, store=200) before normal moving
-->else1 ends: 2-Wolf (y=216, x=122, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=23, x=151, store=400) --------
--> 3-Wolf has <=Min_energy(500) store (y=23, x=151, store=400). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
---> 3-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=23, x=151, store=400) before normal moving
-->else1 ends: 3-Wolf (y=24, x=152, store=400) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=29, x=49, store=348.0) --------
--> 4-Wolf has <=Min_energy(500) store (y=29, x=49, store=348.0). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
----> action_dist(5) < distance(30.066592756745816) < min_dist(50)
----> Min Distance = 30.066592756745816 for 4-Wolf (y=29, x=49, store=348.0) with 0-Sheep (y=31, x=79, store=390)
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
----> d<=action_dist found
----> 4-Wolf (y=29, x=49, store=348.0) before eating 3-Sheep (y=29, x=54, store=380)
----> 4-Wolf (y=29, x=49, store=652.0) after eating 3-Sheep (y=29, x=54, store=0). Env received (76.0)
___________ Eaten=True. 4-Wolf one ate 3-Sheep__________
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 16 ************

-> ------------ 0-Sheep initialised with (y=31, x=79, store=390) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=31, x=79, store=390). Will move normally and eat
-->0-Sheep (y=31, x=79, store=390) before normal moving and eating
-->0-Sheep (y=32, x=78, store=400) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=95, x=52, store=460) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=95, x=52, store=460). Will move normally and eat
-->1-Sheep (y=95, x=52, store=460) before normal moving and eating
-->1-Sheep (y=94, x=51, store=470) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=41, x=82, store=520) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=41, x=82, store=520). Will move normally and eat
-->2-Sheep (y=41, x=82, store=520) before normal moving and eating
-->2-Sheep (y=42, x=83, store=530) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=13, x=67, store=560) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
---> d<md+... 3-Sheep noticed closest 4-Wolf ...
---> 3-Sheep (y=13, x=67, store=560) detected 4-Wolf (y=29, x=49, store=652.0) within d=24.08318915758459.
-> CW FOUND.
--> Before 3-Sheep (y=13, x=67, store=560) tries to run away from CW: (y=29, x=49, store=652.0).
--> After 3-Sheep (y=5, x=76, store=560) tried to run away from CW (y=29, x=49, store=652.0).
___________ 3 Sheep tried to run away from CW ___________ 


-> ------------ 4-Sheep initialised with (y=72, x=59, store=560) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=72, x=59, store=560). Will move normally and eat
-->4-Sheep (y=72, x=59, store=560) before normal moving and eating
-->4-Sheep (y=73, x=58, store=570) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=9, x=26, store=350) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=9, x=26, store=350). Will move normally and eat
-->5-Sheep (y=9, x=26, store=350) before normal moving and eating
-->5-Sheep (y=8, x=27, store=360) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=36, x=78, store=560) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=36, x=78, store=560). Will move normally and eat
-->6-Sheep (y=36, x=78, store=560) before normal moving and eating
-->6-Sheep (y=35, x=77, store=570) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=0, x=60, store=430) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=0, x=60, store=430). Will move normally and eat
-->7-Sheep (y=0, x=60, store=430) before normal moving and eating
-->7-Sheep (y=1, x=59, store=440) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=223, x=54, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=223, x=54, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=223, x=54, store=100) before normal moving
-->else1 ends: 0-Wolf (y=222, x=53, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=116, x=271, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=116, x=271, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=116, x=271, store=300) before normal moving
-->else1 ends: 1-Wolf (y=115, x=272, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=216, x=122, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=216, x=122, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=216, x=122, store=200) before normal moving
-->else1 ends: 2-Wolf (y=217, x=123, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=24, x=152, store=400) --------
--> 3-Wolf has <=Min_energy(500) store (y=24, x=152, store=400). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=24, x=152, store=400) before normal moving
-->else1 ends: 3-Wolf (y=23, x=151, store=400) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=29, x=49, store=652.0) --------
--> if and elif not satisfied
--> 4-Wolf has > Min_energy(500) store (y=29, x=49, store=652.0) but Random < bf_e/2(0.25). So will move normally.
--->else3 begins: 4-Wolf (y=29, x=49, store=652.0) before normal moving.
--->else3 begins: 4-Wolf (y=28, x=50, store=652.0) after normal moving.
....e3_______ 4-Wolf moved normally_______
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 17 ************

-> ------------ 0-Sheep initialised with (y=32, x=78, store=400) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=32, x=78, store=400). Will move normally and eat
-->0-Sheep (y=32, x=78, store=400) before normal moving and eating
-->0-Sheep (y=33, x=77, store=410) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=94, x=51, store=470) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=94, x=51, store=470). Will move normally and eat
-->1-Sheep (y=94, x=51, store=470) before normal moving and eating
-->1-Sheep (y=93, x=50, store=480) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=42, x=83, store=530) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=42, x=83, store=530). Will move normally and eat
-->2-Sheep (y=42, x=83, store=530) before normal moving and eating
-->2-Sheep (y=41, x=82, store=540) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=5, x=76, store=560) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=5, x=76, store=560). Will move normally and eat
-->3-Sheep (y=5, x=76, store=560) before normal moving and eating
-->3-Sheep (y=6, x=75, store=570) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=73, x=58, store=570) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=73, x=58, store=570). Will move normally and eat
-->4-Sheep (y=73, x=58, store=570) before normal moving and eating
-->4-Sheep (y=74, x=57, store=580) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=8, x=27, store=360) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=8, x=27, store=360). Will move normally and eat
-->5-Sheep (y=8, x=27, store=360) before normal moving and eating
-->5-Sheep (y=7, x=26, store=370) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=35, x=77, store=570) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=35, x=77, store=570). Will move normally and eat
-->6-Sheep (y=35, x=77, store=570) before normal moving and eating
-->6-Sheep (y=34, x=76, store=580) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=1, x=59, store=440) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=1, x=59, store=440). Will move normally and eat
-->7-Sheep (y=1, x=59, store=440) before normal moving and eating
-->7-Sheep (y=2, x=60, store=450) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=222, x=53, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=222, x=53, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=222, x=53, store=100) before normal moving
-->else1 ends: 0-Wolf (y=223, x=52, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=115, x=272, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=115, x=272, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=115, x=272, store=300) before normal moving
-->else1 ends: 1-Wolf (y=114, x=271, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=217, x=123, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=217, x=123, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=217, x=123, store=200) before normal moving
-->else1 ends: 2-Wolf (y=216, x=122, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=23, x=151, store=400) --------
--> 3-Wolf has <=Min_energy(500) store (y=23, x=151, store=400). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=23, x=151, store=400) before normal moving
-->else1 ends: 3-Wolf (y=24, x=152, store=400) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=28, x=50, store=652.0) --------
--> 4-Wolf has >Min_energy(500) store (y=28, x=50, store=652.0) and 0.25 <= random.random() < 0.5. Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
----> action_dist(5) < distance(27.459060435491963) < min_dist(50)
----> Min Distance = 27.459060435491963 for 4-Wolf (y=28, x=50, store=652.0) with 0-Sheep (y=33, x=77, store=410)
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
----> action_dist(5) < distance(26.68332812825267) < min_dist(27.459060435491963)
----> Min Distance = 26.68332812825267 for 4-Wolf (y=28, x=50, store=652.0) with 6-Sheep (y=34, x=76, store=580)
---> 4-Wolf looping with 7-Sheep
-> CS Found!
--> 4-Wolf (y=28, x=50, store=652.0) before moving closer to  Closest-Sheep (y=34, x=76, store=580)
--> 4-Wolf (y=31, x=63, store=652.0) after moving closer to Closest-Sheep (y=34, x=76, store=580)
___________ 4-Wolf moved closer to CS___________
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 18 ************

-> ------------ 0-Sheep initialised with (y=33, x=77, store=410) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
---> d<md+... 0-Sheep noticed closest 4-Wolf ...
---> 0-Sheep (y=33, x=77, store=410) detected 4-Wolf (y=31, x=63, store=652.0) within d=14.142135623730951.
-> CW FOUND.
--> Before 0-Sheep (y=33, x=77, store=410) tries to run away from CW: (y=31, x=63, store=652.0).
--> After 0-Sheep (y=34, x=84, store=410) tried to run away from CW (y=31, x=63, store=652.0).
___________ 0 Sheep tried to run away from CW ___________ 


-> ------------ 1-Sheep initialised with (y=93, x=50, store=480) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=93, x=50, store=480). Will move normally and eat
-->1-Sheep (y=93, x=50, store=480) before normal moving and eating
-->1-Sheep (y=94, x=49, store=490) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=41, x=82, store=540) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
---> d<md+... 2-Sheep noticed closest 4-Wolf ...
---> 2-Sheep (y=41, x=82, store=540) detected 4-Wolf (y=31, x=63, store=652.0) within d=21.470910553583888.
-> CW FOUND.
--> Before 2-Sheep (y=41, x=82, store=540) tries to run away from CW: (y=31, x=63, store=652.0).
--> After 2-Sheep (y=46, x=92, store=540) tried to run away from CW (y=31, x=63, store=652.0).
___________ 2 Sheep tried to run away from CW ___________ 


-> ------------ 3-Sheep initialised with (y=6, x=75, store=570) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=6, x=75, store=570). Will move normally and eat
-->3-Sheep (y=6, x=75, store=570) before normal moving and eating
-->3-Sheep (y=7, x=74, store=580) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=74, x=57, store=580) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=74, x=57, store=580). Will move normally and eat
-->4-Sheep (y=74, x=57, store=580) before normal moving and eating
-->4-Sheep (y=73, x=58, store=590) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=7, x=26, store=370) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=7, x=26, store=370). Will move normally and eat
-->5-Sheep (y=7, x=26, store=370) before normal moving and eating
-->5-Sheep (y=8, x=27, store=380) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=34, x=76, store=580) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
---> d<md+... 6-Sheep noticed closest 4-Wolf ...
---> 6-Sheep (y=34, x=76, store=580) detected 4-Wolf (y=31, x=63, store=652.0) within d=13.341664064126334.
-> CW FOUND.
--> Before 6-Sheep (y=34, x=76, store=580) tries to run away from CW: (y=31, x=63, store=652.0).
--> After 6-Sheep (y=36, x=83, store=580) tried to run away from CW (y=31, x=63, store=652.0).
___________ 6 Sheep tried to run away from CW ___________ 


-> ------------ 7-Sheep initialised with (y=2, x=60, store=450) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=2, x=60, store=450). Will move normally and eat
-->7-Sheep (y=2, x=60, store=450) before normal moving and eating
-->7-Sheep (y=3, x=61, store=460) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=223, x=52, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=223, x=52, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=223, x=52, store=100) before normal moving
-->else1 ends: 0-Wolf (y=224, x=51, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=114, x=271, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=114, x=271, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=114, x=271, store=300) before normal moving
-->else1 ends: 1-Wolf (y=113, x=270, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=216, x=122, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=216, x=122, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=216, x=122, store=200) before normal moving
-->else1 ends: 2-Wolf (y=215, x=123, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=24, x=152, store=400) --------
--> 3-Wolf has <=Min_energy(500) store (y=24, x=152, store=400). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=24, x=152, store=400) before normal moving
-->else1 ends: 3-Wolf (y=25, x=153, store=400) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=31, x=63, store=652.0) --------
--> 4-Wolf has >Min_energy(500) store (y=31, x=63, store=652.0) and 0.25 <= random.random() < 0.5. Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
----> action_dist(5) < distance(21.213203435596427) < min_dist(50)
----> Min Distance = 21.213203435596427 for 4-Wolf (y=31, x=63, store=652.0) with 0-Sheep (y=34, x=84, store=410)
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
----> action_dist(5) < distance(20.615528128088304) < min_dist(21.213203435596427)
----> Min Distance = 20.615528128088304 for 4-Wolf (y=31, x=63, store=652.0) with 6-Sheep (y=36, x=83, store=580)
---> 4-Wolf looping with 7-Sheep
-> CS Found!
--> 4-Wolf (y=31, x=63, store=652.0) before moving closer to  Closest-Sheep (y=36, x=83, store=580)
--> 4-Wolf (y=33, x=73, store=652.0) after moving closer to Closest-Sheep (y=36, x=83, store=580)
___________ 4-Wolf moved closer to CS___________
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 19 ************

-> ------------ 0-Sheep initialised with (y=34, x=84, store=410) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
---> d<md+... 0-Sheep noticed closest 4-Wolf ...
---> 0-Sheep (y=34, x=84, store=410) detected 4-Wolf (y=33, x=73, store=652.0) within d=11.045361017187261.
-> CW FOUND.
--> Before 0-Sheep (y=34, x=84, store=410) tries to run away from CW: (y=33, x=73, store=652.0).
--> After 0-Sheep (y=35, x=90, store=410) tried to run away from CW (y=33, x=73, store=652.0).
___________ 0 Sheep tried to run away from CW ___________ 


-> ------------ 1-Sheep initialised with (y=94, x=49, store=490) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=94, x=49, store=490). Will move normally and eat
-->1-Sheep (y=94, x=49, store=490) before normal moving and eating
-->1-Sheep (y=95, x=50, store=500) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=46, x=92, store=540) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
---> d<md+... 2-Sheep noticed closest 4-Wolf ...
---> 2-Sheep (y=46, x=92, store=540) detected 4-Wolf (y=33, x=73, store=652.0) within d=23.021728866442675.
-> CW FOUND.
--> Before 2-Sheep (y=46, x=92, store=540) tries to run away from CW: (y=33, x=73, store=652.0).
--> After 2-Sheep (y=53, x=102, store=540) tried to run away from CW (y=33, x=73, store=652.0).
___________ 2 Sheep tried to run away from CW ___________ 


-> ------------ 3-Sheep initialised with (y=7, x=74, store=580) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=7, x=74, store=580). Will move normally and eat
-->3-Sheep (y=7, x=74, store=580) before normal moving and eating
-->3-Sheep (y=6, x=73, store=590) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=73, x=58, store=590) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=73, x=58, store=590). Will move normally and eat
-->4-Sheep (y=73, x=58, store=590) before normal moving and eating
-->4-Sheep (y=74, x=59, store=600) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=8, x=27, store=380) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=8, x=27, store=380). Will move normally and eat
-->5-Sheep (y=8, x=27, store=380) before normal moving and eating
-->5-Sheep (y=7, x=28, store=390) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=36, x=83, store=580) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
---> d<md+... 6-Sheep noticed closest 4-Wolf ...
---> 6-Sheep (y=36, x=83, store=580) detected 4-Wolf (y=33, x=73, store=652.0) within d=10.44030650891055.
-> CW FOUND.
--> Before 6-Sheep (y=36, x=83, store=580) tries to run away from CW: (y=33, x=73, store=652.0).
--> After 6-Sheep (y=38, x=88, store=580) tried to run away from CW (y=33, x=73, store=652.0).
___________ 6 Sheep tried to run away from CW ___________ 


-> ------------ 7-Sheep initialised with (y=3, x=61, store=460) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=3, x=61, store=460). Will move normally and eat
-->7-Sheep (y=3, x=61, store=460) before normal moving and eating
-->7-Sheep (y=4, x=62, store=470) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=224, x=51, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=224, x=51, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=224, x=51, store=100) before normal moving
-->else1 ends: 0-Wolf (y=223, x=50, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=113, x=270, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=113, x=270, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=113, x=270, store=300) before normal moving
-->else1 ends: 1-Wolf (y=112, x=269, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=215, x=123, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=215, x=123, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=215, x=123, store=200) before normal moving
-->else1 ends: 2-Wolf (y=214, x=122, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=25, x=153, store=400) --------
--> 3-Wolf has <=Min_energy(500) store (y=25, x=153, store=400). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=25, x=153, store=400) before normal moving
-->else1 ends: 3-Wolf (y=26, x=152, store=400) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=33, x=73, store=652.0) --------
--> 4-Wolf has > 500 store (y=33, x=73, store=652.0) and Random >= 0.5. so will try to find CW to move closer or breed/fight if within AD(5).
-> No CW found. although store >500 and p>=0.5!
--->else2 begins: 4-Wolf (y=33, x=73, store=652.0) before normal moving.
--->else2 begins: 4-Wolf (y=32, x=72, store=652.0) after normal moving.
.... el2 _______  4-Wolf moved normally _______ 
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 20 ************

-> ------------ 0-Sheep initialised with (y=35, x=90, store=410) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
---> d<md+... 0-Sheep noticed closest 4-Wolf ...
---> 0-Sheep (y=35, x=90, store=410) detected 4-Wolf (y=32, x=72, store=652.0) within d=18.24828759089466.
-> CW FOUND.
--> Before 0-Sheep (y=35, x=90, store=410) tries to run away from CW: (y=32, x=72, store=652.0).
--> After 0-Sheep (y=37, x=99, store=410) tried to run away from CW (y=32, x=72, store=652.0).
___________ 0 Sheep tried to run away from CW ___________ 


-> ------------ 1-Sheep initialised with (y=95, x=50, store=500) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=95, x=50, store=500). Will move normally and eat
-->1-Sheep (y=95, x=50, store=500) before normal moving and eating
-->1-Sheep (y=96, x=49, store=510) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=53, x=102, store=540) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=53, x=102, store=540). Will move normally and eat
-->2-Sheep (y=53, x=102, store=540) before normal moving and eating
-->2-Sheep (y=54, x=103, store=550) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=6, x=73, store=590) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=6, x=73, store=590). Will move normally and eat
-->3-Sheep (y=6, x=73, store=590) before normal moving and eating
-->3-Sheep (y=5, x=74, store=600) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=74, x=59, store=600) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=74, x=59, store=600). Will move normally and eat
-->4-Sheep (y=74, x=59, store=600) before normal moving and eating
-->4-Sheep (y=75, x=60, store=610) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=7, x=28, store=390) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=7, x=28, store=390). Will move normally and eat
-->5-Sheep (y=7, x=28, store=390) before normal moving and eating
-->5-Sheep (y=6, x=29, store=400) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=38, x=88, store=580) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
---> d<md+... 6-Sheep noticed closest 4-Wolf ...
---> 6-Sheep (y=38, x=88, store=580) detected 4-Wolf (y=32, x=72, store=652.0) within d=17.08800749063506.
-> CW FOUND.
--> Before 6-Sheep (y=38, x=88, store=580) tries to run away from CW: (y=32, x=72, store=652.0).
--> After 6-Sheep (y=41, x=96, store=580) tried to run away from CW (y=32, x=72, store=652.0).
___________ 6 Sheep tried to run away from CW ___________ 


-> ------------ 7-Sheep initialised with (y=4, x=62, store=470) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=4, x=62, store=470). Will move normally and eat
-->7-Sheep (y=4, x=62, store=470) before normal moving and eating
-->7-Sheep (y=3, x=61, store=480) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=223, x=50, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=223, x=50, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=223, x=50, store=100) before normal moving
-->else1 ends: 0-Wolf (y=224, x=49, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=112, x=269, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=112, x=269, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=112, x=269, store=300) before normal moving
-->else1 ends: 1-Wolf (y=113, x=268, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=214, x=122, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=214, x=122, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=214, x=122, store=200) before normal moving
-->else1 ends: 2-Wolf (y=215, x=121, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=26, x=152, store=400) --------
--> 3-Wolf has <=Min_energy(500) store (y=26, x=152, store=400). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=26, x=152, store=400) before normal moving
-->else1 ends: 3-Wolf (y=27, x=153, store=400) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=32, x=72, store=652.0) --------
--> if and elif not satisfied
--> 4-Wolf has > Min_energy(500) store (y=32, x=72, store=652.0) but Random < bf_e/2(0.25). So will move normally.
--->else3 begins: 4-Wolf (y=32, x=72, store=652.0) before normal moving.
--->else3 begins: 4-Wolf (y=33, x=73, store=652.0) after normal moving.
....e3_______ 4-Wolf moved normally_______
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 21 ************

-> ------------ 0-Sheep initialised with (y=37, x=99, store=410) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=37, x=99, store=410). Will move normally and eat
-->0-Sheep (y=37, x=99, store=410) before normal moving and eating
-->0-Sheep (y=38, x=100, store=420) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=96, x=49, store=510) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=96, x=49, store=510). Will move normally and eat
-->1-Sheep (y=96, x=49, store=510) before normal moving and eating
-->1-Sheep (y=97, x=50, store=520) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=54, x=103, store=550) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=54, x=103, store=550). Will move normally and eat
-->2-Sheep (y=54, x=103, store=550) before normal moving and eating
-->2-Sheep (y=55, x=102, store=560) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=5, x=74, store=600) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=5, x=74, store=600). Will move normally and eat
-->3-Sheep (y=5, x=74, store=600) before normal moving and eating
-->3-Sheep (y=4, x=75, store=610) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=75, x=60, store=610) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store > Min_ernergy(600) (y=75, x=60, store=610).
--> 4-Sheep looping with 0-Sheep.
--> 4-Sheep looping with 1-Sheep.
--> 4-Sheep looping with 2-Sheep.
-> NO CS Found.
-> 4-Sheep (y=75, x=60, store=610) before normally moving and eating.
-> 4-Sheep (y=76, x=59, store=620) after normally moving and eating.
___e1________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=6, x=29, store=400) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=6, x=29, store=400). Will move normally and eat
-->5-Sheep (y=6, x=29, store=400) before normal moving and eating
-->5-Sheep (y=5, x=28, store=410) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=41, x=96, store=580) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
---> d<md+... 6-Sheep noticed closest 4-Wolf ...
---> 6-Sheep (y=41, x=96, store=580) detected 4-Wolf (y=33, x=73, store=652.0) within d=24.351591323771842.
-> CW FOUND.
--> Before 6-Sheep (y=41, x=96, store=580) tries to run away from CW: (y=33, x=73, store=652.0).
--> After 6-Sheep (y=45, x=108, store=580) tried to run away from CW (y=33, x=73, store=652.0).
___________ 6 Sheep tried to run away from CW ___________ 


-> ------------ 7-Sheep initialised with (y=3, x=61, store=480) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=3, x=61, store=480). Will move normally and eat
-->7-Sheep (y=3, x=61, store=480) before normal moving and eating
-->7-Sheep (y=4, x=62, store=490) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=224, x=49, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=224, x=49, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=224, x=49, store=100) before normal moving
-->else1 ends: 0-Wolf (y=223, x=50, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=113, x=268, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=113, x=268, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=113, x=268, store=300) before normal moving
-->else1 ends: 1-Wolf (y=112, x=269, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=215, x=121, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=215, x=121, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=215, x=121, store=200) before normal moving
-->else1 ends: 2-Wolf (y=216, x=122, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=27, x=153, store=400) --------
--> 3-Wolf has <=Min_energy(500) store (y=27, x=153, store=400). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
----> action_dist(5) < distance(48.46648326421054) < min_dist(50)
----> Min Distance = 48.46648326421054 for 3-Wolf (y=27, x=153, store=400) with 6-Sheep (y=45, x=108, store=580)
---> 3-Wolf looping with 7-Sheep
-> CS Found!
--> 3-Wolf (y=27, x=153, store=400) before moving closer to  Closest-Sheep (y=45, x=108, store=580)
--> 3-Wolf (y=36, x=130, store=400) after moving closer to Closest-Sheep (y=45, x=108, store=580)
___________ 3-Wolf moved closer to CS___________

---------4-Wolf initialised with (y=33, x=73, store=652.0) --------
--> 4-Wolf has >Min_energy(500) store (y=33, x=73, store=652.0) and 0.25 <= random.random() < 0.5. Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
----> action_dist(5) < distance(27.459060435491963) < min_dist(50)
----> Min Distance = 27.459060435491963 for 4-Wolf (y=33, x=73, store=652.0) with 0-Sheep (y=38, x=100, store=420)
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
-> CS Found!
--> 4-Wolf (y=33, x=73, store=652.0) before moving closer to  Closest-Sheep (y=38, x=100, store=420)
--> 4-Wolf (y=35, x=86, store=652.0) after moving closer to Closest-Sheep (y=38, x=100, store=420)
___________ 4-Wolf moved closer to CS___________
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 22 ************

-> ------------ 0-Sheep initialised with (y=38, x=100, store=420) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
---> d<md+... 0-Sheep noticed closest 4-Wolf ...
---> 0-Sheep (y=38, x=100, store=420) detected 4-Wolf (y=35, x=86, store=652.0) within d=14.317821063276353.
-> CW FOUND.
--> Before 0-Sheep (y=38, x=100, store=420) tries to run away from CW: (y=35, x=86, store=652.0).
--> After 0-Sheep (y=40, x=107, store=420) tried to run away from CW (y=35, x=86, store=652.0).
___________ 0 Sheep tried to run away from CW ___________ 


-> ------------ 1-Sheep initialised with (y=97, x=50, store=520) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=97, x=50, store=520). Will move normally and eat
-->1-Sheep (y=97, x=50, store=520) before normal moving and eating
-->1-Sheep (y=96, x=49, store=530) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=55, x=102, store=560) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=55, x=102, store=560). Will move normally and eat
-->2-Sheep (y=55, x=102, store=560) before normal moving and eating
-->2-Sheep (y=56, x=101, store=570) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=4, x=75, store=610) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store > Min_ernergy(600) (y=4, x=75, store=610).
--> 3-Sheep looping with 0-Sheep.
--> 3-Sheep looping with 1-Sheep.
--> 3-Sheep looping with 2-Sheep.
--> 3-Sheep looping with 3-Sheep.
----> ---- (AD < D < MD).
----> Min distance=13.0 for 3-Sheep (y=4, x=75, store=610) with 3-Sheep (y=4, x=62, store=490).
->CS Found!
-> 3-Sheep (y=4, x=75, store=610) before moving closer (while eating) to CS-Sheep: (y=4, x=62, store=490).
-> 3-Wolf (y=4, x=68, store=620) after moving closer (while eating) to CS-Sheep: (y=4, x=62, store=490).
___________ 3-Sheep moved closer CS___________


-> ------------ 4-Sheep initialised with (y=76, x=59, store=620) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store > Min_ernergy(600) (y=76, x=59, store=620).
--> 4-Sheep looping with 0-Sheep.
--> 4-Sheep looping with 1-Sheep.
--> 4-Sheep looping with 2-Sheep.
-> NO CS Found.
-> 4-Sheep (y=76, x=59, store=620) before normally moving and eating.
-> 4-Sheep (y=77, x=58, store=630) after normally moving and eating.
___e1________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=5, x=28, store=410) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=5, x=28, store=410). Will move normally and eat
-->5-Sheep (y=5, x=28, store=410) before normal moving and eating
-->5-Sheep (y=6, x=27, store=420) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=45, x=108, store=580) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
---> d<md+... 6-Sheep noticed closest 3-Wolf ...
---> 6-Sheep (y=45, x=108, store=580) detected 3-Wolf (y=36, x=130, store=400) within d=23.769728648009426.
--> 6-Sheep looping with 4-Wolf.
-> CW FOUND.
--> Before 6-Sheep (y=45, x=108, store=580) tries to run away from CW: (y=36, x=130, store=400).
--> After 6-Sheep (y=50, x=97, store=580) tried to run away from CW (y=36, x=130, store=400).
___________ 6 Sheep tried to run away from CW ___________ 


-> ------------ 7-Sheep initialised with (y=4, x=62, store=490) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=4, x=62, store=490). Will move normally and eat
-->7-Sheep (y=4, x=62, store=490) before normal moving and eating
-->7-Sheep (y=5, x=63, store=500) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=223, x=50, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=223, x=50, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=223, x=50, store=100) before normal moving
-->else1 ends: 0-Wolf (y=224, x=49, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=112, x=269, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=112, x=269, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=112, x=269, store=300) before normal moving
-->else1 ends: 1-Wolf (y=111, x=268, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=216, x=122, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=216, x=122, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=216, x=122, store=200) before normal moving
-->else1 ends: 2-Wolf (y=215, x=121, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=36, x=130, store=400) --------
--> 3-Wolf has <=Min_energy(500) store (y=36, x=130, store=400). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
----> action_dist(5) < distance(23.345235059857504) < min_dist(50)
----> Min Distance = 23.345235059857504 for 3-Wolf (y=36, x=130, store=400) with 0-Sheep (y=40, x=107, store=420)
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
-> CS Found!
--> 3-Wolf (y=36, x=130, store=400) before moving closer to  Closest-Sheep (y=40, x=107, store=420)
--> 3-Wolf (y=38, x=118, store=400) after moving closer to Closest-Sheep (y=40, x=107, store=420)
___________ 3-Wolf moved closer to CS___________

---------4-Wolf initialised with (y=35, x=86, store=652.0) --------
--> 4-Wolf has > 500 store (y=35, x=86, store=652.0) and Random >= 0.5. so will try to find CW to move closer or breed/fight if within AD(5).
-> No CW found. although store >500 and p>=0.5!
--->else2 begins: 4-Wolf (y=35, x=86, store=652.0) before normal moving.
--->else2 begins: 4-Wolf (y=36, x=85, store=652.0) after normal moving.
.... el2 _______  4-Wolf moved normally _______ 
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 23 ************

-> ------------ 0-Sheep initialised with (y=40, x=107, store=420) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
---> d<md+... 0-Sheep noticed closest 3-Wolf ...
---> 0-Sheep (y=40, x=107, store=420) detected 3-Wolf (y=38, x=118, store=400) within d=11.180339887498949.
--> 0-Sheep looping with 4-Wolf.
-> CW FOUND.
--> Before 0-Sheep (y=40, x=107, store=420) tries to run away from CW: (y=38, x=118, store=400).
--> After 0-Sheep (y=41, x=102, store=420) tried to run away from CW (y=38, x=118, store=400).
___________ 0 Sheep tried to run away from CW ___________ 


-> ------------ 1-Sheep initialised with (y=96, x=49, store=530) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=96, x=49, store=530). Will move normally and eat
-->1-Sheep (y=96, x=49, store=530) before normal moving and eating
-->1-Sheep (y=97, x=48, store=540) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=56, x=101, store=570) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
---> d<md+... 2-Sheep noticed closest 3-Wolf ...
---> 2-Sheep (y=56, x=101, store=570) detected 3-Wolf (y=38, x=118, store=400) within d=24.758836806279895.
--> 2-Sheep looping with 4-Wolf.
-> CW FOUND.
--> Before 2-Sheep (y=56, x=101, store=570) tries to run away from CW: (y=38, x=118, store=400).
--> After 2-Sheep (y=65, x=93, store=570) tried to run away from CW (y=38, x=118, store=400).
___________ 2 Sheep tried to run away from CW ___________ 


-> ------------ 3-Sheep initialised with (y=4, x=68, store=620) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store > Min_ernergy(600) (y=4, x=68, store=620).
--> 3-Sheep looping with 0-Sheep.
--> 3-Sheep looping with 1-Sheep.
--> 3-Sheep looping with 2-Sheep.
--> 3-Sheep looping with 3-Sheep.
----> ---- (AD < D < MD).
----> Min distance=5.0990195135927845 for 3-Sheep (y=4, x=68, store=620) with 3-Sheep (y=5, x=63, store=500).
->CS Found!
-> 3-Sheep (y=4, x=68, store=620) before moving closer (while eating) to CS-Sheep: (y=5, x=63, store=500).
-> 3-Wolf (y=4, x=65, store=630) after moving closer (while eating) to CS-Sheep: (y=5, x=63, store=500).
___________ 3-Sheep moved closer CS___________


-> ------------ 4-Sheep initialised with (y=77, x=58, store=630) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store > Min_ernergy(600) (y=77, x=58, store=630).
--> 4-Sheep looping with 0-Sheep.
--> 4-Sheep looping with 1-Sheep.
--> 4-Sheep looping with 2-Sheep.
-> NO CS Found.
-> 4-Sheep (y=77, x=58, store=630) before normally moving and eating.
-> 4-Sheep (y=76, x=59, store=640) after normally moving and eating.
___e1________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=6, x=27, store=420) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=6, x=27, store=420). Will move normally and eat
-->5-Sheep (y=6, x=27, store=420) before normal moving and eating
-->5-Sheep (y=5, x=28, store=430) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=50, x=97, store=580) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
---> d<md+... 6-Sheep noticed closest 3-Wolf ...
---> 6-Sheep (y=50, x=97, store=580) detected 3-Wolf (y=38, x=118, store=400) within d=24.186773244895647.
--> 6-Sheep looping with 4-Wolf.
---> d<md+... 6-Sheep noticed closest 4-Wolf ...
---> 6-Sheep (y=50, x=97, store=580) detected 4-Wolf (y=36, x=85, store=652.0) within d=18.439088914585774.
-> CW FOUND.
--> Before 6-Sheep (y=50, x=97, store=580) tries to run away from CW: (y=36, x=85, store=652.0).
--> After 6-Sheep (y=57, x=103, store=580) tried to run away from CW (y=36, x=85, store=652.0).
___________ 6 Sheep tried to run away from CW ___________ 


-> ------------ 7-Sheep initialised with (y=5, x=63, store=500) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=5, x=63, store=500). Will move normally and eat
-->7-Sheep (y=5, x=63, store=500) before normal moving and eating
-->7-Sheep (y=6, x=62, store=510) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=224, x=49, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=224, x=49, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=224, x=49, store=100) before normal moving
-->else1 ends: 0-Wolf (y=225, x=50, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=111, x=268, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=111, x=268, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=111, x=268, store=300) before normal moving
-->else1 ends: 1-Wolf (y=112, x=269, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=215, x=121, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=215, x=121, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=215, x=121, store=200) before normal moving
-->else1 ends: 2-Wolf (y=216, x=122, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=38, x=118, store=400) --------
--> 3-Wolf has <=Min_energy(500) store (y=38, x=118, store=400). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
----> action_dist(5) < distance(16.278820596099706) < min_dist(50)
----> Min Distance = 16.278820596099706 for 3-Wolf (y=38, x=118, store=400) with 0-Sheep (y=41, x=102, store=420)
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
-> CS Found!
--> 3-Wolf (y=38, x=118, store=400) before moving closer to  Closest-Sheep (y=41, x=102, store=420)
--> 3-Wolf (y=39, x=110, store=400) after moving closer to Closest-Sheep (y=41, x=102, store=420)
___________ 3-Wolf moved closer to CS___________

---------4-Wolf initialised with (y=36, x=85, store=652.0) --------
--> if and elif not satisfied
--> 4-Wolf has > Min_energy(500) store (y=36, x=85, store=652.0) but Random < bf_e/2(0.25). So will move normally.
--->else3 begins: 4-Wolf (y=36, x=85, store=652.0) before normal moving.
--->else3 begins: 4-Wolf (y=35, x=84, store=652.0) after normal moving.
....e3_______ 4-Wolf moved normally_______
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 24 ************

-> ------------ 0-Sheep initialised with (y=41, x=102, store=420) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
---> d<md+... 0-Sheep noticed closest 3-Wolf ...
---> 0-Sheep (y=41, x=102, store=420) detected 3-Wolf (y=39, x=110, store=400) within d=8.246211251235321.
--> 0-Sheep looping with 4-Wolf.
-> CW FOUND.
--> Before 0-Sheep (y=41, x=102, store=420) tries to run away from CW: (y=39, x=110, store=400).
--> After 0-Sheep (y=42, x=98, store=420) tried to run away from CW (y=39, x=110, store=400).
___________ 0 Sheep tried to run away from CW ___________ 


-> ------------ 1-Sheep initialised with (y=97, x=48, store=540) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=97, x=48, store=540). Will move normally and eat
-->1-Sheep (y=97, x=48, store=540) before normal moving and eating
-->1-Sheep (y=96, x=47, store=550) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=65, x=93, store=570) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=65, x=93, store=570). Will move normally and eat
-->2-Sheep (y=65, x=93, store=570) before normal moving and eating
-->2-Sheep (y=64, x=92, store=580) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=4, x=65, store=630) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store > Min_ernergy(600) (y=4, x=65, store=630).
--> 3-Sheep looping with 0-Sheep.
--> 3-Sheep looping with 1-Sheep.
--> 3-Sheep looping with 2-Sheep.
--> 3-Sheep looping with 3-Sheep.
----> D <=AD. Sheep Breeding/Sharing proximity of 3.605551275463989(<=5) entered by CS 3-Sheep (y=4, x=65, store=630) with CS 3-Sheep (y=6, x=62, store=510).
-----> 3-Sheep (y=4, x=65, store=630) and CS 3-Sheep (y=6, x=62, store=510 will not mate as CS 3-Sheep store <600. They will share resource to become average.
-----> Shared resources = True
-----> 3-Sheep (y=4, x=65, store=570.0) and CS 3-Sheep (y=6, x=62, store=570.0) after sharing resources!
_____________ 3-Sheep and CS 3-Sheep shared resources ____________
_______ Breeding=False, Failed breeding=False, Share=True for 3-Sheep __________

-> ------------ 4-Sheep initialised with (y=76, x=59, store=640) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store > Min_ernergy(600) (y=76, x=59, store=640).
--> 4-Sheep looping with 0-Sheep.
--> 4-Sheep looping with 1-Sheep.
--> 4-Sheep looping with 2-Sheep.
-> NO CS Found.
-> 4-Sheep (y=76, x=59, store=640) before normally moving and eating.
-> 4-Sheep (y=77, x=60, store=650) after normally moving and eating.
___e1________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=5, x=28, store=430) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=5, x=28, store=430). Will move normally and eat
-->5-Sheep (y=5, x=28, store=430) before normal moving and eating
-->5-Sheep (y=4, x=29, store=440) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=57, x=103, store=580) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
---> d<md+... 6-Sheep noticed closest 3-Wolf ...
---> 6-Sheep (y=57, x=103, store=580) detected 3-Wolf (y=39, x=110, store=400) within d=19.313207915827967.
--> 6-Sheep looping with 4-Wolf.
-> CW FOUND.
--> Before 6-Sheep (y=57, x=103, store=580) tries to run away from CW: (y=39, x=110, store=400).
--> After 6-Sheep (y=66, x=100, store=580) tried to run away from CW (y=39, x=110, store=400).
___________ 6 Sheep tried to run away from CW ___________ 


-> ------------ 7-Sheep initialised with (y=6, x=62, store=570.0) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=6, x=62, store=570.0). Will move normally and eat
-->7-Sheep (y=6, x=62, store=570.0) before normal moving and eating
-->7-Sheep (y=5, x=63, store=580.0) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=225, x=50, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=225, x=50, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=225, x=50, store=100) before normal moving
-->else1 ends: 0-Wolf (y=226, x=49, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=112, x=269, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=112, x=269, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=112, x=269, store=300) before normal moving
-->else1 ends: 1-Wolf (y=111, x=268, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=216, x=122, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=216, x=122, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=216, x=122, store=200) before normal moving
-->else1 ends: 2-Wolf (y=217, x=121, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=39, x=110, store=400) --------
--> 3-Wolf has <=Min_energy(500) store (y=39, x=110, store=400). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
----> action_dist(5) < distance(12.36931687685298) < min_dist(50)
----> Min Distance = 12.36931687685298 for 3-Wolf (y=39, x=110, store=400) with 0-Sheep (y=42, x=98, store=420)
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
-> CS Found!
--> 3-Wolf (y=39, x=110, store=400) before moving closer to  Closest-Sheep (y=42, x=98, store=420)
--> 3-Wolf (y=40, x=104, store=400) after moving closer to Closest-Sheep (y=42, x=98, store=420)
___________ 3-Wolf moved closer to CS___________

---------4-Wolf initialised with (y=35, x=84, store=652.0) --------
--> 4-Wolf has > 500 store (y=35, x=84, store=652.0) and Random >= 0.5. so will try to find CW to move closer or breed/fight if within AD(5).
-> No CW found. although store >500 and p>=0.5!
--->else2 begins: 4-Wolf (y=35, x=84, store=652.0) before normal moving.
--->else2 begins: 4-Wolf (y=34, x=83, store=652.0) after normal moving.
.... el2 _______  4-Wolf moved normally _______ 
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 25 ************

-> ------------ 0-Sheep initialised with (y=42, x=98, store=420) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
---> d<md+... 0-Sheep noticed closest 3-Wolf ...
---> 0-Sheep (y=42, x=98, store=420) detected 3-Wolf (y=40, x=104, store=400) within d=6.324555320336759.
--> 0-Sheep looping with 4-Wolf.
-> CW FOUND.
--> Before 0-Sheep (y=42, x=98, store=420) tries to run away from CW: (y=40, x=104, store=400).
--> After 0-Sheep (y=43, x=95, store=420) tried to run away from CW (y=40, x=104, store=400).
___________ 0 Sheep tried to run away from CW ___________ 


-> ------------ 1-Sheep initialised with (y=96, x=47, store=550) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=96, x=47, store=550). Will move normally and eat
-->1-Sheep (y=96, x=47, store=550) before normal moving and eating
-->1-Sheep (y=97, x=48, store=560) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=64, x=92, store=580) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=64, x=92, store=580). Will move normally and eat
-->2-Sheep (y=64, x=92, store=580) before normal moving and eating
-->2-Sheep (y=63, x=93, store=590) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=4, x=65, store=570.0) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=4, x=65, store=570.0). Will move normally and eat
-->3-Sheep (y=4, x=65, store=570.0) before normal moving and eating
-->3-Sheep (y=5, x=66, store=580.0) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=77, x=60, store=650) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store > Min_ernergy(600) (y=77, x=60, store=650).
--> 4-Sheep looping with 0-Sheep.
--> 4-Sheep looping with 1-Sheep.
--> 4-Sheep looping with 2-Sheep.
-> NO CS Found.
-> 4-Sheep (y=77, x=60, store=650) before normally moving and eating.
-> 4-Sheep (y=76, x=61, store=660) after normally moving and eating.
___e1________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=4, x=29, store=440) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=4, x=29, store=440). Will move normally and eat
-->5-Sheep (y=4, x=29, store=440) before normal moving and eating
-->5-Sheep (y=5, x=30, store=450) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=66, x=100, store=580) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=66, x=100, store=580). Will move normally and eat
-->6-Sheep (y=66, x=100, store=580) before normal moving and eating
-->6-Sheep (y=67, x=99, store=590) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=5, x=63, store=580.0) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=5, x=63, store=580.0). Will move normally and eat
-->7-Sheep (y=5, x=63, store=580.0) before normal moving and eating
-->7-Sheep (y=6, x=62, store=590.0) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=226, x=49, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=226, x=49, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=226, x=49, store=100) before normal moving
-->else1 ends: 0-Wolf (y=225, x=48, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=111, x=268, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=111, x=268, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=111, x=268, store=300) before normal moving
-->else1 ends: 1-Wolf (y=110, x=267, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=217, x=121, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=217, x=121, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=217, x=121, store=200) before normal moving
-->else1 ends: 2-Wolf (y=216, x=122, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=40, x=104, store=400) --------
--> 3-Wolf has <=Min_energy(500) store (y=40, x=104, store=400). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
----> action_dist(5) < distance(9.486832980505138) < min_dist(50)
----> Min Distance = 9.486832980505138 for 3-Wolf (y=40, x=104, store=400) with 0-Sheep (y=43, x=95, store=420)
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
-> CS Found!
--> 3-Wolf (y=40, x=104, store=400) before moving closer to  Closest-Sheep (y=43, x=95, store=420)
--> 3-Wolf (y=41, x=99, store=400) after moving closer to Closest-Sheep (y=43, x=95, store=420)
___________ 3-Wolf moved closer to CS___________

---------4-Wolf initialised with (y=34, x=83, store=652.0) --------
--> if and elif not satisfied
--> 4-Wolf has > Min_energy(500) store (y=34, x=83, store=652.0) but Random < bf_e/2(0.25). So will move normally.
--->else3 begins: 4-Wolf (y=34, x=83, store=652.0) before normal moving.
--->else3 begins: 4-Wolf (y=35, x=84, store=652.0) after normal moving.
....e3_______ 4-Wolf moved normally_______
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 26 ************

-> ------------ 0-Sheep initialised with (y=43, x=95, store=420) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
---> d<md+... 0-Sheep noticed closest 3-Wolf ...
---> 0-Sheep (y=43, x=95, store=420) detected 3-Wolf (y=41, x=99, store=400) within d=4.47213595499958.
--> 0-Sheep looping with 4-Wolf.
-> CW FOUND.
--> Before 0-Sheep (y=43, x=95, store=420) tries to run away from CW: (y=41, x=99, store=400).
--> After 0-Sheep (y=44, x=93, store=420) tried to run away from CW (y=41, x=99, store=400).
___________ 0 Sheep tried to run away from CW ___________ 


-> ------------ 1-Sheep initialised with (y=97, x=48, store=560) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=97, x=48, store=560). Will move normally and eat
-->1-Sheep (y=97, x=48, store=560) before normal moving and eating
-->1-Sheep (y=96, x=47, store=570) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=63, x=93, store=590) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
---> d<md+... 2-Sheep noticed closest 3-Wolf ...
---> 2-Sheep (y=63, x=93, store=590) detected 3-Wolf (y=41, x=99, store=400) within d=22.80350850198276.
--> 2-Sheep looping with 4-Wolf.
-> CW FOUND.
--> Before 2-Sheep (y=63, x=93, store=590) tries to run away from CW: (y=41, x=99, store=400).
--> After 2-Sheep (y=74, x=90, store=590) tried to run away from CW (y=41, x=99, store=400).
___________ 2 Sheep tried to run away from CW ___________ 


-> ------------ 3-Sheep initialised with (y=5, x=66, store=580.0) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=5, x=66, store=580.0). Will move normally and eat
-->3-Sheep (y=5, x=66, store=580.0) before normal moving and eating
-->3-Sheep (y=4, x=67, store=590.0) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=76, x=61, store=660) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store > Min_ernergy(600) (y=76, x=61, store=660).
--> 4-Sheep looping with 0-Sheep.
--> 4-Sheep looping with 1-Sheep.
--> 4-Sheep looping with 2-Sheep.
-> NO CS Found.
-> 4-Sheep (y=76, x=61, store=660) before normally moving and eating.
-> 4-Sheep (y=75, x=60, store=670) after normally moving and eating.
___e1________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=5, x=30, store=450) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=5, x=30, store=450). Will move normally and eat
-->5-Sheep (y=5, x=30, store=450) before normal moving and eating
-->5-Sheep (y=4, x=31, store=460) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=67, x=99, store=590) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=67, x=99, store=590). Will move normally and eat
-->6-Sheep (y=67, x=99, store=590) before normal moving and eating
-->6-Sheep (y=68, x=100, store=600) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=6, x=62, store=590.0) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=6, x=62, store=590.0). Will move normally and eat
-->7-Sheep (y=6, x=62, store=590.0) before normal moving and eating
-->7-Sheep (y=5, x=63, store=600.0) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=225, x=48, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=225, x=48, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=225, x=48, store=100) before normal moving
-->else1 ends: 0-Wolf (y=226, x=47, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=110, x=267, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=110, x=267, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=110, x=267, store=300) before normal moving
-->else1 ends: 1-Wolf (y=109, x=268, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=216, x=122, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=216, x=122, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=216, x=122, store=200) before normal moving
-->else1 ends: 2-Wolf (y=217, x=123, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=41, x=99, store=400) --------
--> 3-Wolf has <=Min_energy(500) store (y=41, x=99, store=400). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
----> action_dist(5) < distance(6.708203932499369) < min_dist(50)
----> Min Distance = 6.708203932499369 for 3-Wolf (y=41, x=99, store=400) with 0-Sheep (y=44, x=93, store=420)
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
-> CS Found!
--> 3-Wolf (y=41, x=99, store=400) before moving closer to  Closest-Sheep (y=44, x=93, store=420)
--> 3-Wolf (y=42, x=96, store=400) after moving closer to Closest-Sheep (y=44, x=93, store=420)
___________ 3-Wolf moved closer to CS___________

---------4-Wolf initialised with (y=35, x=84, store=652.0) --------
--> if and elif not satisfied
--> 4-Wolf has > Min_energy(500) store (y=35, x=84, store=652.0) but Random < bf_e/2(0.25). So will move normally.
--->else3 begins: 4-Wolf (y=35, x=84, store=652.0) before normal moving.
--->else3 begins: 4-Wolf (y=34, x=83, store=652.0) after normal moving.
....e3_______ 4-Wolf moved normally_______
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 27 ************

-> ------------ 0-Sheep initialised with (y=44, x=93, store=420) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
---> d<md+... 0-Sheep noticed closest 3-Wolf ...
---> 0-Sheep (y=44, x=93, store=420) detected 3-Wolf (y=42, x=96, store=400) within d=3.605551275463989.
--> 0-Sheep looping with 4-Wolf.
-> CW FOUND.
--> Before 0-Sheep (y=44, x=93, store=420) tries to run away from CW: (y=42, x=96, store=400).
--> After 0-Sheep (y=45, x=92, store=420) tried to run away from CW (y=42, x=96, store=400).
___________ 0 Sheep tried to run away from CW ___________ 


-> ------------ 1-Sheep initialised with (y=96, x=47, store=570) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=96, x=47, store=570). Will move normally and eat
-->1-Sheep (y=96, x=47, store=570) before normal moving and eating
-->1-Sheep (y=95, x=48, store=580) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=74, x=90, store=590) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=74, x=90, store=590). Will move normally and eat
-->2-Sheep (y=74, x=90, store=590) before normal moving and eating
-->2-Sheep (y=75, x=89, store=600) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=4, x=67, store=590.0) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=4, x=67, store=590.0). Will move normally and eat
-->3-Sheep (y=4, x=67, store=590.0) before normal moving and eating
-->3-Sheep (y=3, x=68, store=600.0) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=75, x=60, store=670) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store > Min_ernergy(600) (y=75, x=60, store=670).
--> 4-Sheep looping with 0-Sheep.
--> 4-Sheep looping with 1-Sheep.
--> 4-Sheep looping with 2-Sheep.
-> NO CS Found.
-> 4-Sheep (y=75, x=60, store=670) before normally moving and eating.
-> 4-Sheep (y=76, x=61, store=680) after normally moving and eating.
___e1________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=4, x=31, store=460) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=4, x=31, store=460). Will move normally and eat
-->5-Sheep (y=4, x=31, store=460) before normal moving and eating
-->5-Sheep (y=5, x=30, store=470) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=68, x=100, store=600) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=68, x=100, store=600). Will move normally and eat
-->6-Sheep (y=68, x=100, store=600) before normal moving and eating
-->6-Sheep (y=67, x=101, store=610) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=5, x=63, store=600.0) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=5, x=63, store=600.0). Will move normally and eat
-->7-Sheep (y=5, x=63, store=600.0) before normal moving and eating
-->7-Sheep (y=6, x=64, store=610.0) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=226, x=47, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=226, x=47, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=226, x=47, store=100) before normal moving
-->else1 ends: 0-Wolf (y=225, x=48, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=109, x=268, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=109, x=268, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=109, x=268, store=300) before normal moving
-->else1 ends: 1-Wolf (y=110, x=267, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=217, x=123, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=217, x=123, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=217, x=123, store=200) before normal moving
-->else1 ends: 2-Wolf (y=216, x=122, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=42, x=96, store=400) --------
--> 3-Wolf has <=Min_energy(500) store (y=42, x=96, store=400). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
----> d<=action_dist found
----> 3-Wolf (y=42, x=96, store=400) before eating 0-Sheep (y=45, x=92, store=420)
----> 3-Wolf (y=42, x=96, store=736.0) after eating 0-Sheep (y=45, x=92, store=0). Env received (84.0)
___________ Eaten=True. 3-Wolf one ate 0-Sheep__________

---------4-Wolf initialised with (y=34, x=83, store=652.0) --------
--> if and elif not satisfied
--> 4-Wolf has > Min_energy(500) store (y=34, x=83, store=652.0) but Random < bf_e/2(0.25). So will move normally.
--->else3 begins: 4-Wolf (y=34, x=83, store=652.0) before normal moving.
--->else3 begins: 4-Wolf (y=33, x=84, store=652.0) after normal moving.
....e3_______ 4-Wolf moved normally_______
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 28 ************

-> ------------ 0-Sheep initialised with (y=95, x=48, store=580) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=95, x=48, store=580). Will move normally and eat
-->0-Sheep (y=95, x=48, store=580) before normal moving and eating
-->0-Sheep (y=94, x=47, store=590) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=75, x=89, store=600) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=75, x=89, store=600). Will move normally and eat
-->1-Sheep (y=75, x=89, store=600) before normal moving and eating
-->1-Sheep (y=74, x=88, store=610) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=3, x=68, store=600.0) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=3, x=68, store=600.0). Will move normally and eat
-->2-Sheep (y=3, x=68, store=600.0) before normal moving and eating
-->2-Sheep (y=4, x=69, store=610.0) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=76, x=61, store=680) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store > Min_ernergy(600) (y=76, x=61, store=680).
--> 3-Sheep looping with 0-Sheep.
--> 3-Sheep looping with 1-Sheep.
--> 3-Sheep looping with 2-Sheep.
-> NO CS Found.
-> 3-Sheep (y=76, x=61, store=680) before normally moving and eating.
-> 3-Sheep (y=77, x=62, store=690) after normally moving and eating.
___e1________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=5, x=30, store=470) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=5, x=30, store=470). Will move normally and eat
-->4-Sheep (y=5, x=30, store=470) before normal moving and eating
-->4-Sheep (y=6, x=31, store=480) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=67, x=101, store=610) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store > Min_ernergy(600) (y=67, x=101, store=610).
--> 5-Sheep looping with 0-Sheep.
-> NO CS Found.
-> 5-Sheep (y=67, x=101, store=610) before normally moving and eating.
-> 5-Sheep (y=66, x=100, store=620) after normally moving and eating.
___e1________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=6, x=64, store=610.0) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store > Min_ernergy(600) (y=6, x=64, store=610.0).
-> NO CS Found.
-> 6-Sheep (y=6, x=64, store=610.0) before normally moving and eating.
-> 6-Sheep (y=7, x=63, store=620.0) after normally moving and eating.
___e1________ 6-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=225, x=48, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=225, x=48, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=225, x=48, store=100) before normal moving
-->else1 ends: 0-Wolf (y=224, x=47, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=110, x=267, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=110, x=267, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=110, x=267, store=300) before normal moving
-->else1 ends: 1-Wolf (y=109, x=266, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=216, x=122, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=216, x=122, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=216, x=122, store=200) before normal moving
-->else1 ends: 2-Wolf (y=215, x=121, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=42, x=96, store=736.0) --------
--> 3-Wolf has > 500 store (y=42, x=96, store=736.0) and Random >= 0.5. so will try to find CW to move closer or breed/fight if within AD(5).
---> 3-Wolf looping with 0-Wolf
----> (AD2 < D < MD).
----> Min distance=15.0 for 3-Wolf (y=42, x=96, store=736.0) with 0-Wolf (y=33, x=84, store=652.0)
->CW Found!
-> 3-Wolf (y=42, x=96, store=736.0) before moving closer to CW-Wolf: (y=33, x=84, store=652.0).
-> 3-Wolf (y=37, x=90, store=736.0) after moving closer to CW-Wolf: (y=33, x=84, store=652.0).
_______ 3-Wolf moved closer CW+_______

---------4-Wolf initialised with (y=33, x=84, store=652.0) --------
--> 4-Wolf has >Min_energy(500) store (y=33, x=84, store=652.0) and 0.25 <= random.random() < 0.5. Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
----> action_dist(5) < distance(41.19465984809196) < min_dist(50)
----> Min Distance = 41.19465984809196 for 4-Wolf (y=33, x=84, store=652.0) with 1-Sheep (y=74, x=88, store=610)
---> 4-Wolf looping with 2-Sheep
----> action_dist(5) < distance(32.64965543462902) < min_dist(41.19465984809196)
----> Min Distance = 32.64965543462902 for 4-Wolf (y=33, x=84, store=652.0) with 2-Sheep (y=4, x=69, store=610.0)
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
-> CS Found!
--> 4-Wolf (y=33, x=84, store=652.0) before moving closer to  Closest-Sheep (y=4, x=69, store=610.0)
--> 4-Wolf (y=18, x=76, store=652.0) after moving closer to Closest-Sheep (y=4, x=69, store=610.0)
___________ 4-Wolf moved closer to CS___________
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 29 ************

-> ------------ 0-Sheep initialised with (y=94, x=47, store=590) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=94, x=47, store=590). Will move normally and eat
-->0-Sheep (y=94, x=47, store=590) before normal moving and eating
-->0-Sheep (y=93, x=46, store=600) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=74, x=88, store=610) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store > Min_ernergy(600) (y=74, x=88, store=610).
--> 1-Sheep looping with 0-Sheep.
--> 1-Sheep looping with 1-Sheep.
--> 1-Sheep looping with 2-Sheep.
--> 1-Sheep looping with 3-Sheep.
----> ---- (AD < D < MD).
----> Min distance=14.422205101855956 for 1-Sheep (y=74, x=88, store=610) with 3-Sheep (y=66, x=100, store=620).
--> 1-Sheep looping with 4-Sheep.
->CS Found!
-> 1-Sheep (y=74, x=88, store=610) before moving closer (while eating) to CS-Sheep: (y=66, x=100, store=620).
-> 1-Wolf (y=70, x=94, store=620) after moving closer (while eating) to CS-Sheep: (y=66, x=100, store=620).
___________ 1-Sheep moved closer CS___________


-> ------------ 2-Sheep initialised with (y=4, x=69, store=610.0) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
---> d<md+... 2-Sheep noticed closest 4-Wolf ...
---> 2-Sheep (y=4, x=69, store=610.0) detected 4-Wolf (y=18, x=76, store=652.0) within d=15.652475842498529.
-> CW FOUND.
--> Before 2-Sheep (y=4, x=69, store=610.0) tries to run away from CW: (y=18, x=76, store=652.0).
--> After 2-Sheep (y=0, x=66, store=610.0) tried to run away from CW (y=18, x=76, store=652.0).
___________ 2 Sheep tried to run away from CW ___________ 


-> ------------ 3-Sheep initialised with (y=77, x=62, store=690) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store > Min_ernergy(600) (y=77, x=62, store=690).
--> 3-Sheep looping with 0-Sheep.
--> 3-Sheep looping with 1-Sheep.
--> 3-Sheep looping with 2-Sheep.
-> NO CS Found.
-> 3-Sheep (y=77, x=62, store=690) before normally moving and eating.
-> 3-Sheep (y=78, x=61, store=700) after normally moving and eating.
___e1________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=6, x=31, store=480) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=6, x=31, store=480). Will move normally and eat
-->4-Sheep (y=6, x=31, store=480) before normal moving and eating
-->4-Sheep (y=7, x=32, store=490) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=66, x=100, store=620) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store > Min_ernergy(600) (y=66, x=100, store=620).
--> 5-Sheep looping with 0-Sheep.
-> NO CS Found.
-> 5-Sheep (y=66, x=100, store=620) before normally moving and eating.
-> 5-Sheep (y=65, x=101, store=630) after normally moving and eating.
___e1________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=7, x=63, store=620.0) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
---> d<md+... 6-Sheep noticed closest 4-Wolf ...
---> 6-Sheep (y=7, x=63, store=620.0) detected 4-Wolf (y=18, x=76, store=652.0) within d=17.029386365926403.
-> CW FOUND.
--> Before 6-Sheep (y=7, x=63, store=620.0) tries to run away from CW: (y=18, x=76, store=652.0).
--> After 6-Sheep (y=2, x=57, store=620.0) tried to run away from CW (y=18, x=76, store=652.0).
___________ 6 Sheep tried to run away from CW ___________ 

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=224, x=47, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=224, x=47, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=224, x=47, store=100) before normal moving
-->else1 ends: 0-Wolf (y=223, x=46, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=109, x=266, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=109, x=266, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=109, x=266, store=300) before normal moving
-->else1 ends: 1-Wolf (y=110, x=265, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=215, x=121, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=215, x=121, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=215, x=121, store=200) before normal moving
-->else1 ends: 2-Wolf (y=214, x=122, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=37, x=90, store=736.0) --------
--> if and elif not satisfied
--> 3-Wolf has > Min_energy(500) store (y=37, x=90, store=736.0) but Random < bf_e/2(0.25). So will move normally.
--->else3 begins: 3-Wolf (y=37, x=90, store=736.0) before normal moving.
--->else3 begins: 3-Wolf (y=36, x=91, store=736.0) after normal moving.
....e3_______ 3-Wolf moved normally_______

---------4-Wolf initialised with (y=18, x=76, store=652.0) --------
--> 4-Wolf has >Min_energy(500) store (y=18, x=76, store=652.0) and 0.25 <= random.random() < 0.5. Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
----> action_dist(5) < distance(20.591260281974) < min_dist(50)
----> Min Distance = 20.591260281974 for 4-Wolf (y=18, x=76, store=652.0) with 2-Sheep (y=0, x=66, store=610.0)
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
-> CS Found!
--> 4-Wolf (y=18, x=76, store=652.0) before moving closer to  Closest-Sheep (y=0, x=66, store=610.0)
--> 4-Wolf (y=9, x=71, store=652.0) after moving closer to Closest-Sheep (y=0, x=66, store=610.0)
___________ 4-Wolf moved closer to CS___________
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 30 ************

-> ------------ 0-Sheep initialised with (y=93, x=46, store=600) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=93, x=46, store=600). Will move normally and eat
-->0-Sheep (y=93, x=46, store=600) before normal moving and eating
-->0-Sheep (y=94, x=45, store=610) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=70, x=94, store=620) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store > Min_ernergy(600) (y=70, x=94, store=620).
--> 1-Sheep looping with 0-Sheep.
--> 1-Sheep looping with 1-Sheep.
--> 1-Sheep looping with 2-Sheep.
--> 1-Sheep looping with 3-Sheep.
----> ---- (AD < D < MD).
----> Min distance=8.602325267042627 for 1-Sheep (y=70, x=94, store=620) with 3-Sheep (y=65, x=101, store=630).
--> 1-Sheep looping with 4-Sheep.
->CS Found!
-> 1-Sheep (y=70, x=94, store=620) before moving closer (while eating) to CS-Sheep: (y=65, x=101, store=630).
-> 1-Wolf (y=67, x=97, store=630) after moving closer (while eating) to CS-Sheep: (y=65, x=101, store=630).
___________ 1-Sheep moved closer CS___________


-> ------------ 2-Sheep initialised with (y=0, x=66, store=610.0) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
---> d<md+... 2-Sheep noticed closest 4-Wolf ...
---> 2-Sheep (y=0, x=66, store=610.0) detected 4-Wolf (y=9, x=71, store=652.0) within d=10.295630140987.
-> CW FOUND.
--> Before 2-Sheep (y=0, x=66, store=610.0) tries to run away from CW: (y=9, x=71, store=652.0).
--> After 2-Sheep (y=0, x=64, store=610.0) tried to run away from CW (y=9, x=71, store=652.0).
___________ 2 Sheep tried to run away from CW ___________ 


-> ------------ 3-Sheep initialised with (y=78, x=61, store=700) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store > Min_ernergy(600) (y=78, x=61, store=700).
--> 3-Sheep looping with 0-Sheep.
--> 3-Sheep looping with 1-Sheep.
--> 3-Sheep looping with 2-Sheep.
-> NO CS Found.
-> 3-Sheep (y=78, x=61, store=700) before normally moving and eating.
-> 3-Sheep (y=79, x=62, store=710) after normally moving and eating.
___e1________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=7, x=32, store=490) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=7, x=32, store=490). Will move normally and eat
-->4-Sheep (y=7, x=32, store=490) before normal moving and eating
-->4-Sheep (y=6, x=33, store=500) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=65, x=101, store=630) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store > Min_ernergy(600) (y=65, x=101, store=630).
--> 5-Sheep looping with 0-Sheep.
-> NO CS Found.
-> 5-Sheep (y=65, x=101, store=630) before normally moving and eating.
-> 5-Sheep (y=64, x=102, store=640) after normally moving and eating.
___e1________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=2, x=57, store=620.0) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
---> d<md+... 6-Sheep noticed closest 4-Wolf ...
---> 6-Sheep (y=2, x=57, store=620.0) detected 4-Wolf (y=9, x=71, store=652.0) within d=15.652475842498529.
-> CW FOUND.
--> Before 6-Sheep (y=2, x=57, store=620.0) tries to run away from CW: (y=9, x=71, store=652.0).
--> After 6-Sheep (y=0, x=50, store=620.0) tried to run away from CW (y=9, x=71, store=652.0).
___________ 6 Sheep tried to run away from CW ___________ 

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=223, x=46, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=223, x=46, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=223, x=46, store=100) before normal moving
-->else1 ends: 0-Wolf (y=222, x=45, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=110, x=265, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=110, x=265, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=110, x=265, store=300) before normal moving
-->else1 ends: 1-Wolf (y=109, x=266, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=214, x=122, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=214, x=122, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=214, x=122, store=200) before normal moving
-->else1 ends: 2-Wolf (y=215, x=123, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=36, x=91, store=736.0) --------
--> 3-Wolf has > 500 store (y=36, x=91, store=736.0) and Random >= 0.5. so will try to find CW to move closer or breed/fight if within AD(5).
---> 3-Wolf looping with 0-Wolf
----> (AD2 < D < MD).
----> Min distance=33.60059523282288 for 3-Wolf (y=36, x=91, store=736.0) with 0-Wolf (y=9, x=71, store=652.0)
->CW Found!
-> 3-Wolf (y=36, x=91, store=736.0) before moving closer to CW-Wolf: (y=9, x=71, store=652.0).
-> 3-Wolf (y=22, x=81, store=736.0) after moving closer to CW-Wolf: (y=9, x=71, store=652.0).
_______ 3-Wolf moved closer CW+_______

---------4-Wolf initialised with (y=9, x=71, store=652.0) --------
--> 4-Wolf has > 500 store (y=9, x=71, store=652.0) and Random >= 0.5. so will try to find CW to move closer or breed/fight if within AD(5).
-> No CW found. although store >500 and p>=0.5!
--->else2 begins: 4-Wolf (y=9, x=71, store=652.0) before normal moving.
--->else2 begins: 4-Wolf (y=8, x=72, store=652.0) after normal moving.
.... el2 _______  4-Wolf moved normally _______ 
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 31 ************

-> ------------ 0-Sheep initialised with (y=94, x=45, store=610) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store > Min_ernergy(600) (y=94, x=45, store=610).
--> 0-Sheep looping with 0-Sheep.
--> 0-Sheep looping with 1-Sheep.
--> 0-Sheep looping with 2-Sheep.
----> ---- (AD < D < MD).
----> Min distance=22.67156809750927 for 0-Sheep (y=94, x=45, store=610) with 2-Sheep (y=79, x=62, store=710).
--> 0-Sheep looping with 3-Sheep.
--> 0-Sheep looping with 4-Sheep.
--> 0-Sheep looping with 5-Sheep.
->CS Found!
-> 0-Sheep (y=94, x=45, store=610) before moving closer (while eating) to CS-Sheep: (y=79, x=62, store=710).
-> 0-Wolf (y=86, x=53, store=620) after moving closer (while eating) to CS-Sheep: (y=79, x=62, store=710).
___________ 0-Sheep moved closer CS___________


-> ------------ 1-Sheep initialised with (y=67, x=97, store=630) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store > Min_ernergy(600) (y=67, x=97, store=630).
--> 1-Sheep looping with 0-Sheep.
--> 1-Sheep looping with 1-Sheep.
--> 1-Sheep looping with 2-Sheep.
--> 1-Sheep looping with 3-Sheep.
----> ---- (AD < D < MD).
----> Min distance=5.830951894845301 for 1-Sheep (y=67, x=97, store=630) with 3-Sheep (y=64, x=102, store=640).
--> 1-Sheep looping with 4-Sheep.
->CS Found!
-> 1-Sheep (y=67, x=97, store=630) before moving closer (while eating) to CS-Sheep: (y=64, x=102, store=640).
-> 1-Wolf (y=65, x=99, store=640) after moving closer (while eating) to CS-Sheep: (y=64, x=102, store=640).
___________ 1-Sheep moved closer CS___________


-> ------------ 2-Sheep initialised with (y=0, x=64, store=610.0) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
---> d<md+... 2-Sheep noticed closest 4-Wolf ...
---> 2-Sheep (y=0, x=64, store=610.0) detected 4-Wolf (y=8, x=72, store=652.0) within d=11.313708498984761.
-> CW FOUND.
--> Before 2-Sheep (y=0, x=64, store=610.0) tries to run away from CW: (y=8, x=72, store=652.0).
--> After 2-Sheep (y=0, x=60, store=610.0) tried to run away from CW (y=8, x=72, store=652.0).
___________ 2 Sheep tried to run away from CW ___________ 


-> ------------ 3-Sheep initialised with (y=79, x=62, store=710) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store > Min_ernergy(600) (y=79, x=62, store=710).
--> 3-Sheep looping with 0-Sheep.
--> 3-Sheep looping with 1-Sheep.
--> 3-Sheep looping with 2-Sheep.
-> NO CS Found.
-> 3-Sheep (y=79, x=62, store=710) before normally moving and eating.
-> 3-Sheep (y=78, x=61, store=720) after normally moving and eating.
___e1________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=6, x=33, store=500) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=6, x=33, store=500). Will move normally and eat
-->4-Sheep (y=6, x=33, store=500) before normal moving and eating
-->4-Sheep (y=5, x=32, store=510) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=64, x=102, store=640) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store > Min_ernergy(600) (y=64, x=102, store=640).
--> 5-Sheep looping with 0-Sheep.
-> NO CS Found.
-> 5-Sheep (y=64, x=102, store=640) before normally moving and eating.
-> 5-Sheep (y=63, x=101, store=650) after normally moving and eating.
___e1________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=0, x=50, store=620.0) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
---> d<md+... 6-Sheep noticed closest 4-Wolf ...
---> 6-Sheep (y=0, x=50, store=620.0) detected 4-Wolf (y=8, x=72, store=652.0) within d=23.40939982143925.
-> CW FOUND.
--> Before 6-Sheep (y=0, x=50, store=620.0) tries to run away from CW: (y=8, x=72, store=652.0).
--> After 6-Sheep (y=0, x=39, store=620.0) tried to run away from CW (y=8, x=72, store=652.0).
___________ 6 Sheep tried to run away from CW ___________ 

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=222, x=45, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=222, x=45, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=222, x=45, store=100) before normal moving
-->else1 ends: 0-Wolf (y=221, x=44, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=109, x=266, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=109, x=266, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=109, x=266, store=300) before normal moving
-->else1 ends: 1-Wolf (y=110, x=267, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=215, x=123, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=215, x=123, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=215, x=123, store=200) before normal moving
-->else1 ends: 2-Wolf (y=214, x=122, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=22, x=81, store=736.0) --------
--> 3-Wolf has > 500 store (y=22, x=81, store=736.0) and Random >= 0.5. so will try to find CW to move closer or breed/fight if within AD(5).
---> 3-Wolf looping with 0-Wolf
----> (AD2 < D < MD).
----> Min distance=16.64331697709324 for 3-Wolf (y=22, x=81, store=736.0) with 0-Wolf (y=8, x=72, store=652.0)
->CW Found!
-> 3-Wolf (y=22, x=81, store=736.0) before moving closer to CW-Wolf: (y=8, x=72, store=652.0).
-> 3-Wolf (y=15, x=76, store=736.0) after moving closer to CW-Wolf: (y=8, x=72, store=652.0).
_______ 3-Wolf moved closer CW+_______

---------4-Wolf initialised with (y=8, x=72, store=652.0) --------
--> 4-Wolf has > 500 store (y=8, x=72, store=652.0) and Random >= 0.5. so will try to find CW to move closer or breed/fight if within AD(5).
-> No CW found. although store >500 and p>=0.5!
--->else2 begins: 4-Wolf (y=8, x=72, store=652.0) before normal moving.
--->else2 begins: 4-Wolf (y=9, x=73, store=652.0) after normal moving.
.... el2 _______  4-Wolf moved normally _______ 
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 32 ************

-> ------------ 0-Sheep initialised with (y=86, x=53, store=620) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store > Min_ernergy(600) (y=86, x=53, store=620).
--> 0-Sheep looping with 0-Sheep.
--> 0-Sheep looping with 1-Sheep.
--> 0-Sheep looping with 2-Sheep.
----> ---- (AD < D < MD).
----> Min distance=11.313708498984761 for 0-Sheep (y=86, x=53, store=620) with 2-Sheep (y=78, x=61, store=720).
--> 0-Sheep looping with 3-Sheep.
--> 0-Sheep looping with 4-Sheep.
--> 0-Sheep looping with 5-Sheep.
->CS Found!
-> 0-Sheep (y=86, x=53, store=620) before moving closer (while eating) to CS-Sheep: (y=78, x=61, store=720).
-> 0-Wolf (y=82, x=57, store=630) after moving closer (while eating) to CS-Sheep: (y=78, x=61, store=720).
___________ 0-Sheep moved closer CS___________


-> ------------ 1-Sheep initialised with (y=65, x=99, store=640) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store > Min_ernergy(600) (y=65, x=99, store=640).
--> 1-Sheep looping with 0-Sheep.
--> 1-Sheep looping with 1-Sheep.
--> 1-Sheep looping with 2-Sheep.
--> 1-Sheep looping with 3-Sheep.
----> D <=AD. Sheep Breeding/Sharing proximity of 2.8284271247461903(<=5) entered by CS 1-Sheep (y=65, x=99, store=640) with CS 3-Sheep (y=63, x=101, store=650).
----->1-Sheep (y=65, x=99, store=640) and CS 3-Sheep (y=63, x=101, store=650 have > Min_energy (600) store. So they will try breeding if p>0.5
------>1.A. Random >0.5. So the sheep will breed.
------> 1-Sheep (y=65, x=99, store=640) before breeding with CS 3-Sheep (y=63, x=101, store=650).
------> Sheep Breed = True
------> 1-Sheep (y=65, x=99, store=322.5) after breeding with CS 3-Sheep (y=63, x=101, store=322.5).
_____________ 1-Sheep Mated SUCCESSFULLY with CS 3-Sheep ____________
_______ Breeding=True, Failed breeding=False, Share=False for 1-Sheep __________

-> ------------ 2-Sheep initialised with (y=0, x=60, store=610.0) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
---> d<md+... 2-Sheep noticed closest 3-Wolf ...
---> 2-Sheep (y=0, x=60, store=610.0) detected 3-Wolf (y=15, x=76, store=736.0) within d=21.93171219946131.
--> 2-Sheep looping with 4-Wolf.
---> d<md+... 2-Sheep noticed closest 4-Wolf ...
---> 2-Sheep (y=0, x=60, store=610.0) detected 4-Wolf (y=9, x=73, store=652.0) within d=15.811388300841896.
-> CW FOUND.
--> Before 2-Sheep (y=0, x=60, store=610.0) tries to run away from CW: (y=9, x=73, store=652.0).
--> After 2-Sheep (y=0, x=54, store=610.0) tried to run away from CW (y=9, x=73, store=652.0).
___________ 2 Sheep tried to run away from CW ___________ 


-> ------------ 3-Sheep initialised with (y=78, x=61, store=720) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store > Min_ernergy(600) (y=78, x=61, store=720).
--> 3-Sheep looping with 0-Sheep.
--> 3-Sheep looping with 1-Sheep.
--> 3-Sheep looping with 2-Sheep.
--> 3-Sheep looping with 3-Sheep.
-> NO CS Found.
-> 3-Sheep (y=78, x=61, store=720) before normally moving and eating.
-> 3-Sheep (y=77, x=62, store=730) after normally moving and eating.
___e1________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=5, x=32, store=510) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=5, x=32, store=510). Will move normally and eat
-->4-Sheep (y=5, x=32, store=510) before normal moving and eating
-->4-Sheep (y=4, x=31, store=520) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=63, x=101, store=322.5) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=63, x=101, store=322.5). Will move normally and eat
-->5-Sheep (y=63, x=101, store=322.5) before normal moving and eating
-->5-Sheep (y=64, x=102, store=332.5) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=0, x=39, store=620.0) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store > Min_ernergy(600) (y=0, x=39, store=620.0).
--> 6-Sheep looping with 0-Sheep.
-> NO CS Found.
-> 6-Sheep (y=0, x=39, store=620.0) before normally moving and eating.
-> 6-Sheep (y=0, x=38, store=630.0) after normally moving and eating.
___e1________ 6-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=221, x=44, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=221, x=44, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=221, x=44, store=100) before normal moving
-->else1 ends: 0-Wolf (y=222, x=43, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=110, x=267, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=110, x=267, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=110, x=267, store=300) before normal moving
-->else1 ends: 1-Wolf (y=109, x=268, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=214, x=122, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=214, x=122, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=214, x=122, store=200) before normal moving
-->else1 ends: 2-Wolf (y=213, x=121, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=15, x=76, store=736.0) --------
--> 3-Wolf has >Min_energy(500) store (y=15, x=76, store=736.0) and 0.25 <= random.random() < 0.5. Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
----> action_dist(5) < distance(26.627053911388696) < min_dist(50)
----> Min Distance = 26.627053911388696 for 3-Wolf (y=15, x=76, store=736.0) with 2-Sheep (y=0, x=54, store=610.0)
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
-> CS Found!
--> 3-Wolf (y=15, x=76, store=736.0) before moving closer to  Closest-Sheep (y=0, x=54, store=610.0)
--> 3-Wolf (y=7, x=65, store=736.0) after moving closer to Closest-Sheep (y=0, x=54, store=610.0)
___________ 3-Wolf moved closer to CS___________

---------4-Wolf initialised with (y=9, x=73, store=652.0) --------
--> if and elif not satisfied
--> 4-Wolf has > Min_energy(500) store (y=9, x=73, store=652.0) but Random < bf_e/2(0.25). So will move normally.
--->else3 begins: 4-Wolf (y=9, x=73, store=652.0) before normal moving.
--->else3 begins: 4-Wolf (y=10, x=74, store=652.0) after normal moving.
....e3_______ 4-Wolf moved normally_______
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 33 ************

-> ------------ 0-Sheep initialised with (y=82, x=57, store=630) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store > Min_ernergy(600) (y=82, x=57, store=630).
--> 0-Sheep looping with 0-Sheep.
--> 0-Sheep looping with 1-Sheep.
--> 0-Sheep looping with 2-Sheep.
----> ---- (AD < D < MD).
----> Min distance=7.0710678118654755 for 0-Sheep (y=82, x=57, store=630) with 2-Sheep (y=77, x=62, store=730).
--> 0-Sheep looping with 3-Sheep.
--> 0-Sheep looping with 4-Sheep.
--> 0-Sheep looping with 5-Sheep.
--> 0-Sheep looping with 6-Sheep.
->CS Found!
-> 0-Sheep (y=82, x=57, store=630) before moving closer (while eating) to CS-Sheep: (y=77, x=62, store=730).
-> 0-Wolf (y=79, x=59, store=640) after moving closer (while eating) to CS-Sheep: (y=77, x=62, store=730).
___________ 0-Sheep moved closer CS___________


-> ------------ 1-Sheep initialised with (y=65, x=99, store=322.5) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=65, x=99, store=322.5). Will move normally and eat
-->1-Sheep (y=65, x=99, store=322.5) before normal moving and eating
-->1-Sheep (y=64, x=100, store=332.5) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=0, x=54, store=610.0) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
---> d<md+... 2-Sheep noticed closest 3-Wolf ...
---> 2-Sheep (y=0, x=54, store=610.0) detected 3-Wolf (y=7, x=65, store=736.0) within d=13.038404810405298.
--> 2-Sheep looping with 4-Wolf.
-> CW FOUND.
--> Before 2-Sheep (y=0, x=54, store=610.0) tries to run away from CW: (y=7, x=65, store=736.0).
--> After 2-Sheep (y=0, x=49, store=610.0) tried to run away from CW (y=7, x=65, store=736.0).
___________ 2 Sheep tried to run away from CW ___________ 


-> ------------ 3-Sheep initialised with (y=77, x=62, store=730) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store > Min_ernergy(600) (y=77, x=62, store=730).
--> 3-Sheep looping with 0-Sheep.
--> 3-Sheep looping with 1-Sheep.
--> 3-Sheep looping with 2-Sheep.
--> 3-Sheep looping with 3-Sheep.
-> NO CS Found.
-> 3-Sheep (y=77, x=62, store=730) before normally moving and eating.
-> 3-Sheep (y=76, x=63, store=740) after normally moving and eating.
___e1________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=4, x=31, store=520) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=4, x=31, store=520). Will move normally and eat
-->4-Sheep (y=4, x=31, store=520) before normal moving and eating
-->4-Sheep (y=5, x=32, store=530) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=64, x=102, store=332.5) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=64, x=102, store=332.5). Will move normally and eat
-->5-Sheep (y=64, x=102, store=332.5) before normal moving and eating
-->5-Sheep (y=65, x=103, store=342.5) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=0, x=38, store=630.0) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store > Min_ernergy(600) (y=0, x=38, store=630.0).
--> 6-Sheep looping with 0-Sheep.
-> NO CS Found.
-> 6-Sheep (y=0, x=38, store=630.0) before normally moving and eating.
-> 6-Sheep (y=1, x=39, store=640.0) after normally moving and eating.
___e1________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=75, x=109, store=300) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=75, x=109, store=300). Will move normally and eat
-->7-Sheep (y=75, x=109, store=300) before normal moving and eating
-->7-Sheep (y=74, x=108, store=310) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=222, x=43, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=222, x=43, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=222, x=43, store=100) before normal moving
-->else1 ends: 0-Wolf (y=221, x=42, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=109, x=268, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=109, x=268, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=109, x=268, store=300) before normal moving
-->else1 ends: 1-Wolf (y=110, x=267, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=213, x=121, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=213, x=121, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=213, x=121, store=200) before normal moving
-->else1 ends: 2-Wolf (y=214, x=120, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=7, x=65, store=736.0) --------
--> 3-Wolf has > 500 store (y=7, x=65, store=736.0) and Random >= 0.5. so will try to find CW to move closer or breed/fight if within AD(5).
---> 3-Wolf looping with 0-Wolf
----> (AD2 < D < MD).
----> Min distance=9.486832980505138 for 3-Wolf (y=7, x=65, store=736.0) with 0-Wolf (y=10, x=74, store=652.0)
->CW Found!
-> 3-Wolf (y=7, x=65, store=736.0) before moving closer to CW-Wolf: (y=10, x=74, store=652.0).
-> 3-Wolf (y=8, x=69, store=736.0) after moving closer to CW-Wolf: (y=10, x=74, store=652.0).
_______ 3-Wolf moved closer CW+_______

---------4-Wolf initialised with (y=10, x=74, store=652.0) --------
--> if and elif not satisfied
--> 4-Wolf has > Min_energy(500) store (y=10, x=74, store=652.0) but Random < bf_e/2(0.25). So will move normally.
--->else3 begins: 4-Wolf (y=10, x=74, store=652.0) before normal moving.
--->else3 begins: 4-Wolf (y=11, x=73, store=652.0) after normal moving.
....e3_______ 4-Wolf moved normally_______
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 34 ************

-> ------------ 0-Sheep initialised with (y=79, x=59, store=640) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store > Min_ernergy(600) (y=79, x=59, store=640).
--> 0-Sheep looping with 0-Sheep.
--> 0-Sheep looping with 1-Sheep.
--> 0-Sheep looping with 2-Sheep.
----> D <=AD. Sheep Breeding/Sharing proximity of 5.0(<=5) entered by CS 0-Sheep (y=79, x=59, store=640) with CS 2-Sheep (y=76, x=63, store=740).
----->0-Sheep (y=79, x=59, store=640) and CS 2-Sheep (y=76, x=63, store=740 have > Min_energy (600) store. So they will try breeding if p>0.5
------>1.A. Random >0.5. So the sheep will breed.
------> 0-Sheep (y=79, x=59, store=640) before breeding with CS 2-Sheep (y=76, x=63, store=740).
------> Sheep Breed = True
------> 0-Sheep (y=79, x=59, store=345.0) after breeding with CS 2-Sheep (y=76, x=63, store=345.0).
_____________ 0-Sheep Mated SUCCESSFULLY with CS 2-Sheep ____________
_______ Breeding=True, Failed breeding=False, Share=False for 0-Sheep __________

-> ------------ 1-Sheep initialised with (y=64, x=100, store=332.5) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=64, x=100, store=332.5). Will move normally and eat
-->1-Sheep (y=64, x=100, store=332.5) before normal moving and eating
-->1-Sheep (y=63, x=99, store=342.5) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=0, x=49, store=610.0) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
---> d<md+... 2-Sheep noticed closest 3-Wolf ...
---> 2-Sheep (y=0, x=49, store=610.0) detected 3-Wolf (y=8, x=69, store=736.0) within d=21.540659228538015.
--> 2-Sheep looping with 4-Wolf.
-> CW FOUND.
--> Before 2-Sheep (y=0, x=49, store=610.0) tries to run away from CW: (y=8, x=69, store=736.0).
--> After 2-Sheep (y=0, x=39, store=610.0) tried to run away from CW (y=8, x=69, store=736.0).
___________ 2 Sheep tried to run away from CW ___________ 


-> ------------ 3-Sheep initialised with (y=76, x=63, store=345.0) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=76, x=63, store=345.0). Will move normally and eat
-->3-Sheep (y=76, x=63, store=345.0) before normal moving and eating
-->3-Sheep (y=75, x=62, store=355.0) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=5, x=32, store=530) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=5, x=32, store=530). Will move normally and eat
-->4-Sheep (y=5, x=32, store=530) before normal moving and eating
-->4-Sheep (y=4, x=31, store=540) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=65, x=103, store=342.5) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=65, x=103, store=342.5). Will move normally and eat
-->5-Sheep (y=65, x=103, store=342.5) before normal moving and eating
-->5-Sheep (y=64, x=104, store=352.5) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=1, x=39, store=640.0) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store > Min_ernergy(600) (y=1, x=39, store=640.0).
--> 6-Sheep looping with 0-Sheep.
--> 6-Sheep looping with 1-Sheep.
-> NO CS Found.
-> 6-Sheep (y=1, x=39, store=640.0) before normally moving and eating.
-> 6-Sheep (y=0, x=40, store=650.0) after normally moving and eating.
___e1________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=74, x=108, store=310) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=74, x=108, store=310). Will move normally and eat
-->7-Sheep (y=74, x=108, store=310) before normal moving and eating
-->7-Sheep (y=73, x=107, store=320) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=221, x=42, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=221, x=42, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
---> 0-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=221, x=42, store=100) before normal moving
-->else1 ends: 0-Wolf (y=222, x=43, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=110, x=267, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=110, x=267, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
---> 1-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=110, x=267, store=300) before normal moving
-->else1 ends: 1-Wolf (y=111, x=266, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=214, x=120, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=214, x=120, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
---> 2-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=214, x=120, store=200) before normal moving
-->else1 ends: 2-Wolf (y=215, x=121, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=8, x=69, store=736.0) --------
--> if and elif not satisfied
--> 3-Wolf has > Min_energy(500) store (y=8, x=69, store=736.0) but Random < bf_e/2(0.25). So will move normally.
--->else3 begins: 3-Wolf (y=8, x=69, store=736.0) before normal moving.
--->else3 begins: 3-Wolf (y=7, x=70, store=736.0) after normal moving.
....e3_______ 3-Wolf moved normally_______

---------4-Wolf initialised with (y=11, x=73, store=652.0) --------
--> if and elif not satisfied
--> 4-Wolf has > Min_energy(500) store (y=11, x=73, store=652.0) but Random < bf_e/2(0.25). So will move normally.
--->else3 begins: 4-Wolf (y=11, x=73, store=652.0) before normal moving.
--->else3 begins: 4-Wolf (y=10, x=72, store=652.0) after normal moving.
....e3_______ 4-Wolf moved normally_______
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 35 ************

-> ------------ 0-Sheep initialised with (y=79, x=59, store=345.0) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=79, x=59, store=345.0). Will move normally and eat
-->0-Sheep (y=79, x=59, store=345.0) before normal moving and eating
-->0-Sheep (y=78, x=58, store=355.0) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=63, x=99, store=342.5) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=63, x=99, store=342.5). Will move normally and eat
-->1-Sheep (y=63, x=99, store=342.5) before normal moving and eating
-->1-Sheep (y=62, x=100, store=352.5) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=0, x=39, store=610.0) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store > Min_ernergy(600) (y=0, x=39, store=610.0).
--> 2-Sheep looping with 0-Sheep.
--> 2-Sheep looping with 1-Sheep.
----> ---- (AD < D < MD).
----> Min distance=8.94427190999916 for 2-Sheep (y=0, x=39, store=610.0) with 1-Sheep (y=4, x=31, store=540).
--> 2-Sheep looping with 2-Sheep.
--> 2-Sheep looping with 3-Sheep.
----> D <=AD. Sheep Breeding/Sharing proximity of 1.0(<=5) entered by CS 2-Sheep (y=0, x=39, store=610.0) with CS 3-Sheep (y=0, x=40, store=650.0).
----->2-Sheep (y=0, x=39, store=610.0) and CS 3-Sheep (y=0, x=40, store=650.0 have > Min_energy (600) store. So they will try breeding if p>0.5
------>1.B Random <0.5. So the breeding will fail.
------> 2-Sheep (y=0, x=39, store=610.0) before failed breeding with CS 3-Sheep (y=0, x=40, store=650.0)
------> Failed Sheep Breeding = True
------> 2-Sheep (y=0, x=39, store=315.0) after failed breeding with CS 3-Sheep (y=0, x=40, store=315.0).
_____________ 2-Sheep Fail Mated with CS 3-Sheep ____________
_______ Breeding=False, Failed breeding=True, Share=False for 2-Sheep __________

-> ------------ 3-Sheep initialised with (y=75, x=62, store=355.0) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=75, x=62, store=355.0). Will move normally and eat
-->3-Sheep (y=75, x=62, store=355.0) before normal moving and eating
-->3-Sheep (y=76, x=63, store=365.0) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=4, x=31, store=540) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=4, x=31, store=540). Will move normally and eat
-->4-Sheep (y=4, x=31, store=540) before normal moving and eating
-->4-Sheep (y=5, x=30, store=550) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=64, x=104, store=352.5) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=64, x=104, store=352.5). Will move normally and eat
-->5-Sheep (y=64, x=104, store=352.5) before normal moving and eating
-->5-Sheep (y=65, x=105, store=362.5) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=0, x=40, store=315.0) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=0, x=40, store=315.0). Will move normally and eat
-->6-Sheep (y=0, x=40, store=315.0) before normal moving and eating
-->6-Sheep (y=1, x=41, store=325.0) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=73, x=107, store=320) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=73, x=107, store=320). Will move normally and eat
-->7-Sheep (y=73, x=107, store=320) before normal moving and eating
-->7-Sheep (y=74, x=106, store=330) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________


-> ------------ 8-Sheep initialised with (y=89, x=69, store=400) -----------
--> 8-Sheep looping with 0-Wolf.
--> 8-Sheep looping with 1-Wolf.
--> 8-Sheep looping with 2-Wolf.
--> 8-Sheep looping with 3-Wolf.
--> 8-Sheep looping with 4-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->8-Sheep has Store < Min_ernergy(600) (y=89, x=69, store=400). Will move normally and eat
-->8-Sheep (y=89, x=69, store=400) before normal moving and eating
-->8-Sheep (y=88, x=70, store=410) after normal moving and eating
___e2________ 8-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=222, x=43, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=222, x=43, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
---> 0-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=222, x=43, store=100) before normal moving
-->else1 ends: 0-Wolf (y=221, x=42, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=111, x=266, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=111, x=266, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
---> 1-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=111, x=266, store=300) before normal moving
-->else1 ends: 1-Wolf (y=110, x=267, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=215, x=121, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=215, x=121, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
---> 2-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=215, x=121, store=200) before normal moving
-->else1 ends: 2-Wolf (y=216, x=122, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=7, x=70, store=736.0) --------
--> 3-Wolf has > 500 store (y=7, x=70, store=736.0) and Random >= 0.5. so will try to find CW to move closer or breed/fight if within AD(5).
---> 3-Wolf looping with 0-Wolf
----> d<=ad. breeding/fight roximity of 3.605551275463989(<=5) entered by 3-Wolf (y=7, x=70, store=736.0) with CW 0-Wolf (y=10, x=72, store=652.0).
-----> CW 0-Wolf (y=10, x=72, store=652.0 has > 500 store. So they will try breeding. 50.0% probability breeding successfully.
------>1.A. Random >0.5. So the wolves will mate.
------> 3-Wolf (y=7, x=70, store=736.0) before mating with CW 0-Wolf (y=10, x=72, store=652.0)
------> Breed = True
------> 3-Wolf (y=7, x=70, store=347.0) after mating with CW 0-Wolf (y=10, x=72, store=347.0)
_____________ 3-Wolf Mated SUCCESSFULLY with CW 0-Wolf ____________
_______ Breed=True, Failed Breed=False, Fought=False for 3-Wolf __________

---------4-Wolf initialised with (y=10, x=72, store=347.0) --------
--> 4-Wolf has <=Min_energy(500) store (y=10, x=72, store=347.0). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
----> action_dist(5) < distance(34.48187929913333) < min_dist(50)
----> Min Distance = 34.48187929913333 for 4-Wolf (y=10, x=72, store=347.0) with 2-Sheep (y=0, x=39, store=315.0)
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
----> action_dist(5) < distance(32.28002478313795) < min_dist(34.48187929913333)
----> Min Distance = 32.28002478313795 for 4-Wolf (y=10, x=72, store=347.0) with 6-Sheep (y=1, x=41, store=325.0)
---> 4-Wolf looping with 7-Sheep
---> 4-Wolf looping with 8-Sheep
-> CS Found!
--> 4-Wolf (y=10, x=72, store=347.0) before moving closer to  Closest-Sheep (y=1, x=41, store=325.0)
--> 4-Wolf (y=5, x=56, store=347.0) after moving closer to Closest-Sheep (y=1, x=41, store=325.0)
___________ 4-Wolf moved closer to CS___________
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 36 ************

-> ------------ 0-Sheep initialised with (y=78, x=58, store=355.0) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=78, x=58, store=355.0). Will move normally and eat
-->0-Sheep (y=78, x=58, store=355.0) before normal moving and eating
-->0-Sheep (y=79, x=57, store=365.0) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=62, x=100, store=352.5) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=62, x=100, store=352.5). Will move normally and eat
-->1-Sheep (y=62, x=100, store=352.5) before normal moving and eating
-->1-Sheep (y=61, x=99, store=362.5) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=0, x=39, store=315.0) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
---> d<md+... 2-Sheep noticed closest 4-Wolf ...
---> 2-Sheep (y=0, x=39, store=315.0) detected 4-Wolf (y=5, x=56, store=347.0) within d=17.72004514666935.
--> 2-Sheep looping with 5-Wolf.
-> CW FOUND.
--> Before 2-Sheep (y=0, x=39, store=315.0) tries to run away from CW: (y=5, x=56, store=347.0).
--> After 2-Sheep (y=0, x=31, store=315.0) tried to run away from CW (y=5, x=56, store=347.0).
___________ 2 Sheep tried to run away from CW ___________ 


-> ------------ 3-Sheep initialised with (y=76, x=63, store=365.0) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=76, x=63, store=365.0). Will move normally and eat
-->3-Sheep (y=76, x=63, store=365.0) before normal moving and eating
-->3-Sheep (y=77, x=64, store=375.0) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=5, x=30, store=550) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=5, x=30, store=550). Will move normally and eat
-->4-Sheep (y=5, x=30, store=550) before normal moving and eating
-->4-Sheep (y=6, x=29, store=560) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=65, x=105, store=362.5) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=65, x=105, store=362.5). Will move normally and eat
-->5-Sheep (y=65, x=105, store=362.5) before normal moving and eating
-->5-Sheep (y=66, x=104, store=372.5) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=1, x=41, store=325.0) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
---> d<md+... 6-Sheep noticed closest 4-Wolf ...
---> 6-Sheep (y=1, x=41, store=325.0) detected 4-Wolf (y=5, x=56, store=347.0) within d=15.524174696260024.
--> 6-Sheep looping with 5-Wolf.
-> CW FOUND.
--> Before 6-Sheep (y=1, x=41, store=325.0) tries to run away from CW: (y=5, x=56, store=347.0).
--> After 6-Sheep (y=0, x=34, store=325.0) tried to run away from CW (y=5, x=56, store=347.0).
___________ 6 Sheep tried to run away from CW ___________ 


-> ------------ 7-Sheep initialised with (y=74, x=106, store=330) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=74, x=106, store=330). Will move normally and eat
-->7-Sheep (y=74, x=106, store=330) before normal moving and eating
-->7-Sheep (y=75, x=107, store=340) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________


-> ------------ 8-Sheep initialised with (y=88, x=70, store=410) -----------
--> 8-Sheep looping with 0-Wolf.
--> 8-Sheep looping with 1-Wolf.
--> 8-Sheep looping with 2-Wolf.
--> 8-Sheep looping with 3-Wolf.
--> 8-Sheep looping with 4-Wolf.
--> 8-Sheep looping with 5-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->8-Sheep has Store < Min_ernergy(600) (y=88, x=70, store=410). Will move normally and eat
-->8-Sheep (y=88, x=70, store=410) before normal moving and eating
-->8-Sheep (y=89, x=71, store=420) after normal moving and eating
___e2________ 8-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=221, x=42, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=221, x=42, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
---> 0-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=221, x=42, store=100) before normal moving
-->else1 ends: 0-Wolf (y=220, x=41, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=110, x=267, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=110, x=267, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
---> 1-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=110, x=267, store=300) before normal moving
-->else1 ends: 1-Wolf (y=111, x=268, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=216, x=122, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=216, x=122, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
---> 2-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=216, x=122, store=200) before normal moving
-->else1 ends: 2-Wolf (y=217, x=121, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=7, x=70, store=347.0) --------
--> 3-Wolf has <=Min_energy(500) store (y=7, x=70, store=347.0). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
----> action_dist(5) < distance(39.6232255123179) < min_dist(50)
----> Min Distance = 39.6232255123179 for 3-Wolf (y=7, x=70, store=347.0) with 2-Sheep (y=0, x=31, store=315.0)
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
----> action_dist(5) < distance(36.6742416417845) < min_dist(39.6232255123179)
----> Min Distance = 36.6742416417845 for 3-Wolf (y=7, x=70, store=347.0) with 6-Sheep (y=0, x=34, store=325.0)
---> 3-Wolf looping with 7-Sheep
---> 3-Wolf looping with 8-Sheep
-> CS Found!
--> 3-Wolf (y=7, x=70, store=347.0) before moving closer to  Closest-Sheep (y=0, x=34, store=325.0)
--> 3-Wolf (y=3, x=52, store=347.0) after moving closer to Closest-Sheep (y=0, x=34, store=325.0)
___________ 3-Wolf moved closer to CS___________

---------4-Wolf initialised with (y=5, x=56, store=347.0) --------
--> 4-Wolf has <=Min_energy(500) store (y=5, x=56, store=347.0). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
----> action_dist(5) < distance(25.495097567963924) < min_dist(50)
----> Min Distance = 25.495097567963924 for 4-Wolf (y=5, x=56, store=347.0) with 2-Sheep (y=0, x=31, store=315.0)
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
----> action_dist(5) < distance(22.561028345356956) < min_dist(25.495097567963924)
----> Min Distance = 22.561028345356956 for 4-Wolf (y=5, x=56, store=347.0) with 6-Sheep (y=0, x=34, store=325.0)
---> 4-Wolf looping with 7-Sheep
---> 4-Wolf looping with 8-Sheep
-> CS Found!
--> 4-Wolf (y=5, x=56, store=347.0) before moving closer to  Closest-Sheep (y=0, x=34, store=325.0)
--> 4-Wolf (y=2, x=45, store=347.0) after moving closer to Closest-Sheep (y=0, x=34, store=325.0)
___________ 4-Wolf moved closer to CS___________

---------5-Wolf initialised with (y=12, x=75, store=400) --------
--> 5-Wolf has <=Min_energy(500) store (y=12, x=75, store=400). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
----> action_dist(5) < distance(45.60701700396552) < min_dist(50)
----> Min Distance = 45.60701700396552 for 5-Wolf (y=12, x=75, store=400) with 2-Sheep (y=0, x=31, store=315.0)
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
----> action_dist(5) < distance(42.720018726587654) < min_dist(45.60701700396552)
----> Min Distance = 42.720018726587654 for 5-Wolf (y=12, x=75, store=400) with 6-Sheep (y=0, x=34, store=325.0)
---> 5-Wolf looping with 7-Sheep
---> 5-Wolf looping with 8-Sheep
-> CS Found!
--> 5-Wolf (y=12, x=75, store=400) before moving closer to  Closest-Sheep (y=0, x=34, store=325.0)
--> 5-Wolf (y=6, x=54, store=400) after moving closer to Closest-Sheep (y=0, x=34, store=325.0)
___________ 5-Wolf moved closer to CS___________
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 37 ************

-> ------------ 0-Sheep initialised with (y=79, x=57, store=365.0) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=79, x=57, store=365.0). Will move normally and eat
-->0-Sheep (y=79, x=57, store=365.0) before normal moving and eating
-->0-Sheep (y=80, x=56, store=375.0) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=61, x=99, store=362.5) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=61, x=99, store=362.5). Will move normally and eat
-->1-Sheep (y=61, x=99, store=362.5) before normal moving and eating
-->1-Sheep (y=60, x=98, store=372.5) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=0, x=31, store=315.0) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
---> d<md+... 2-Sheep noticed closest 3-Wolf ...
---> 2-Sheep (y=0, x=31, store=315.0) detected 3-Wolf (y=3, x=52, store=347.0) within d=21.213203435596427.
--> 2-Sheep looping with 4-Wolf.
---> d<md+... 2-Sheep noticed closest 4-Wolf ...
---> 2-Sheep (y=0, x=31, store=315.0) detected 4-Wolf (y=2, x=45, store=347.0) within d=14.142135623730951.
--> 2-Sheep looping with 5-Wolf.
-> CW FOUND.
--> Before 2-Sheep (y=0, x=31, store=315.0) tries to run away from CW: (y=2, x=45, store=347.0).
--> After 2-Sheep (y=0, x=24, store=315.0) tried to run away from CW (y=2, x=45, store=347.0).
___________ 2 Sheep tried to run away from CW ___________ 


-> ------------ 3-Sheep initialised with (y=77, x=64, store=375.0) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=77, x=64, store=375.0). Will move normally and eat
-->3-Sheep (y=77, x=64, store=375.0) before normal moving and eating
-->3-Sheep (y=78, x=63, store=385.0) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=6, x=29, store=560) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
---> d<md+... 4-Sheep noticed closest 3-Wolf ...
---> 4-Sheep (y=6, x=29, store=560) detected 3-Wolf (y=3, x=52, store=347.0) within d=23.194827009486403.
--> 4-Sheep looping with 4-Wolf.
---> d<md+... 4-Sheep noticed closest 4-Wolf ...
---> 4-Sheep (y=6, x=29, store=560) detected 4-Wolf (y=2, x=45, store=347.0) within d=16.492422502470642.
--> 4-Sheep looping with 5-Wolf.
-> CW FOUND.
--> Before 4-Sheep (y=6, x=29, store=560) tries to run away from CW: (y=2, x=45, store=347.0).
--> After 4-Sheep (y=8, x=21, store=560) tried to run away from CW (y=2, x=45, store=347.0).
___________ 4 Sheep tried to run away from CW ___________ 


-> ------------ 5-Sheep initialised with (y=66, x=104, store=372.5) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=66, x=104, store=372.5). Will move normally and eat
-->5-Sheep (y=66, x=104, store=372.5) before normal moving and eating
-->5-Sheep (y=65, x=105, store=382.5) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=0, x=34, store=325.0) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
---> d<md+... 6-Sheep noticed closest 3-Wolf ...
---> 6-Sheep (y=0, x=34, store=325.0) detected 3-Wolf (y=3, x=52, store=347.0) within d=18.24828759089466.
--> 6-Sheep looping with 4-Wolf.
---> d<md+... 6-Sheep noticed closest 4-Wolf ...
---> 6-Sheep (y=0, x=34, store=325.0) detected 4-Wolf (y=2, x=45, store=347.0) within d=11.180339887498949.
--> 6-Sheep looping with 5-Wolf.
-> CW FOUND.
--> Before 6-Sheep (y=0, x=34, store=325.0) tries to run away from CW: (y=2, x=45, store=347.0).
--> After 6-Sheep (y=0, x=29, store=325.0) tried to run away from CW (y=2, x=45, store=347.0).
___________ 6 Sheep tried to run away from CW ___________ 


-> ------------ 7-Sheep initialised with (y=75, x=107, store=340) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=75, x=107, store=340). Will move normally and eat
-->7-Sheep (y=75, x=107, store=340) before normal moving and eating
-->7-Sheep (y=76, x=108, store=350) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________


-> ------------ 8-Sheep initialised with (y=89, x=71, store=420) -----------
--> 8-Sheep looping with 0-Wolf.
--> 8-Sheep looping with 1-Wolf.
--> 8-Sheep looping with 2-Wolf.
--> 8-Sheep looping with 3-Wolf.
--> 8-Sheep looping with 4-Wolf.
--> 8-Sheep looping with 5-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->8-Sheep has Store < Min_ernergy(600) (y=89, x=71, store=420). Will move normally and eat
-->8-Sheep (y=89, x=71, store=420) before normal moving and eating
-->8-Sheep (y=88, x=70, store=430) after normal moving and eating
___e2________ 8-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=220, x=41, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=220, x=41, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
---> 0-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=220, x=41, store=100) before normal moving
-->else1 ends: 0-Wolf (y=221, x=40, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=111, x=268, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=111, x=268, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
---> 1-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=111, x=268, store=300) before normal moving
-->else1 ends: 1-Wolf (y=112, x=269, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=217, x=121, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=217, x=121, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
---> 2-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=217, x=121, store=200) before normal moving
-->else1 ends: 2-Wolf (y=216, x=122, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=3, x=52, store=347.0) --------
--> 3-Wolf has <=Min_energy(500) store (y=3, x=52, store=347.0). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
----> action_dist(5) < distance(28.160255680657446) < min_dist(50)
----> Min Distance = 28.160255680657446 for 3-Wolf (y=3, x=52, store=347.0) with 2-Sheep (y=0, x=24, store=315.0)
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
----> action_dist(5) < distance(23.194827009486403) < min_dist(28.160255680657446)
----> Min Distance = 23.194827009486403 for 3-Wolf (y=3, x=52, store=347.0) with 6-Sheep (y=0, x=29, store=325.0)
---> 3-Wolf looping with 7-Sheep
---> 3-Wolf looping with 8-Sheep
-> CS Found!
--> 3-Wolf (y=3, x=52, store=347.0) before moving closer to  Closest-Sheep (y=0, x=29, store=325.0)
--> 3-Wolf (y=1, x=40, store=347.0) after moving closer to Closest-Sheep (y=0, x=29, store=325.0)
___________ 3-Wolf moved closer to CS___________

---------4-Wolf initialised with (y=2, x=45, store=347.0) --------
--> 4-Wolf has <=Min_energy(500) store (y=2, x=45, store=347.0). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
----> action_dist(5) < distance(21.095023109728988) < min_dist(50)
----> Min Distance = 21.095023109728988 for 4-Wolf (y=2, x=45, store=347.0) with 2-Sheep (y=0, x=24, store=315.0)
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
----> action_dist(5) < distance(16.1245154965971) < min_dist(21.095023109728988)
----> Min Distance = 16.1245154965971 for 4-Wolf (y=2, x=45, store=347.0) with 6-Sheep (y=0, x=29, store=325.0)
---> 4-Wolf looping with 7-Sheep
---> 4-Wolf looping with 8-Sheep
-> CS Found!
--> 4-Wolf (y=2, x=45, store=347.0) before moving closer to  Closest-Sheep (y=0, x=29, store=325.0)
--> 4-Wolf (y=1, x=37, store=347.0) after moving closer to Closest-Sheep (y=0, x=29, store=325.0)
___________ 4-Wolf moved closer to CS___________

---------5-Wolf initialised with (y=6, x=54, store=400) --------
--> 5-Wolf has <=Min_energy(500) store (y=6, x=54, store=400). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
----> action_dist(5) < distance(30.59411708155671) < min_dist(50)
----> Min Distance = 30.59411708155671 for 5-Wolf (y=6, x=54, store=400) with 2-Sheep (y=0, x=24, store=315.0)
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
----> action_dist(5) < distance(25.709920264364882) < min_dist(30.59411708155671)
----> Min Distance = 25.709920264364882 for 5-Wolf (y=6, x=54, store=400) with 6-Sheep (y=0, x=29, store=325.0)
---> 5-Wolf looping with 7-Sheep
---> 5-Wolf looping with 8-Sheep
-> CS Found!
--> 5-Wolf (y=6, x=54, store=400) before moving closer to  Closest-Sheep (y=0, x=29, store=325.0)
--> 5-Wolf (y=3, x=41, store=400) after moving closer to Closest-Sheep (y=0, x=29, store=325.0)
___________ 5-Wolf moved closer to CS___________
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 38 ************

-> ------------ 0-Sheep initialised with (y=80, x=56, store=375.0) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=80, x=56, store=375.0). Will move normally and eat
-->0-Sheep (y=80, x=56, store=375.0) before normal moving and eating
-->0-Sheep (y=79, x=57, store=385.0) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=60, x=98, store=372.5) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=60, x=98, store=372.5). Will move normally and eat
-->1-Sheep (y=60, x=98, store=372.5) before normal moving and eating
-->1-Sheep (y=59, x=99, store=382.5) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=0, x=24, store=315.0) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
---> d<md+... 2-Sheep noticed closest 3-Wolf ...
---> 2-Sheep (y=0, x=24, store=315.0) detected 3-Wolf (y=1, x=40, store=347.0) within d=16.0312195418814.
--> 2-Sheep looping with 4-Wolf.
---> d<md+... 2-Sheep noticed closest 4-Wolf ...
---> 2-Sheep (y=0, x=24, store=315.0) detected 4-Wolf (y=1, x=37, store=347.0) within d=13.038404810405298.
--> 2-Sheep looping with 5-Wolf.
-> CW FOUND.
--> Before 2-Sheep (y=0, x=24, store=315.0) tries to run away from CW: (y=1, x=37, store=347.0).
--> After 2-Sheep (y=0, x=18, store=315.0) tried to run away from CW (y=1, x=37, store=347.0).
___________ 2 Sheep tried to run away from CW ___________ 


-> ------------ 3-Sheep initialised with (y=78, x=63, store=385.0) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=78, x=63, store=385.0). Will move normally and eat
-->3-Sheep (y=78, x=63, store=385.0) before normal moving and eating
-->3-Sheep (y=77, x=62, store=395.0) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=8, x=21, store=560) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
---> d<md+... 4-Sheep noticed closest 3-Wolf ...
---> 4-Sheep (y=8, x=21, store=560) detected 3-Wolf (y=1, x=40, store=347.0) within d=20.248456731316587.
--> 4-Sheep looping with 4-Wolf.
---> d<md+... 4-Sheep noticed closest 4-Wolf ...
---> 4-Sheep (y=8, x=21, store=560) detected 4-Wolf (y=1, x=37, store=347.0) within d=17.46424919657298.
--> 4-Sheep looping with 5-Wolf.
-> CW FOUND.
--> Before 4-Sheep (y=8, x=21, store=560) tries to run away from CW: (y=1, x=37, store=347.0).
--> After 4-Sheep (y=12, x=13, store=560) tried to run away from CW (y=1, x=37, store=347.0).
___________ 4 Sheep tried to run away from CW ___________ 


-> ------------ 5-Sheep initialised with (y=65, x=105, store=382.5) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=65, x=105, store=382.5). Will move normally and eat
-->5-Sheep (y=65, x=105, store=382.5) before normal moving and eating
-->5-Sheep (y=64, x=104, store=392.5) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=0, x=29, store=325.0) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
---> d<md+... 6-Sheep noticed closest 3-Wolf ...
---> 6-Sheep (y=0, x=29, store=325.0) detected 3-Wolf (y=1, x=40, store=347.0) within d=11.045361017187261.
--> 6-Sheep looping with 4-Wolf.
---> d<md+... 6-Sheep noticed closest 4-Wolf ...
---> 6-Sheep (y=0, x=29, store=325.0) detected 4-Wolf (y=1, x=37, store=347.0) within d=8.06225774829855.
--> 6-Sheep looping with 5-Wolf.
-> CW FOUND.
--> Before 6-Sheep (y=0, x=29, store=325.0) tries to run away from CW: (y=1, x=37, store=347.0).
--> After 6-Sheep (y=0, x=25, store=325.0) tried to run away from CW (y=1, x=37, store=347.0).
___________ 6 Sheep tried to run away from CW ___________ 


-> ------------ 7-Sheep initialised with (y=76, x=108, store=350) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=76, x=108, store=350). Will move normally and eat
-->7-Sheep (y=76, x=108, store=350) before normal moving and eating
-->7-Sheep (y=77, x=107, store=360) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________


-> ------------ 8-Sheep initialised with (y=88, x=70, store=430) -----------
--> 8-Sheep looping with 0-Wolf.
--> 8-Sheep looping with 1-Wolf.
--> 8-Sheep looping with 2-Wolf.
--> 8-Sheep looping with 3-Wolf.
--> 8-Sheep looping with 4-Wolf.
--> 8-Sheep looping with 5-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->8-Sheep has Store < Min_ernergy(600) (y=88, x=70, store=430). Will move normally and eat
-->8-Sheep (y=88, x=70, store=430) before normal moving and eating
-->8-Sheep (y=87, x=71, store=440) after normal moving and eating
___e2________ 8-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=221, x=40, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=221, x=40, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
---> 0-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=221, x=40, store=100) before normal moving
-->else1 ends: 0-Wolf (y=222, x=41, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=112, x=269, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=112, x=269, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
---> 1-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=112, x=269, store=300) before normal moving
-->else1 ends: 1-Wolf (y=113, x=268, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=216, x=122, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=216, x=122, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
---> 2-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=216, x=122, store=200) before normal moving
-->else1 ends: 2-Wolf (y=217, x=123, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=1, x=40, store=347.0) --------
--> 3-Wolf has <=Min_energy(500) store (y=1, x=40, store=347.0). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
----> action_dist(5) < distance(22.02271554554524) < min_dist(50)
----> Min Distance = 22.02271554554524 for 3-Wolf (y=1, x=40, store=347.0) with 2-Sheep (y=0, x=18, store=315.0)
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
----> action_dist(5) < distance(15.033296378372908) < min_dist(22.02271554554524)
----> Min Distance = 15.033296378372908 for 3-Wolf (y=1, x=40, store=347.0) with 6-Sheep (y=0, x=25, store=325.0)
---> 3-Wolf looping with 7-Sheep
---> 3-Wolf looping with 8-Sheep
-> CS Found!
--> 3-Wolf (y=1, x=40, store=347.0) before moving closer to  Closest-Sheep (y=0, x=25, store=325.0)
--> 3-Wolf (y=0, x=32, store=347.0) after moving closer to Closest-Sheep (y=0, x=25, store=325.0)
___________ 3-Wolf moved closer to CS___________

---------4-Wolf initialised with (y=1, x=37, store=347.0) --------
--> 4-Wolf has <=Min_energy(500) store (y=1, x=37, store=347.0). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
----> action_dist(5) < distance(19.026297590440446) < min_dist(50)
----> Min Distance = 19.026297590440446 for 4-Wolf (y=1, x=37, store=347.0) with 2-Sheep (y=0, x=18, store=315.0)
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
----> action_dist(5) < distance(12.041594578792296) < min_dist(19.026297590440446)
----> Min Distance = 12.041594578792296 for 4-Wolf (y=1, x=37, store=347.0) with 6-Sheep (y=0, x=25, store=325.0)
---> 4-Wolf looping with 7-Sheep
---> 4-Wolf looping with 8-Sheep
-> CS Found!
--> 4-Wolf (y=1, x=37, store=347.0) before moving closer to  Closest-Sheep (y=0, x=25, store=325.0)
--> 4-Wolf (y=0, x=31, store=347.0) after moving closer to Closest-Sheep (y=0, x=25, store=325.0)
___________ 4-Wolf moved closer to CS___________

---------5-Wolf initialised with (y=3, x=41, store=400) --------
--> 5-Wolf has <=Min_energy(500) store (y=3, x=41, store=400). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
----> action_dist(5) < distance(23.194827009486403) < min_dist(50)
----> Min Distance = 23.194827009486403 for 5-Wolf (y=3, x=41, store=400) with 2-Sheep (y=0, x=18, store=315.0)
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
----> action_dist(5) < distance(16.278820596099706) < min_dist(23.194827009486403)
----> Min Distance = 16.278820596099706 for 5-Wolf (y=3, x=41, store=400) with 6-Sheep (y=0, x=25, store=325.0)
---> 5-Wolf looping with 7-Sheep
---> 5-Wolf looping with 8-Sheep
-> CS Found!
--> 5-Wolf (y=3, x=41, store=400) before moving closer to  Closest-Sheep (y=0, x=25, store=325.0)
--> 5-Wolf (y=1, x=33, store=400) after moving closer to Closest-Sheep (y=0, x=25, store=325.0)
___________ 5-Wolf moved closer to CS___________
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 39 ************

-> ------------ 0-Sheep initialised with (y=79, x=57, store=385.0) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=79, x=57, store=385.0). Will move normally and eat
-->0-Sheep (y=79, x=57, store=385.0) before normal moving and eating
-->0-Sheep (y=78, x=56, store=395.0) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=59, x=99, store=382.5) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=59, x=99, store=382.5). Will move normally and eat
-->1-Sheep (y=59, x=99, store=382.5) before normal moving and eating
-->1-Sheep (y=58, x=100, store=392.5) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=0, x=18, store=315.0) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
---> d<md+... 2-Sheep noticed closest 3-Wolf ...
---> 2-Sheep (y=0, x=18, store=315.0) detected 3-Wolf (y=0, x=32, store=347.0) within d=14.0.
--> 2-Sheep looping with 4-Wolf.
---> d<md+... 2-Sheep noticed closest 4-Wolf ...
---> 2-Sheep (y=0, x=18, store=315.0) detected 4-Wolf (y=0, x=31, store=347.0) within d=13.0.
--> 2-Sheep looping with 5-Wolf.
-> CW FOUND.
--> Before 2-Sheep (y=0, x=18, store=315.0) tries to run away from CW: (y=0, x=31, store=347.0).
--> After 2-Sheep (y=0, x=12, store=315.0) tried to run away from CW (y=0, x=31, store=347.0).
___________ 2 Sheep tried to run away from CW ___________ 


-> ------------ 3-Sheep initialised with (y=77, x=62, store=395.0) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=77, x=62, store=395.0). Will move normally and eat
-->3-Sheep (y=77, x=62, store=395.0) before normal moving and eating
-->3-Sheep (y=78, x=63, store=405.0) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=12, x=13, store=560) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
---> d<md+... 4-Sheep noticed closest 3-Wolf ...
---> 4-Sheep (y=12, x=13, store=560) detected 3-Wolf (y=0, x=32, store=347.0) within d=22.47220505424423.
--> 4-Sheep looping with 4-Wolf.
---> d<md+... 4-Sheep noticed closest 4-Wolf ...
---> 4-Sheep (y=12, x=13, store=560) detected 4-Wolf (y=0, x=31, store=347.0) within d=21.633307652783937.
--> 4-Sheep looping with 5-Wolf.
-> CW FOUND.
--> Before 4-Sheep (y=12, x=13, store=560) tries to run away from CW: (y=0, x=31, store=347.0).
--> After 4-Sheep (y=18, x=4, store=560) tried to run away from CW (y=0, x=31, store=347.0).
___________ 4 Sheep tried to run away from CW ___________ 


-> ------------ 5-Sheep initialised with (y=64, x=104, store=392.5) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=64, x=104, store=392.5). Will move normally and eat
-->5-Sheep (y=64, x=104, store=392.5) before normal moving and eating
-->5-Sheep (y=65, x=103, store=402.5) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=0, x=25, store=325.0) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
---> d<md+... 6-Sheep noticed closest 3-Wolf ...
---> 6-Sheep (y=0, x=25, store=325.0) detected 3-Wolf (y=0, x=32, store=347.0) within d=7.0.
--> 6-Sheep looping with 4-Wolf.
---> d<md+... 6-Sheep noticed closest 4-Wolf ...
---> 6-Sheep (y=0, x=25, store=325.0) detected 4-Wolf (y=0, x=31, store=347.0) within d=6.0.
--> 6-Sheep looping with 5-Wolf.
-> CW FOUND.
--> Before 6-Sheep (y=0, x=25, store=325.0) tries to run away from CW: (y=0, x=31, store=347.0).
--> After 6-Sheep (y=0, x=22, store=325.0) tried to run away from CW (y=0, x=31, store=347.0).
___________ 6 Sheep tried to run away from CW ___________ 


-> ------------ 7-Sheep initialised with (y=77, x=107, store=360) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=77, x=107, store=360). Will move normally and eat
-->7-Sheep (y=77, x=107, store=360) before normal moving and eating
-->7-Sheep (y=76, x=106, store=370) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________


-> ------------ 8-Sheep initialised with (y=87, x=71, store=440) -----------
--> 8-Sheep looping with 0-Wolf.
--> 8-Sheep looping with 1-Wolf.
--> 8-Sheep looping with 2-Wolf.
--> 8-Sheep looping with 3-Wolf.
--> 8-Sheep looping with 4-Wolf.
--> 8-Sheep looping with 5-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->8-Sheep has Store < Min_ernergy(600) (y=87, x=71, store=440). Will move normally and eat
-->8-Sheep (y=87, x=71, store=440) before normal moving and eating
-->8-Sheep (y=86, x=70, store=450) after normal moving and eating
___e2________ 8-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=222, x=41, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=222, x=41, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
---> 0-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=222, x=41, store=100) before normal moving
-->else1 ends: 0-Wolf (y=221, x=42, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=113, x=268, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=113, x=268, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
---> 1-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=113, x=268, store=300) before normal moving
-->else1 ends: 1-Wolf (y=112, x=269, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=217, x=123, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=217, x=123, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
---> 2-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=217, x=123, store=200) before normal moving
-->else1 ends: 2-Wolf (y=218, x=124, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=0, x=32, store=347.0) --------
--> 3-Wolf has <=Min_energy(500) store (y=0, x=32, store=347.0). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
----> action_dist(5) < distance(20.0) < min_dist(50)
----> Min Distance = 20.0 for 3-Wolf (y=0, x=32, store=347.0) with 2-Sheep (y=0, x=12, store=315.0)
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
----> action_dist(5) < distance(10.0) < min_dist(20.0)
----> Min Distance = 10.0 for 3-Wolf (y=0, x=32, store=347.0) with 6-Sheep (y=0, x=22, store=325.0)
---> 3-Wolf looping with 7-Sheep
---> 3-Wolf looping with 8-Sheep
-> CS Found!
--> 3-Wolf (y=0, x=32, store=347.0) before moving closer to  Closest-Sheep (y=0, x=22, store=325.0)
--> 3-Wolf (y=0, x=27, store=347.0) after moving closer to Closest-Sheep (y=0, x=22, store=325.0)
___________ 3-Wolf moved closer to CS___________

---------4-Wolf initialised with (y=0, x=31, store=347.0) --------
--> 4-Wolf has <=Min_energy(500) store (y=0, x=31, store=347.0). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
----> action_dist(5) < distance(19.0) < min_dist(50)
----> Min Distance = 19.0 for 4-Wolf (y=0, x=31, store=347.0) with 2-Sheep (y=0, x=12, store=315.0)
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
----> action_dist(5) < distance(9.0) < min_dist(19.0)
----> Min Distance = 9.0 for 4-Wolf (y=0, x=31, store=347.0) with 6-Sheep (y=0, x=22, store=325.0)
---> 4-Wolf looping with 7-Sheep
---> 4-Wolf looping with 8-Sheep
-> CS Found!
--> 4-Wolf (y=0, x=31, store=347.0) before moving closer to  Closest-Sheep (y=0, x=22, store=325.0)
--> 4-Wolf (y=0, x=26, store=347.0) after moving closer to Closest-Sheep (y=0, x=22, store=325.0)
___________ 4-Wolf moved closer to CS___________

---------5-Wolf initialised with (y=1, x=33, store=400) --------
--> 5-Wolf has <=Min_energy(500) store (y=1, x=33, store=400). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
----> action_dist(5) < distance(21.02379604162864) < min_dist(50)
----> Min Distance = 21.02379604162864 for 5-Wolf (y=1, x=33, store=400) with 2-Sheep (y=0, x=12, store=315.0)
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
----> action_dist(5) < distance(11.045361017187261) < min_dist(21.02379604162864)
----> Min Distance = 11.045361017187261 for 5-Wolf (y=1, x=33, store=400) with 6-Sheep (y=0, x=22, store=325.0)
---> 5-Wolf looping with 7-Sheep
---> 5-Wolf looping with 8-Sheep
-> CS Found!
--> 5-Wolf (y=1, x=33, store=400) before moving closer to  Closest-Sheep (y=0, x=22, store=325.0)
--> 5-Wolf (y=0, x=27, store=400) after moving closer to Closest-Sheep (y=0, x=22, store=325.0)
___________ 5-Wolf moved closer to CS___________
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 40 ************

-> ------------ 0-Sheep initialised with (y=78, x=56, store=395.0) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=78, x=56, store=395.0). Will move normally and eat
-->0-Sheep (y=78, x=56, store=395.0) before normal moving and eating
-->0-Sheep (y=79, x=55, store=405.0) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=58, x=100, store=392.5) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=58, x=100, store=392.5). Will move normally and eat
-->1-Sheep (y=58, x=100, store=392.5) before normal moving and eating
-->1-Sheep (y=59, x=99, store=402.5) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=0, x=12, store=315.0) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
---> d<md+... 2-Sheep noticed closest 3-Wolf ...
---> 2-Sheep (y=0, x=12, store=315.0) detected 3-Wolf (y=0, x=27, store=347.0) within d=15.0.
--> 2-Sheep looping with 4-Wolf.
---> d<md+... 2-Sheep noticed closest 4-Wolf ...
---> 2-Sheep (y=0, x=12, store=315.0) detected 4-Wolf (y=0, x=26, store=347.0) within d=14.0.
--> 2-Sheep looping with 5-Wolf.
-> CW FOUND.
--> Before 2-Sheep (y=0, x=12, store=315.0) tries to run away from CW: (y=0, x=26, store=347.0).
--> After 2-Sheep (y=0, x=5, store=315.0) tried to run away from CW (y=0, x=26, store=347.0).
___________ 2 Sheep tried to run away from CW ___________ 


-> ------------ 3-Sheep initialised with (y=78, x=63, store=405.0) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=78, x=63, store=405.0). Will move normally and eat
-->3-Sheep (y=78, x=63, store=405.0) before normal moving and eating
-->3-Sheep (y=77, x=62, store=415.0) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=18, x=4, store=560) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=18, x=4, store=560). Will move normally and eat
-->4-Sheep (y=18, x=4, store=560) before normal moving and eating
-->4-Sheep (y=19, x=5, store=570) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=65, x=103, store=402.5) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=65, x=103, store=402.5). Will move normally and eat
-->5-Sheep (y=65, x=103, store=402.5) before normal moving and eating
-->5-Sheep (y=64, x=104, store=412.5) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=0, x=22, store=325.0) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
---> d<md+... 6-Sheep noticed closest 3-Wolf ...
---> 6-Sheep (y=0, x=22, store=325.0) detected 3-Wolf (y=0, x=27, store=347.0) within d=5.0.
--> 6-Sheep looping with 4-Wolf.
---> d<md+... 6-Sheep noticed closest 4-Wolf ...
---> 6-Sheep (y=0, x=22, store=325.0) detected 4-Wolf (y=0, x=26, store=347.0) within d=4.0.
--> 6-Sheep looping with 5-Wolf.
-> CW FOUND.
--> Before 6-Sheep (y=0, x=22, store=325.0) tries to run away from CW: (y=0, x=26, store=347.0).
--> After 6-Sheep (y=0, x=20, store=325.0) tried to run away from CW (y=0, x=26, store=347.0).
___________ 6 Sheep tried to run away from CW ___________ 


-> ------------ 7-Sheep initialised with (y=76, x=106, store=370) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=76, x=106, store=370). Will move normally and eat
-->7-Sheep (y=76, x=106, store=370) before normal moving and eating
-->7-Sheep (y=75, x=107, store=380) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________


-> ------------ 8-Sheep initialised with (y=86, x=70, store=450) -----------
--> 8-Sheep looping with 0-Wolf.
--> 8-Sheep looping with 1-Wolf.
--> 8-Sheep looping with 2-Wolf.
--> 8-Sheep looping with 3-Wolf.
--> 8-Sheep looping with 4-Wolf.
--> 8-Sheep looping with 5-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->8-Sheep has Store < Min_ernergy(600) (y=86, x=70, store=450). Will move normally and eat
-->8-Sheep (y=86, x=70, store=450) before normal moving and eating
-->8-Sheep (y=85, x=71, store=460) after normal moving and eating
___e2________ 8-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=221, x=42, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=221, x=42, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
---> 0-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=221, x=42, store=100) before normal moving
-->else1 ends: 0-Wolf (y=222, x=41, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=112, x=269, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=112, x=269, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
---> 1-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=112, x=269, store=300) before normal moving
-->else1 ends: 1-Wolf (y=111, x=270, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=218, x=124, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=218, x=124, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
---> 2-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=218, x=124, store=200) before normal moving
-->else1 ends: 2-Wolf (y=219, x=125, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=0, x=27, store=347.0) --------
--> 3-Wolf has <=Min_energy(500) store (y=0, x=27, store=347.0). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
----> action_dist(5) < distance(22.0) < min_dist(50)
----> Min Distance = 22.0 for 3-Wolf (y=0, x=27, store=347.0) with 2-Sheep (y=0, x=5, store=315.0)
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
----> action_dist(5) < distance(7.0) < min_dist(22.0)
----> Min Distance = 7.0 for 3-Wolf (y=0, x=27, store=347.0) with 6-Sheep (y=0, x=20, store=325.0)
---> 3-Wolf looping with 7-Sheep
---> 3-Wolf looping with 8-Sheep
-> CS Found!
--> 3-Wolf (y=0, x=27, store=347.0) before moving closer to  Closest-Sheep (y=0, x=20, store=325.0)
--> 3-Wolf (y=0, x=23, store=347.0) after moving closer to Closest-Sheep (y=0, x=20, store=325.0)
___________ 3-Wolf moved closer to CS___________

---------4-Wolf initialised with (y=0, x=26, store=347.0) --------
--> 4-Wolf has <=Min_energy(500) store (y=0, x=26, store=347.0). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
----> action_dist(5) < distance(21.0) < min_dist(50)
----> Min Distance = 21.0 for 4-Wolf (y=0, x=26, store=347.0) with 2-Sheep (y=0, x=5, store=315.0)
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
----> action_dist(5) < distance(6.0) < min_dist(21.0)
----> Min Distance = 6.0 for 4-Wolf (y=0, x=26, store=347.0) with 6-Sheep (y=0, x=20, store=325.0)
---> 4-Wolf looping with 7-Sheep
---> 4-Wolf looping with 8-Sheep
-> CS Found!
--> 4-Wolf (y=0, x=26, store=347.0) before moving closer to  Closest-Sheep (y=0, x=20, store=325.0)
--> 4-Wolf (y=0, x=23, store=347.0) after moving closer to Closest-Sheep (y=0, x=20, store=325.0)
___________ 4-Wolf moved closer to CS___________

---------5-Wolf initialised with (y=0, x=27, store=400) --------
--> 5-Wolf has <=Min_energy(500) store (y=0, x=27, store=400). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
----> action_dist(5) < distance(22.0) < min_dist(50)
----> Min Distance = 22.0 for 5-Wolf (y=0, x=27, store=400) with 2-Sheep (y=0, x=5, store=315.0)
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
----> action_dist(5) < distance(7.0) < min_dist(22.0)
----> Min Distance = 7.0 for 5-Wolf (y=0, x=27, store=400) with 6-Sheep (y=0, x=20, store=325.0)
---> 5-Wolf looping with 7-Sheep
---> 5-Wolf looping with 8-Sheep
-> CS Found!
--> 5-Wolf (y=0, x=27, store=400) before moving closer to  Closest-Sheep (y=0, x=20, store=325.0)
--> 5-Wolf (y=0, x=23, store=400) after moving closer to Closest-Sheep (y=0, x=20, store=325.0)
___________ 5-Wolf moved closer to CS___________
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 41 ************

-> ------------ 0-Sheep initialised with (y=79, x=55, store=405.0) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=79, x=55, store=405.0). Will move normally and eat
-->0-Sheep (y=79, x=55, store=405.0) before normal moving and eating
-->0-Sheep (y=80, x=54, store=415.0) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=59, x=99, store=402.5) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=59, x=99, store=402.5). Will move normally and eat
-->1-Sheep (y=59, x=99, store=402.5) before normal moving and eating
-->1-Sheep (y=58, x=100, store=412.5) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=0, x=5, store=315.0) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
---> d<md+... 2-Sheep noticed closest 3-Wolf ...
---> 2-Sheep (y=0, x=5, store=315.0) detected 3-Wolf (y=0, x=23, store=347.0) within d=18.0.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
-> CW FOUND.
--> Before 2-Sheep (y=0, x=5, store=315.0) tries to run away from CW: (y=0, x=23, store=347.0).
--> After 2-Sheep (y=0, x=0, store=315.0) tried to run away from CW (y=0, x=23, store=347.0).
___________ 2 Sheep tried to run away from CW ___________ 


-> ------------ 3-Sheep initialised with (y=77, x=62, store=415.0) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=77, x=62, store=415.0). Will move normally and eat
-->3-Sheep (y=77, x=62, store=415.0) before normal moving and eating
-->3-Sheep (y=76, x=63, store=425.0) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=19, x=5, store=570) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=19, x=5, store=570). Will move normally and eat
-->4-Sheep (y=19, x=5, store=570) before normal moving and eating
-->4-Sheep (y=18, x=6, store=580) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=64, x=104, store=412.5) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=64, x=104, store=412.5). Will move normally and eat
-->5-Sheep (y=64, x=104, store=412.5) before normal moving and eating
-->5-Sheep (y=63, x=105, store=422.5) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=0, x=20, store=325.0) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
---> d<md+... 6-Sheep noticed closest 3-Wolf ...
---> 6-Sheep (y=0, x=20, store=325.0) detected 3-Wolf (y=0, x=23, store=347.0) within d=3.0.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
-> CW FOUND.
--> Before 6-Sheep (y=0, x=20, store=325.0) tries to run away from CW: (y=0, x=23, store=347.0).
--> After 6-Sheep (y=0, x=19, store=325.0) tried to run away from CW (y=0, x=23, store=347.0).
___________ 6 Sheep tried to run away from CW ___________ 


-> ------------ 7-Sheep initialised with (y=75, x=107, store=380) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=75, x=107, store=380). Will move normally and eat
-->7-Sheep (y=75, x=107, store=380) before normal moving and eating
-->7-Sheep (y=76, x=106, store=390) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________


-> ------------ 8-Sheep initialised with (y=85, x=71, store=460) -----------
--> 8-Sheep looping with 0-Wolf.
--> 8-Sheep looping with 1-Wolf.
--> 8-Sheep looping with 2-Wolf.
--> 8-Sheep looping with 3-Wolf.
--> 8-Sheep looping with 4-Wolf.
--> 8-Sheep looping with 5-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->8-Sheep has Store < Min_ernergy(600) (y=85, x=71, store=460). Will move normally and eat
-->8-Sheep (y=85, x=71, store=460) before normal moving and eating
-->8-Sheep (y=86, x=72, store=470) after normal moving and eating
___e2________ 8-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=222, x=41, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=222, x=41, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
---> 0-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=222, x=41, store=100) before normal moving
-->else1 ends: 0-Wolf (y=223, x=42, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=111, x=270, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=111, x=270, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
---> 1-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=111, x=270, store=300) before normal moving
-->else1 ends: 1-Wolf (y=110, x=271, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=219, x=125, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=219, x=125, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
---> 2-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=219, x=125, store=200) before normal moving
-->else1 ends: 2-Wolf (y=218, x=124, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=0, x=23, store=347.0) --------
--> 3-Wolf has <=Min_energy(500) store (y=0, x=23, store=347.0). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
----> action_dist(5) < distance(23.0) < min_dist(50)
----> Min Distance = 23.0 for 3-Wolf (y=0, x=23, store=347.0) with 2-Sheep (y=0, x=0, store=315.0)
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
----> d<=action_dist found
----> 3-Wolf (y=0, x=23, store=347.0) before eating 6-Sheep (y=0, x=19, store=325.0)
----> 3-Wolf (y=0, x=23, store=607.0) after eating 6-Sheep (y=0, x=19, store=0). Env received (65.0)
___________ Eaten=True. 3-Wolf one ate 6-Sheep__________

---------4-Wolf initialised with (y=0, x=23, store=347.0) --------
--> 4-Wolf has <=Min_energy(500) store (y=0, x=23, store=347.0). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
----> action_dist(5) < distance(23.0) < min_dist(50)
----> Min Distance = 23.0 for 4-Wolf (y=0, x=23, store=347.0) with 2-Sheep (y=0, x=0, store=315.0)
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
-> CS Found!
--> 4-Wolf (y=0, x=23, store=347.0) before moving closer to  Closest-Sheep (y=0, x=0, store=315.0)
--> 4-Wolf (y=0, x=11, store=347.0) after moving closer to Closest-Sheep (y=0, x=0, store=315.0)
___________ 4-Wolf moved closer to CS___________

---------5-Wolf initialised with (y=0, x=23, store=400) --------
--> 5-Wolf has <=Min_energy(500) store (y=0, x=23, store=400). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
----> action_dist(5) < distance(23.0) < min_dist(50)
----> Min Distance = 23.0 for 5-Wolf (y=0, x=23, store=400) with 2-Sheep (y=0, x=0, store=315.0)
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
-> CS Found!
--> 5-Wolf (y=0, x=23, store=400) before moving closer to  Closest-Sheep (y=0, x=0, store=315.0)
--> 5-Wolf (y=0, x=11, store=400) after moving closer to Closest-Sheep (y=0, x=0, store=315.0)
___________ 5-Wolf moved closer to CS___________
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 42 ************

-> ------------ 0-Sheep initialised with (y=80, x=54, store=415.0) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=80, x=54, store=415.0). Will move normally and eat
-->0-Sheep (y=80, x=54, store=415.0) before normal moving and eating
-->0-Sheep (y=79, x=55, store=425.0) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=58, x=100, store=412.5) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=58, x=100, store=412.5). Will move normally and eat
-->1-Sheep (y=58, x=100, store=412.5) before normal moving and eating
-->1-Sheep (y=59, x=101, store=422.5) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=0, x=0, store=315.0) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
---> d<md+... 2-Sheep noticed closest 3-Wolf ...
---> 2-Sheep (y=0, x=0, store=315.0) detected 3-Wolf (y=0, x=23, store=607.0) within d=23.0.
--> 2-Sheep looping with 4-Wolf.
---> d<md+... 2-Sheep noticed closest 4-Wolf ...
---> 2-Sheep (y=0, x=0, store=315.0) detected 4-Wolf (y=0, x=11, store=347.0) within d=11.0.
--> 2-Sheep looping with 5-Wolf.
-> CW FOUND.
--> Before 2-Sheep (y=0, x=0, store=315.0) tries to run away from CW: (y=0, x=11, store=347.0).
--> After 2-Sheep (y=0, x=0, store=315.0) tried to run away from CW (y=0, x=11, store=347.0).
___________ 2 Sheep tried to run away from CW ___________ 


-> ------------ 3-Sheep initialised with (y=76, x=63, store=425.0) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=76, x=63, store=425.0). Will move normally and eat
-->3-Sheep (y=76, x=63, store=425.0) before normal moving and eating
-->3-Sheep (y=75, x=62, store=435.0) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=18, x=6, store=580) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
---> d<md+... 4-Sheep noticed closest 3-Wolf ...
---> 4-Sheep (y=18, x=6, store=580) detected 3-Wolf (y=0, x=23, store=607.0) within d=24.758836806279895.
--> 4-Sheep looping with 4-Wolf.
---> d<md+... 4-Sheep noticed closest 4-Wolf ...
---> 4-Sheep (y=18, x=6, store=580) detected 4-Wolf (y=0, x=11, store=347.0) within d=18.681541692269406.
--> 4-Sheep looping with 5-Wolf.
-> CW FOUND.
--> Before 4-Sheep (y=18, x=6, store=580) tries to run away from CW: (y=0, x=11, store=347.0).
--> After 4-Sheep (y=27, x=4, store=580) tried to run away from CW (y=0, x=11, store=347.0).
___________ 4 Sheep tried to run away from CW ___________ 


-> ------------ 5-Sheep initialised with (y=63, x=105, store=422.5) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=63, x=105, store=422.5). Will move normally and eat
-->5-Sheep (y=63, x=105, store=422.5) before normal moving and eating
-->5-Sheep (y=64, x=106, store=432.5) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=76, x=106, store=390) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=76, x=106, store=390). Will move normally and eat
-->6-Sheep (y=76, x=106, store=390) before normal moving and eating
-->6-Sheep (y=75, x=107, store=400) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=86, x=72, store=470) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=86, x=72, store=470). Will move normally and eat
-->7-Sheep (y=86, x=72, store=470) before normal moving and eating
-->7-Sheep (y=85, x=71, store=480) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=223, x=42, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=223, x=42, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=223, x=42, store=100) before normal moving
-->else1 ends: 0-Wolf (y=224, x=41, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=110, x=271, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=110, x=271, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=110, x=271, store=300) before normal moving
-->else1 ends: 1-Wolf (y=109, x=270, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=218, x=124, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=218, x=124, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=218, x=124, store=200) before normal moving
-->else1 ends: 2-Wolf (y=217, x=123, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=0, x=23, store=607.0) --------
--> 3-Wolf has >Min_energy(500) store (y=0, x=23, store=607.0) and 0.25 <= random.random() < 0.5. Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
----> action_dist(5) < distance(23.0) < min_dist(50)
----> Min Distance = 23.0 for 3-Wolf (y=0, x=23, store=607.0) with 2-Sheep (y=0, x=0, store=315.0)
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
-> CS Found!
--> 3-Wolf (y=0, x=23, store=607.0) before moving closer to  Closest-Sheep (y=0, x=0, store=315.0)
--> 3-Wolf (y=0, x=11, store=607.0) after moving closer to Closest-Sheep (y=0, x=0, store=315.0)
___________ 3-Wolf moved closer to CS___________

---------4-Wolf initialised with (y=0, x=11, store=347.0) --------
--> 4-Wolf has <=Min_energy(500) store (y=0, x=11, store=347.0). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
----> action_dist(5) < distance(11.0) < min_dist(50)
----> Min Distance = 11.0 for 4-Wolf (y=0, x=11, store=347.0) with 2-Sheep (y=0, x=0, store=315.0)
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
-> CS Found!
--> 4-Wolf (y=0, x=11, store=347.0) before moving closer to  Closest-Sheep (y=0, x=0, store=315.0)
--> 4-Wolf (y=0, x=5, store=347.0) after moving closer to Closest-Sheep (y=0, x=0, store=315.0)
___________ 4-Wolf moved closer to CS___________

---------5-Wolf initialised with (y=0, x=11, store=400) --------
--> 5-Wolf has <=Min_energy(500) store (y=0, x=11, store=400). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
----> action_dist(5) < distance(11.0) < min_dist(50)
----> Min Distance = 11.0 for 5-Wolf (y=0, x=11, store=400) with 2-Sheep (y=0, x=0, store=315.0)
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
-> CS Found!
--> 5-Wolf (y=0, x=11, store=400) before moving closer to  Closest-Sheep (y=0, x=0, store=315.0)
--> 5-Wolf (y=0, x=5, store=400) after moving closer to Closest-Sheep (y=0, x=0, store=315.0)
___________ 5-Wolf moved closer to CS___________
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 43 ************

-> ------------ 0-Sheep initialised with (y=79, x=55, store=425.0) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=79, x=55, store=425.0). Will move normally and eat
-->0-Sheep (y=79, x=55, store=425.0) before normal moving and eating
-->0-Sheep (y=80, x=54, store=435.0) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=59, x=101, store=422.5) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=59, x=101, store=422.5). Will move normally and eat
-->1-Sheep (y=59, x=101, store=422.5) before normal moving and eating
-->1-Sheep (y=60, x=102, store=432.5) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=0, x=0, store=315.0) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
---> d<md+... 2-Sheep noticed closest 3-Wolf ...
---> 2-Sheep (y=0, x=0, store=315.0) detected 3-Wolf (y=0, x=11, store=607.0) within d=11.0.
--> 2-Sheep looping with 4-Wolf.
---> d<md+... 2-Sheep noticed closest 4-Wolf ...
---> 2-Sheep (y=0, x=0, store=315.0) detected 4-Wolf (y=0, x=5, store=347.0) within d=5.0.
--> 2-Sheep looping with 5-Wolf.
-> CW FOUND.
--> Before 2-Sheep (y=0, x=0, store=315.0) tries to run away from CW: (y=0, x=5, store=347.0).
--> After 2-Sheep (y=0, x=0, store=315.0) tried to run away from CW (y=0, x=5, store=347.0).
___________ 2 Sheep tried to run away from CW ___________ 


-> ------------ 3-Sheep initialised with (y=75, x=62, store=435.0) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=75, x=62, store=435.0). Will move normally and eat
-->3-Sheep (y=75, x=62, store=435.0) before normal moving and eating
-->3-Sheep (y=76, x=61, store=445.0) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=27, x=4, store=580) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=27, x=4, store=580). Will move normally and eat
-->4-Sheep (y=27, x=4, store=580) before normal moving and eating
-->4-Sheep (y=26, x=3, store=590) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=64, x=106, store=432.5) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=64, x=106, store=432.5). Will move normally and eat
-->5-Sheep (y=64, x=106, store=432.5) before normal moving and eating
-->5-Sheep (y=65, x=105, store=442.5) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=75, x=107, store=400) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=75, x=107, store=400). Will move normally and eat
-->6-Sheep (y=75, x=107, store=400) before normal moving and eating
-->6-Sheep (y=76, x=108, store=410) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=85, x=71, store=480) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=85, x=71, store=480). Will move normally and eat
-->7-Sheep (y=85, x=71, store=480) before normal moving and eating
-->7-Sheep (y=84, x=70, store=490) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=224, x=41, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=224, x=41, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=224, x=41, store=100) before normal moving
-->else1 ends: 0-Wolf (y=225, x=40, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=109, x=270, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=109, x=270, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=109, x=270, store=300) before normal moving
-->else1 ends: 1-Wolf (y=108, x=271, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=217, x=123, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=217, x=123, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=217, x=123, store=200) before normal moving
-->else1 ends: 2-Wolf (y=216, x=122, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=0, x=11, store=607.0) --------
--> 3-Wolf has > 500 store (y=0, x=11, store=607.0) and Random >= 0.5. so will try to find CW to move closer or breed/fight if within AD(5).
---> 3-Wolf looping with 0-Wolf
----> (AD2 < D < MD).
----> Min distance=6.0 for 3-Wolf (y=0, x=11, store=607.0) with 0-Wolf (y=0, x=5, store=347.0)
---> 3-Wolf looping with 1-Wolf
->CW Found!
-> 3-Wolf (y=0, x=11, store=607.0) before moving closer to CW-Wolf: (y=0, x=5, store=347.0).
-> 3-Wolf (y=0, x=8, store=607.0) after moving closer to CW-Wolf: (y=0, x=5, store=347.0).
_______ 3-Wolf moved closer CW+_______

---------4-Wolf initialised with (y=0, x=5, store=347.0) --------
--> 4-Wolf has <=Min_energy(500) store (y=0, x=5, store=347.0). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
----> d<=action_dist found
----> 4-Wolf (y=0, x=5, store=347.0) before eating 2-Sheep (y=0, x=0, store=315.0)
----> 4-Wolf (y=0, x=5, store=599.0) after eating 2-Sheep (y=0, x=0, store=0). Env received (63.0)
___________ Eaten=True. 4-Wolf one ate 2-Sheep__________

---------5-Wolf initialised with (y=0, x=5, store=400) --------
--> 5-Wolf has <=Min_energy(500) store (y=0, x=5, store=400). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
----> action_dist(5) < distance(26.076809620810597) < min_dist(50)
----> Min Distance = 26.076809620810597 for 5-Wolf (y=0, x=5, store=400) with 3-Sheep (y=26, x=3, store=590)
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
-> CS Found!
--> 5-Wolf (y=0, x=5, store=400) before moving closer to  Closest-Sheep (y=26, x=3, store=590)
--> 5-Wolf (y=13, x=4, store=400) after moving closer to Closest-Sheep (y=26, x=3, store=590)
___________ 5-Wolf moved closer to CS___________
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 44 ************

-> ------------ 0-Sheep initialised with (y=80, x=54, store=435.0) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=80, x=54, store=435.0). Will move normally and eat
-->0-Sheep (y=80, x=54, store=435.0) before normal moving and eating
-->0-Sheep (y=81, x=55, store=445.0) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=60, x=102, store=432.5) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=60, x=102, store=432.5). Will move normally and eat
-->1-Sheep (y=60, x=102, store=432.5) before normal moving and eating
-->1-Sheep (y=59, x=103, store=442.5) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=76, x=61, store=445.0) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=76, x=61, store=445.0). Will move normally and eat
-->2-Sheep (y=76, x=61, store=445.0) before normal moving and eating
-->2-Sheep (y=75, x=62, store=455.0) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=26, x=3, store=590) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
---> d<md+... 3-Sheep noticed closest 5-Wolf ...
---> 3-Sheep (y=26, x=3, store=590) detected 5-Wolf (y=13, x=4, store=400) within d=13.038404810405298.
-> CW FOUND.
--> Before 3-Sheep (y=26, x=3, store=590) tries to run away from CW: (y=13, x=4, store=400).
--> After 3-Sheep (y=33, x=3, store=590) tried to run away from CW (y=13, x=4, store=400).
___________ 3 Sheep tried to run away from CW ___________ 


-> ------------ 4-Sheep initialised with (y=65, x=105, store=442.5) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=65, x=105, store=442.5). Will move normally and eat
-->4-Sheep (y=65, x=105, store=442.5) before normal moving and eating
-->4-Sheep (y=66, x=106, store=452.5) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=76, x=108, store=410) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=76, x=108, store=410). Will move normally and eat
-->5-Sheep (y=76, x=108, store=410) before normal moving and eating
-->5-Sheep (y=77, x=109, store=420) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=84, x=70, store=490) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=84, x=70, store=490). Will move normally and eat
-->6-Sheep (y=84, x=70, store=490) before normal moving and eating
-->6-Sheep (y=85, x=71, store=500) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=225, x=40, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=225, x=40, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=225, x=40, store=100) before normal moving
-->else1 ends: 0-Wolf (y=224, x=41, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=108, x=271, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=108, x=271, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=108, x=271, store=300) before normal moving
-->else1 ends: 1-Wolf (y=107, x=272, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=216, x=122, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=216, x=122, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=216, x=122, store=200) before normal moving
-->else1 ends: 2-Wolf (y=217, x=121, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=0, x=8, store=607.0) --------
--> 3-Wolf has > 500 store (y=0, x=8, store=607.0) and Random >= 0.5. so will try to find CW to move closer or breed/fight if within AD(5).
---> 3-Wolf looping with 0-Wolf
----> d<=ad. breeding/fight roximity of 3.0(<=5) entered by 3-Wolf (y=0, x=8, store=607.0) with CW 0-Wolf (y=0, x=5, store=599.0).
-----> CW 0-Wolf (y=0, x=5, store=599.0 has > 500 store. So they will try breeding. 50.0% probability breeding successfully.
------>1.A. Random >0.5. So the wolves will mate.
------> 3-Wolf (y=0, x=8, store=607.0) before mating with CW 0-Wolf (y=0, x=5, store=599.0)
------> Breed = True
------> 3-Wolf (y=0, x=8, store=301.5) after mating with CW 0-Wolf (y=0, x=5, store=301.5)
_____________ 3-Wolf Mated SUCCESSFULLY with CW 0-Wolf ____________
_______ Breed=True, Failed Breed=False, Fought=False for 3-Wolf __________

---------4-Wolf initialised with (y=0, x=5, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=0, x=5, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
----> action_dist(5) < distance(33.06055050963308) < min_dist(50)
----> Min Distance = 33.06055050963308 for 4-Wolf (y=0, x=5, store=301.5) with 3-Sheep (y=33, x=3, store=590)
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
-> CS Found!
--> 4-Wolf (y=0, x=5, store=301.5) before moving closer to  Closest-Sheep (y=33, x=3, store=590)
--> 4-Wolf (y=16, x=4, store=301.5) after moving closer to Closest-Sheep (y=33, x=3, store=590)
___________ 4-Wolf moved closer to CS___________

---------5-Wolf initialised with (y=13, x=4, store=400) --------
--> 5-Wolf has <=Min_energy(500) store (y=13, x=4, store=400). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
----> action_dist(5) < distance(20.024984394500787) < min_dist(50)
----> Min Distance = 20.024984394500787 for 5-Wolf (y=13, x=4, store=400) with 3-Sheep (y=33, x=3, store=590)
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
-> CS Found!
--> 5-Wolf (y=13, x=4, store=400) before moving closer to  Closest-Sheep (y=33, x=3, store=590)
--> 5-Wolf (y=23, x=3, store=400) after moving closer to Closest-Sheep (y=33, x=3, store=590)
___________ 5-Wolf moved closer to CS___________
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 45 ************

-> ------------ 0-Sheep initialised with (y=81, x=55, store=445.0) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=81, x=55, store=445.0). Will move normally and eat
-->0-Sheep (y=81, x=55, store=445.0) before normal moving and eating
-->0-Sheep (y=80, x=54, store=455.0) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=59, x=103, store=442.5) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=59, x=103, store=442.5). Will move normally and eat
-->1-Sheep (y=59, x=103, store=442.5) before normal moving and eating
-->1-Sheep (y=60, x=102, store=452.5) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=75, x=62, store=455.0) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=75, x=62, store=455.0). Will move normally and eat
-->2-Sheep (y=75, x=62, store=455.0) before normal moving and eating
-->2-Sheep (y=76, x=63, store=465.0) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=33, x=3, store=590) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
---> d<md+... 3-Sheep noticed closest 4-Wolf ...
---> 3-Sheep (y=33, x=3, store=590) detected 4-Wolf (y=16, x=4, store=301.5) within d=17.029386365926403.
--> 3-Sheep looping with 5-Wolf.
---> d<md+... 3-Sheep noticed closest 5-Wolf ...
---> 3-Sheep (y=33, x=3, store=590) detected 5-Wolf (y=23, x=3, store=400) within d=10.0.
--> 3-Sheep looping with 6-Wolf.
-> CW FOUND.
--> Before 3-Sheep (y=33, x=3, store=590) tries to run away from CW: (y=23, x=3, store=400).
--> After 3-Sheep (y=38, x=3, store=590) tried to run away from CW (y=23, x=3, store=400).
___________ 3 Sheep tried to run away from CW ___________ 


-> ------------ 4-Sheep initialised with (y=66, x=106, store=452.5) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=66, x=106, store=452.5). Will move normally and eat
-->4-Sheep (y=66, x=106, store=452.5) before normal moving and eating
-->4-Sheep (y=67, x=105, store=462.5) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=77, x=109, store=420) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=77, x=109, store=420). Will move normally and eat
-->5-Sheep (y=77, x=109, store=420) before normal moving and eating
-->5-Sheep (y=78, x=110, store=430) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=85, x=71, store=500) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=85, x=71, store=500). Will move normally and eat
-->6-Sheep (y=85, x=71, store=500) before normal moving and eating
-->6-Sheep (y=84, x=72, store=510) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=224, x=41, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=224, x=41, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=224, x=41, store=100) before normal moving
-->else1 ends: 0-Wolf (y=223, x=40, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=107, x=272, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=107, x=272, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=107, x=272, store=300) before normal moving
-->else1 ends: 1-Wolf (y=108, x=271, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=217, x=121, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=217, x=121, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=217, x=121, store=200) before normal moving
-->else1 ends: 2-Wolf (y=218, x=122, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=0, x=8, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=0, x=8, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
----> action_dist(5) < distance(38.3275357934736) < min_dist(50)
----> Min Distance = 38.3275357934736 for 3-Wolf (y=0, x=8, store=301.5) with 3-Sheep (y=38, x=3, store=590)
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
-> CS Found!
--> 3-Wolf (y=0, x=8, store=301.5) before moving closer to  Closest-Sheep (y=38, x=3, store=590)
--> 3-Wolf (y=19, x=5, store=301.5) after moving closer to Closest-Sheep (y=38, x=3, store=590)
___________ 3-Wolf moved closer to CS___________

---------4-Wolf initialised with (y=16, x=4, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=16, x=4, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
----> action_dist(5) < distance(22.02271554554524) < min_dist(50)
----> Min Distance = 22.02271554554524 for 4-Wolf (y=16, x=4, store=301.5) with 3-Sheep (y=38, x=3, store=590)
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
-> CS Found!
--> 4-Wolf (y=16, x=4, store=301.5) before moving closer to  Closest-Sheep (y=38, x=3, store=590)
--> 4-Wolf (y=27, x=3, store=301.5) after moving closer to Closest-Sheep (y=38, x=3, store=590)
___________ 4-Wolf moved closer to CS___________

---------5-Wolf initialised with (y=23, x=3, store=400) --------
--> 5-Wolf has <=Min_energy(500) store (y=23, x=3, store=400). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
----> action_dist(5) < distance(15.0) < min_dist(50)
----> Min Distance = 15.0 for 5-Wolf (y=23, x=3, store=400) with 3-Sheep (y=38, x=3, store=590)
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
-> CS Found!
--> 5-Wolf (y=23, x=3, store=400) before moving closer to  Closest-Sheep (y=38, x=3, store=590)
--> 5-Wolf (y=30, x=3, store=400) after moving closer to Closest-Sheep (y=38, x=3, store=590)
___________ 5-Wolf moved closer to CS___________

---------6-Wolf initialised with (y=5, x=13, store=400) --------
--> 6-Wolf has <=Min_energy(500) store (y=5, x=13, store=400). Tries to find food (sheep).
---> 6-Wolf looping with 0-Sheep
---> 6-Wolf looping with 1-Sheep
---> 6-Wolf looping with 2-Sheep
---> 6-Wolf looping with 3-Sheep
----> action_dist(5) < distance(34.48187929913333) < min_dist(50)
----> Min Distance = 34.48187929913333 for 6-Wolf (y=5, x=13, store=400) with 3-Sheep (y=38, x=3, store=590)
---> 6-Wolf looping with 4-Sheep
---> 6-Wolf looping with 5-Sheep
---> 6-Wolf looping with 6-Sheep
-> CS Found!
--> 6-Wolf (y=5, x=13, store=400) before moving closer to  Closest-Sheep (y=38, x=3, store=590)
--> 6-Wolf (y=21, x=8, store=400) after moving closer to Closest-Sheep (y=38, x=3, store=590)
___________ 6-Wolf moved closer to CS___________
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 46 ************

-> ------------ 0-Sheep initialised with (y=80, x=54, store=455.0) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=80, x=54, store=455.0). Will move normally and eat
-->0-Sheep (y=80, x=54, store=455.0) before normal moving and eating
-->0-Sheep (y=81, x=55, store=465.0) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=60, x=102, store=452.5) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=60, x=102, store=452.5). Will move normally and eat
-->1-Sheep (y=60, x=102, store=452.5) before normal moving and eating
-->1-Sheep (y=59, x=103, store=462.5) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=76, x=63, store=465.0) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=76, x=63, store=465.0). Will move normally and eat
-->2-Sheep (y=76, x=63, store=465.0) before normal moving and eating
-->2-Sheep (y=75, x=62, store=475.0) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=38, x=3, store=590) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
---> d<md+... 3-Sheep noticed closest 3-Wolf ...
---> 3-Sheep (y=38, x=3, store=590) detected 3-Wolf (y=19, x=5, store=301.5) within d=19.1049731745428.
--> 3-Sheep looping with 4-Wolf.
---> d<md+... 3-Sheep noticed closest 4-Wolf ...
---> 3-Sheep (y=38, x=3, store=590) detected 4-Wolf (y=27, x=3, store=301.5) within d=11.0.
--> 3-Sheep looping with 5-Wolf.
---> d<md+... 3-Sheep noticed closest 5-Wolf ...
---> 3-Sheep (y=38, x=3, store=590) detected 5-Wolf (y=30, x=3, store=400) within d=8.0.
--> 3-Sheep looping with 6-Wolf.
-> CW FOUND.
--> Before 3-Sheep (y=38, x=3, store=590) tries to run away from CW: (y=30, x=3, store=400).
--> After 3-Sheep (y=42, x=3, store=590) tried to run away from CW (y=30, x=3, store=400).
___________ 3 Sheep tried to run away from CW ___________ 


-> ------------ 4-Sheep initialised with (y=67, x=105, store=462.5) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=67, x=105, store=462.5). Will move normally and eat
-->4-Sheep (y=67, x=105, store=462.5) before normal moving and eating
-->4-Sheep (y=68, x=104, store=472.5) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=78, x=110, store=430) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=78, x=110, store=430). Will move normally and eat
-->5-Sheep (y=78, x=110, store=430) before normal moving and eating
-->5-Sheep (y=79, x=111, store=440) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=84, x=72, store=510) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=84, x=72, store=510). Will move normally and eat
-->6-Sheep (y=84, x=72, store=510) before normal moving and eating
-->6-Sheep (y=85, x=73, store=520) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=223, x=40, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=223, x=40, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=223, x=40, store=100) before normal moving
-->else1 ends: 0-Wolf (y=224, x=39, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=108, x=271, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=108, x=271, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=108, x=271, store=300) before normal moving
-->else1 ends: 1-Wolf (y=109, x=272, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=218, x=122, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=218, x=122, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=218, x=122, store=200) before normal moving
-->else1 ends: 2-Wolf (y=217, x=121, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=19, x=5, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=19, x=5, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
----> action_dist(5) < distance(23.08679276123039) < min_dist(50)
----> Min Distance = 23.08679276123039 for 3-Wolf (y=19, x=5, store=301.5) with 3-Sheep (y=42, x=3, store=590)
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
-> CS Found!
--> 3-Wolf (y=19, x=5, store=301.5) before moving closer to  Closest-Sheep (y=42, x=3, store=590)
--> 3-Wolf (y=30, x=4, store=301.5) after moving closer to Closest-Sheep (y=42, x=3, store=590)
___________ 3-Wolf moved closer to CS___________

---------4-Wolf initialised with (y=27, x=3, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=27, x=3, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
----> action_dist(5) < distance(15.0) < min_dist(50)
----> Min Distance = 15.0 for 4-Wolf (y=27, x=3, store=301.5) with 3-Sheep (y=42, x=3, store=590)
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
-> CS Found!
--> 4-Wolf (y=27, x=3, store=301.5) before moving closer to  Closest-Sheep (y=42, x=3, store=590)
--> 4-Wolf (y=34, x=3, store=301.5) after moving closer to Closest-Sheep (y=42, x=3, store=590)
___________ 4-Wolf moved closer to CS___________

---------5-Wolf initialised with (y=30, x=3, store=400) --------
--> 5-Wolf has <=Min_energy(500) store (y=30, x=3, store=400). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
----> action_dist(5) < distance(12.0) < min_dist(50)
----> Min Distance = 12.0 for 5-Wolf (y=30, x=3, store=400) with 3-Sheep (y=42, x=3, store=590)
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
-> CS Found!
--> 5-Wolf (y=30, x=3, store=400) before moving closer to  Closest-Sheep (y=42, x=3, store=590)
--> 5-Wolf (y=36, x=3, store=400) after moving closer to Closest-Sheep (y=42, x=3, store=590)
___________ 5-Wolf moved closer to CS___________

---------6-Wolf initialised with (y=21, x=8, store=400) --------
--> 6-Wolf has <=Min_energy(500) store (y=21, x=8, store=400). Tries to find food (sheep).
---> 6-Wolf looping with 0-Sheep
---> 6-Wolf looping with 1-Sheep
---> 6-Wolf looping with 2-Sheep
---> 6-Wolf looping with 3-Sheep
----> action_dist(5) < distance(21.587033144922902) < min_dist(50)
----> Min Distance = 21.587033144922902 for 6-Wolf (y=21, x=8, store=400) with 3-Sheep (y=42, x=3, store=590)
---> 6-Wolf looping with 4-Sheep
---> 6-Wolf looping with 5-Sheep
---> 6-Wolf looping with 6-Sheep
-> CS Found!
--> 6-Wolf (y=21, x=8, store=400) before moving closer to  Closest-Sheep (y=42, x=3, store=590)
--> 6-Wolf (y=31, x=5, store=400) after moving closer to Closest-Sheep (y=42, x=3, store=590)
___________ 6-Wolf moved closer to CS___________
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 47 ************

-> ------------ 0-Sheep initialised with (y=81, x=55, store=465.0) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=81, x=55, store=465.0). Will move normally and eat
-->0-Sheep (y=81, x=55, store=465.0) before normal moving and eating
-->0-Sheep (y=82, x=54, store=475.0) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=59, x=103, store=462.5) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=59, x=103, store=462.5). Will move normally and eat
-->1-Sheep (y=59, x=103, store=462.5) before normal moving and eating
-->1-Sheep (y=58, x=104, store=472.5) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=75, x=62, store=475.0) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=75, x=62, store=475.0). Will move normally and eat
-->2-Sheep (y=75, x=62, store=475.0) before normal moving and eating
-->2-Sheep (y=74, x=61, store=485.0) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=42, x=3, store=590) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
---> d<md+... 3-Sheep noticed closest 3-Wolf ...
---> 3-Sheep (y=42, x=3, store=590) detected 3-Wolf (y=30, x=4, store=301.5) within d=12.041594578792296.
--> 3-Sheep looping with 4-Wolf.
---> d<md+... 3-Sheep noticed closest 4-Wolf ...
---> 3-Sheep (y=42, x=3, store=590) detected 4-Wolf (y=34, x=3, store=301.5) within d=8.0.
--> 3-Sheep looping with 5-Wolf.
---> d<md+... 3-Sheep noticed closest 5-Wolf ...
---> 3-Sheep (y=42, x=3, store=590) detected 5-Wolf (y=36, x=3, store=400) within d=6.0.
--> 3-Sheep looping with 6-Wolf.
-> CW FOUND.
--> Before 3-Sheep (y=42, x=3, store=590) tries to run away from CW: (y=36, x=3, store=400).
--> After 3-Sheep (y=45, x=3, store=590) tried to run away from CW (y=36, x=3, store=400).
___________ 3 Sheep tried to run away from CW ___________ 


-> ------------ 4-Sheep initialised with (y=68, x=104, store=472.5) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=68, x=104, store=472.5). Will move normally and eat
-->4-Sheep (y=68, x=104, store=472.5) before normal moving and eating
-->4-Sheep (y=69, x=105, store=482.5) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=79, x=111, store=440) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=79, x=111, store=440). Will move normally and eat
-->5-Sheep (y=79, x=111, store=440) before normal moving and eating
-->5-Sheep (y=78, x=112, store=450) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=85, x=73, store=520) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=85, x=73, store=520). Will move normally and eat
-->6-Sheep (y=85, x=73, store=520) before normal moving and eating
-->6-Sheep (y=84, x=72, store=530) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=224, x=39, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=224, x=39, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=224, x=39, store=100) before normal moving
-->else1 ends: 0-Wolf (y=225, x=38, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=109, x=272, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=109, x=272, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=109, x=272, store=300) before normal moving
-->else1 ends: 1-Wolf (y=110, x=273, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=217, x=121, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=217, x=121, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=217, x=121, store=200) before normal moving
-->else1 ends: 2-Wolf (y=216, x=122, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=30, x=4, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=30, x=4, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
----> action_dist(5) < distance(15.033296378372908) < min_dist(50)
----> Min Distance = 15.033296378372908 for 3-Wolf (y=30, x=4, store=301.5) with 3-Sheep (y=45, x=3, store=590)
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
-> CS Found!
--> 3-Wolf (y=30, x=4, store=301.5) before moving closer to  Closest-Sheep (y=45, x=3, store=590)
--> 3-Wolf (y=37, x=3, store=301.5) after moving closer to Closest-Sheep (y=45, x=3, store=590)
___________ 3-Wolf moved closer to CS___________

---------4-Wolf initialised with (y=34, x=3, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=34, x=3, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
----> action_dist(5) < distance(11.0) < min_dist(50)
----> Min Distance = 11.0 for 4-Wolf (y=34, x=3, store=301.5) with 3-Sheep (y=45, x=3, store=590)
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
-> CS Found!
--> 4-Wolf (y=34, x=3, store=301.5) before moving closer to  Closest-Sheep (y=45, x=3, store=590)
--> 4-Wolf (y=39, x=3, store=301.5) after moving closer to Closest-Sheep (y=45, x=3, store=590)
___________ 4-Wolf moved closer to CS___________

---------5-Wolf initialised with (y=36, x=3, store=400) --------
--> 5-Wolf has <=Min_energy(500) store (y=36, x=3, store=400). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
----> action_dist(5) < distance(9.0) < min_dist(50)
----> Min Distance = 9.0 for 5-Wolf (y=36, x=3, store=400) with 3-Sheep (y=45, x=3, store=590)
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
-> CS Found!
--> 5-Wolf (y=36, x=3, store=400) before moving closer to  Closest-Sheep (y=45, x=3, store=590)
--> 5-Wolf (y=40, x=3, store=400) after moving closer to Closest-Sheep (y=45, x=3, store=590)
___________ 5-Wolf moved closer to CS___________

---------6-Wolf initialised with (y=31, x=5, store=400) --------
--> 6-Wolf has <=Min_energy(500) store (y=31, x=5, store=400). Tries to find food (sheep).
---> 6-Wolf looping with 0-Sheep
---> 6-Wolf looping with 1-Sheep
---> 6-Wolf looping with 2-Sheep
---> 6-Wolf looping with 3-Sheep
----> action_dist(5) < distance(14.142135623730951) < min_dist(50)
----> Min Distance = 14.142135623730951 for 6-Wolf (y=31, x=5, store=400) with 3-Sheep (y=45, x=3, store=590)
---> 6-Wolf looping with 4-Sheep
---> 6-Wolf looping with 5-Sheep
---> 6-Wolf looping with 6-Sheep
-> CS Found!
--> 6-Wolf (y=31, x=5, store=400) before moving closer to  Closest-Sheep (y=45, x=3, store=590)
--> 6-Wolf (y=38, x=4, store=400) after moving closer to Closest-Sheep (y=45, x=3, store=590)
___________ 6-Wolf moved closer to CS___________
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 48 ************

-> ------------ 0-Sheep initialised with (y=82, x=54, store=475.0) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=82, x=54, store=475.0). Will move normally and eat
-->0-Sheep (y=82, x=54, store=475.0) before normal moving and eating
-->0-Sheep (y=83, x=53, store=485.0) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=58, x=104, store=472.5) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=58, x=104, store=472.5). Will move normally and eat
-->1-Sheep (y=58, x=104, store=472.5) before normal moving and eating
-->1-Sheep (y=57, x=103, store=482.5) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=74, x=61, store=485.0) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=74, x=61, store=485.0). Will move normally and eat
-->2-Sheep (y=74, x=61, store=485.0) before normal moving and eating
-->2-Sheep (y=75, x=60, store=495.0) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=45, x=3, store=590) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
---> d<md+... 3-Sheep noticed closest 3-Wolf ...
---> 3-Sheep (y=45, x=3, store=590) detected 3-Wolf (y=37, x=3, store=301.5) within d=8.0.
--> 3-Sheep looping with 4-Wolf.
---> d<md+... 3-Sheep noticed closest 4-Wolf ...
---> 3-Sheep (y=45, x=3, store=590) detected 4-Wolf (y=39, x=3, store=301.5) within d=6.0.
--> 3-Sheep looping with 5-Wolf.
---> d<md+... 3-Sheep noticed closest 5-Wolf ...
---> 3-Sheep (y=45, x=3, store=590) detected 5-Wolf (y=40, x=3, store=400) within d=5.0.
--> 3-Sheep looping with 6-Wolf.
-> CW FOUND.
--> Before 3-Sheep (y=45, x=3, store=590) tries to run away from CW: (y=40, x=3, store=400).
--> After 3-Sheep (y=48, x=3, store=590) tried to run away from CW (y=40, x=3, store=400).
___________ 3 Sheep tried to run away from CW ___________ 


-> ------------ 4-Sheep initialised with (y=69, x=105, store=482.5) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=69, x=105, store=482.5). Will move normally and eat
-->4-Sheep (y=69, x=105, store=482.5) before normal moving and eating
-->4-Sheep (y=70, x=104, store=492.5) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=78, x=112, store=450) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=78, x=112, store=450). Will move normally and eat
-->5-Sheep (y=78, x=112, store=450) before normal moving and eating
-->5-Sheep (y=77, x=113, store=460) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=84, x=72, store=530) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=84, x=72, store=530). Will move normally and eat
-->6-Sheep (y=84, x=72, store=530) before normal moving and eating
-->6-Sheep (y=85, x=71, store=540) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=225, x=38, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=225, x=38, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=225, x=38, store=100) before normal moving
-->else1 ends: 0-Wolf (y=224, x=39, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=110, x=273, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=110, x=273, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=110, x=273, store=300) before normal moving
-->else1 ends: 1-Wolf (y=109, x=272, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=216, x=122, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=216, x=122, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=216, x=122, store=200) before normal moving
-->else1 ends: 2-Wolf (y=215, x=121, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=37, x=3, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=37, x=3, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
----> action_dist(5) < distance(11.0) < min_dist(50)
----> Min Distance = 11.0 for 3-Wolf (y=37, x=3, store=301.5) with 3-Sheep (y=48, x=3, store=590)
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
-> CS Found!
--> 3-Wolf (y=37, x=3, store=301.5) before moving closer to  Closest-Sheep (y=48, x=3, store=590)
--> 3-Wolf (y=42, x=3, store=301.5) after moving closer to Closest-Sheep (y=48, x=3, store=590)
___________ 3-Wolf moved closer to CS___________

---------4-Wolf initialised with (y=39, x=3, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=39, x=3, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
----> action_dist(5) < distance(9.0) < min_dist(50)
----> Min Distance = 9.0 for 4-Wolf (y=39, x=3, store=301.5) with 3-Sheep (y=48, x=3, store=590)
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
-> CS Found!
--> 4-Wolf (y=39, x=3, store=301.5) before moving closer to  Closest-Sheep (y=48, x=3, store=590)
--> 4-Wolf (y=43, x=3, store=301.5) after moving closer to Closest-Sheep (y=48, x=3, store=590)
___________ 4-Wolf moved closer to CS___________

---------5-Wolf initialised with (y=40, x=3, store=400) --------
--> 5-Wolf has <=Min_energy(500) store (y=40, x=3, store=400). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
----> action_dist(5) < distance(8.0) < min_dist(50)
----> Min Distance = 8.0 for 5-Wolf (y=40, x=3, store=400) with 3-Sheep (y=48, x=3, store=590)
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
-> CS Found!
--> 5-Wolf (y=40, x=3, store=400) before moving closer to  Closest-Sheep (y=48, x=3, store=590)
--> 5-Wolf (y=44, x=3, store=400) after moving closer to Closest-Sheep (y=48, x=3, store=590)
___________ 5-Wolf moved closer to CS___________

---------6-Wolf initialised with (y=38, x=4, store=400) --------
--> 6-Wolf has <=Min_energy(500) store (y=38, x=4, store=400). Tries to find food (sheep).
---> 6-Wolf looping with 0-Sheep
---> 6-Wolf looping with 1-Sheep
---> 6-Wolf looping with 2-Sheep
---> 6-Wolf looping with 3-Sheep
----> action_dist(5) < distance(10.04987562112089) < min_dist(50)
----> Min Distance = 10.04987562112089 for 6-Wolf (y=38, x=4, store=400) with 3-Sheep (y=48, x=3, store=590)
---> 6-Wolf looping with 4-Sheep
---> 6-Wolf looping with 5-Sheep
---> 6-Wolf looping with 6-Sheep
-> CS Found!
--> 6-Wolf (y=38, x=4, store=400) before moving closer to  Closest-Sheep (y=48, x=3, store=590)
--> 6-Wolf (y=43, x=3, store=400) after moving closer to Closest-Sheep (y=48, x=3, store=590)
___________ 6-Wolf moved closer to CS___________
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 49 ************

-> ------------ 0-Sheep initialised with (y=83, x=53, store=485.0) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=83, x=53, store=485.0). Will move normally and eat
-->0-Sheep (y=83, x=53, store=485.0) before normal moving and eating
-->0-Sheep (y=82, x=52, store=495.0) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=57, x=103, store=482.5) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=57, x=103, store=482.5). Will move normally and eat
-->1-Sheep (y=57, x=103, store=482.5) before normal moving and eating
-->1-Sheep (y=58, x=104, store=492.5) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=75, x=60, store=495.0) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=75, x=60, store=495.0). Will move normally and eat
-->2-Sheep (y=75, x=60, store=495.0) before normal moving and eating
-->2-Sheep (y=74, x=59, store=505.0) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=48, x=3, store=590) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
---> d<md+... 3-Sheep noticed closest 3-Wolf ...
---> 3-Sheep (y=48, x=3, store=590) detected 3-Wolf (y=42, x=3, store=301.5) within d=6.0.
--> 3-Sheep looping with 4-Wolf.
---> d<md+... 3-Sheep noticed closest 4-Wolf ...
---> 3-Sheep (y=48, x=3, store=590) detected 4-Wolf (y=43, x=3, store=301.5) within d=5.0.
--> 3-Sheep looping with 5-Wolf.
---> d<md+... 3-Sheep noticed closest 5-Wolf ...
---> 3-Sheep (y=48, x=3, store=590) detected 5-Wolf (y=44, x=3, store=400) within d=4.0.
--> 3-Sheep looping with 6-Wolf.
-> CW FOUND.
--> Before 3-Sheep (y=48, x=3, store=590) tries to run away from CW: (y=44, x=3, store=400).
--> After 3-Sheep (y=50, x=3, store=590) tried to run away from CW (y=44, x=3, store=400).
___________ 3 Sheep tried to run away from CW ___________ 


-> ------------ 4-Sheep initialised with (y=70, x=104, store=492.5) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=70, x=104, store=492.5). Will move normally and eat
-->4-Sheep (y=70, x=104, store=492.5) before normal moving and eating
-->4-Sheep (y=71, x=105, store=502.5) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=77, x=113, store=460) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=77, x=113, store=460). Will move normally and eat
-->5-Sheep (y=77, x=113, store=460) before normal moving and eating
-->5-Sheep (y=76, x=114, store=470) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=85, x=71, store=540) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=85, x=71, store=540). Will move normally and eat
-->6-Sheep (y=85, x=71, store=540) before normal moving and eating
-->6-Sheep (y=84, x=70, store=550) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=224, x=39, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=224, x=39, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=224, x=39, store=100) before normal moving
-->else1 ends: 0-Wolf (y=225, x=40, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=109, x=272, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=109, x=272, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=109, x=272, store=300) before normal moving
-->else1 ends: 1-Wolf (y=110, x=273, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=215, x=121, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=215, x=121, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=215, x=121, store=200) before normal moving
-->else1 ends: 2-Wolf (y=214, x=122, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=42, x=3, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=42, x=3, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
----> action_dist(5) < distance(8.0) < min_dist(50)
----> Min Distance = 8.0 for 3-Wolf (y=42, x=3, store=301.5) with 3-Sheep (y=50, x=3, store=590)
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
-> CS Found!
--> 3-Wolf (y=42, x=3, store=301.5) before moving closer to  Closest-Sheep (y=50, x=3, store=590)
--> 3-Wolf (y=46, x=3, store=301.5) after moving closer to Closest-Sheep (y=50, x=3, store=590)
___________ 3-Wolf moved closer to CS___________

---------4-Wolf initialised with (y=43, x=3, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=43, x=3, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
----> action_dist(5) < distance(7.0) < min_dist(50)
----> Min Distance = 7.0 for 4-Wolf (y=43, x=3, store=301.5) with 3-Sheep (y=50, x=3, store=590)
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
-> CS Found!
--> 4-Wolf (y=43, x=3, store=301.5) before moving closer to  Closest-Sheep (y=50, x=3, store=590)
--> 4-Wolf (y=46, x=3, store=301.5) after moving closer to Closest-Sheep (y=50, x=3, store=590)
___________ 4-Wolf moved closer to CS___________

---------5-Wolf initialised with (y=44, x=3, store=400) --------
--> 5-Wolf has <=Min_energy(500) store (y=44, x=3, store=400). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
----> action_dist(5) < distance(6.0) < min_dist(50)
----> Min Distance = 6.0 for 5-Wolf (y=44, x=3, store=400) with 3-Sheep (y=50, x=3, store=590)
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
-> CS Found!
--> 5-Wolf (y=44, x=3, store=400) before moving closer to  Closest-Sheep (y=50, x=3, store=590)
--> 5-Wolf (y=47, x=3, store=400) after moving closer to Closest-Sheep (y=50, x=3, store=590)
___________ 5-Wolf moved closer to CS___________

---------6-Wolf initialised with (y=43, x=3, store=400) --------
--> 6-Wolf has <=Min_energy(500) store (y=43, x=3, store=400). Tries to find food (sheep).
---> 6-Wolf looping with 0-Sheep
---> 6-Wolf looping with 1-Sheep
---> 6-Wolf looping with 2-Sheep
---> 6-Wolf looping with 3-Sheep
----> action_dist(5) < distance(7.0) < min_dist(50)
----> Min Distance = 7.0 for 6-Wolf (y=43, x=3, store=400) with 3-Sheep (y=50, x=3, store=590)
---> 6-Wolf looping with 4-Sheep
---> 6-Wolf looping with 5-Sheep
---> 6-Wolf looping with 6-Sheep
-> CS Found!
--> 6-Wolf (y=43, x=3, store=400) before moving closer to  Closest-Sheep (y=50, x=3, store=590)
--> 6-Wolf (y=46, x=3, store=400) after moving closer to Closest-Sheep (y=50, x=3, store=590)
___________ 6-Wolf moved closer to CS___________
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 50 ************

-> ------------ 0-Sheep initialised with (y=82, x=52, store=495.0) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=82, x=52, store=495.0). Will move normally and eat
-->0-Sheep (y=82, x=52, store=495.0) before normal moving and eating
-->0-Sheep (y=81, x=53, store=505.0) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=58, x=104, store=492.5) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=58, x=104, store=492.5). Will move normally and eat
-->1-Sheep (y=58, x=104, store=492.5) before normal moving and eating
-->1-Sheep (y=59, x=103, store=502.5) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=74, x=59, store=505.0) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=74, x=59, store=505.0). Will move normally and eat
-->2-Sheep (y=74, x=59, store=505.0) before normal moving and eating
-->2-Sheep (y=73, x=58, store=515.0) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=50, x=3, store=590) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
---> d<md+... 3-Sheep noticed closest 3-Wolf ...
---> 3-Sheep (y=50, x=3, store=590) detected 3-Wolf (y=46, x=3, store=301.5) within d=4.0.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
---> d<md+... 3-Sheep noticed closest 5-Wolf ...
---> 3-Sheep (y=50, x=3, store=590) detected 5-Wolf (y=47, x=3, store=400) within d=3.0.
--> 3-Sheep looping with 6-Wolf.
-> CW FOUND.
--> Before 3-Sheep (y=50, x=3, store=590) tries to run away from CW: (y=47, x=3, store=400).
--> After 3-Sheep (y=52, x=3, store=590) tried to run away from CW (y=47, x=3, store=400).
___________ 3 Sheep tried to run away from CW ___________ 


-> ------------ 4-Sheep initialised with (y=71, x=105, store=502.5) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=71, x=105, store=502.5). Will move normally and eat
-->4-Sheep (y=71, x=105, store=502.5) before normal moving and eating
-->4-Sheep (y=70, x=104, store=512.5) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=76, x=114, store=470) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=76, x=114, store=470). Will move normally and eat
-->5-Sheep (y=76, x=114, store=470) before normal moving and eating
-->5-Sheep (y=75, x=113, store=480) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=84, x=70, store=550) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=84, x=70, store=550). Will move normally and eat
-->6-Sheep (y=84, x=70, store=550) before normal moving and eating
-->6-Sheep (y=83, x=69, store=560) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=225, x=40, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=225, x=40, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=225, x=40, store=100) before normal moving
-->else1 ends: 0-Wolf (y=226, x=41, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=110, x=273, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=110, x=273, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=110, x=273, store=300) before normal moving
-->else1 ends: 1-Wolf (y=111, x=272, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=214, x=122, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=214, x=122, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=214, x=122, store=200) before normal moving
-->else1 ends: 2-Wolf (y=213, x=121, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=46, x=3, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=46, x=3, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
----> action_dist(5) < distance(6.0) < min_dist(50)
----> Min Distance = 6.0 for 3-Wolf (y=46, x=3, store=301.5) with 3-Sheep (y=52, x=3, store=590)
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
-> CS Found!
--> 3-Wolf (y=46, x=3, store=301.5) before moving closer to  Closest-Sheep (y=52, x=3, store=590)
--> 3-Wolf (y=49, x=3, store=301.5) after moving closer to Closest-Sheep (y=52, x=3, store=590)
___________ 3-Wolf moved closer to CS___________

---------4-Wolf initialised with (y=46, x=3, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=46, x=3, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
----> action_dist(5) < distance(6.0) < min_dist(50)
----> Min Distance = 6.0 for 4-Wolf (y=46, x=3, store=301.5) with 3-Sheep (y=52, x=3, store=590)
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
-> CS Found!
--> 4-Wolf (y=46, x=3, store=301.5) before moving closer to  Closest-Sheep (y=52, x=3, store=590)
--> 4-Wolf (y=49, x=3, store=301.5) after moving closer to Closest-Sheep (y=52, x=3, store=590)
___________ 4-Wolf moved closer to CS___________

---------5-Wolf initialised with (y=47, x=3, store=400) --------
--> 5-Wolf has <=Min_energy(500) store (y=47, x=3, store=400). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
----> d<=action_dist found
----> 5-Wolf (y=47, x=3, store=400) before eating 3-Sheep (y=52, x=3, store=590)
----> 5-Wolf (y=47, x=3, store=872.0) after eating 3-Sheep (y=52, x=3, store=0). Env received (118.0)
___________ Eaten=True. 5-Wolf one ate 3-Sheep__________

---------6-Wolf initialised with (y=46, x=3, store=400) --------
--> 6-Wolf has <=Min_energy(500) store (y=46, x=3, store=400). Tries to find food (sheep).
---> 6-Wolf looping with 0-Sheep
---> 6-Wolf looping with 1-Sheep
---> 6-Wolf looping with 2-Sheep
---> 6-Wolf looping with 3-Sheep
---> 6-Wolf looping with 4-Sheep
---> 6-Wolf looping with 5-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 6-Wolf (y=46, x=3, store=400) before normal moving
-->else1 ends: 6-Wolf (y=47, x=2, store=400) after normal moving
....el1___________ 6-Wolf moved normally___________
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 51 ************

-> ------------ 0-Sheep initialised with (y=81, x=53, store=505.0) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=81, x=53, store=505.0). Will move normally and eat
-->0-Sheep (y=81, x=53, store=505.0) before normal moving and eating
-->0-Sheep (y=82, x=52, store=515.0) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=59, x=103, store=502.5) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=59, x=103, store=502.5). Will move normally and eat
-->1-Sheep (y=59, x=103, store=502.5) before normal moving and eating
-->1-Sheep (y=60, x=104, store=512.5) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=73, x=58, store=515.0) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=73, x=58, store=515.0). Will move normally and eat
-->2-Sheep (y=73, x=58, store=515.0) before normal moving and eating
-->2-Sheep (y=72, x=57, store=525.0) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=70, x=104, store=512.5) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=70, x=104, store=512.5). Will move normally and eat
-->3-Sheep (y=70, x=104, store=512.5) before normal moving and eating
-->3-Sheep (y=71, x=105, store=522.5) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=75, x=113, store=480) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=75, x=113, store=480). Will move normally and eat
-->4-Sheep (y=75, x=113, store=480) before normal moving and eating
-->4-Sheep (y=76, x=114, store=490) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=83, x=69, store=560) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=83, x=69, store=560). Will move normally and eat
-->5-Sheep (y=83, x=69, store=560) before normal moving and eating
-->5-Sheep (y=82, x=68, store=570) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=226, x=41, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=226, x=41, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=226, x=41, store=100) before normal moving
-->else1 ends: 0-Wolf (y=227, x=42, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=111, x=272, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=111, x=272, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=111, x=272, store=300) before normal moving
-->else1 ends: 1-Wolf (y=110, x=271, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=213, x=121, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=213, x=121, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=213, x=121, store=200) before normal moving
-->else1 ends: 2-Wolf (y=212, x=120, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=49, x=3, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=49, x=3, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=49, x=3, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=50, x=2, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=49, x=3, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=49, x=3, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=49, x=3, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=48, x=4, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=47, x=3, store=872.0) --------
--> 5-Wolf has > 500 store (y=47, x=3, store=872.0) and Random >= 0.5. so will try to find CW to move closer or breed/fight if within AD(5).
---> 5-Wolf looping with 0-Wolf
----> d<=ad. breeding/fight roximity of 1.0(<=5) entered by 5-Wolf (y=47, x=3, store=872.0) with CW 0-Wolf (y=47, x=2, store=400).
----->2.A. CW 0-Wolf has < than 500 store
------>5-Wolf (y=47, x=3, store=872.0) will FIGHT CW 0-Wolf (y=47, x=2, store=400) & move
------>2.A.ii. Random < 0.5. So 5-Wolf will loose 50.0% store to CW 0-Wolf
------> 5-Wolf (y=46, x=4, store=436.0) lost+moved after fighting with CW 0-Wolf (y=47, x=2, store=836.0)
Fight 2 = True
_____________ 5-Wolf Fought-(2) with CW 0-Wolf ____________
_______ Breed=False, Failed Breed=False, Fought=True for 5-Wolf __________

---------6-Wolf initialised with (y=47, x=2, store=836.0) --------
--> if and elif not satisfied
--> 6-Wolf has > Min_energy(500) store (y=47, x=2, store=836.0) but Random < bf_e/2(0.25). So will move normally.
--->else3 begins: 6-Wolf (y=47, x=2, store=836.0) before normal moving.
--->else3 begins: 6-Wolf (y=48, x=3, store=836.0) after normal moving.
....e3_______ 6-Wolf moved normally_______
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 52 ************

-> ------------ 0-Sheep initialised with (y=82, x=52, store=515.0) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=82, x=52, store=515.0). Will move normally and eat
-->0-Sheep (y=82, x=52, store=515.0) before normal moving and eating
-->0-Sheep (y=81, x=51, store=525.0) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=60, x=104, store=512.5) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=60, x=104, store=512.5). Will move normally and eat
-->1-Sheep (y=60, x=104, store=512.5) before normal moving and eating
-->1-Sheep (y=61, x=105, store=522.5) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=72, x=57, store=525.0) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=72, x=57, store=525.0). Will move normally and eat
-->2-Sheep (y=72, x=57, store=525.0) before normal moving and eating
-->2-Sheep (y=71, x=56, store=535.0) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=71, x=105, store=522.5) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=71, x=105, store=522.5). Will move normally and eat
-->3-Sheep (y=71, x=105, store=522.5) before normal moving and eating
-->3-Sheep (y=72, x=106, store=532.5) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=76, x=114, store=490) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=76, x=114, store=490). Will move normally and eat
-->4-Sheep (y=76, x=114, store=490) before normal moving and eating
-->4-Sheep (y=75, x=115, store=500) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=82, x=68, store=570) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=82, x=68, store=570). Will move normally and eat
-->5-Sheep (y=82, x=68, store=570) before normal moving and eating
-->5-Sheep (y=81, x=69, store=580) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=227, x=42, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=227, x=42, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=227, x=42, store=100) before normal moving
-->else1 ends: 0-Wolf (y=228, x=41, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=110, x=271, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=110, x=271, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=110, x=271, store=300) before normal moving
-->else1 ends: 1-Wolf (y=111, x=272, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=212, x=120, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=212, x=120, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=212, x=120, store=200) before normal moving
-->else1 ends: 2-Wolf (y=211, x=121, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=50, x=2, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=50, x=2, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=50, x=2, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=49, x=1, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=48, x=4, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=48, x=4, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=48, x=4, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=47, x=3, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=46, x=4, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=46, x=4, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=46, x=4, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=45, x=5, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=48, x=3, store=836.0) --------
--> if and elif not satisfied
--> 6-Wolf has > Min_energy(500) store (y=48, x=3, store=836.0) but Random < bf_e/2(0.25). So will move normally.
--->else3 begins: 6-Wolf (y=48, x=3, store=836.0) before normal moving.
--->else3 begins: 6-Wolf (y=49, x=4, store=836.0) after normal moving.
....e3_______ 6-Wolf moved normally_______
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 53 ************

-> ------------ 0-Sheep initialised with (y=81, x=51, store=525.0) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=81, x=51, store=525.0). Will move normally and eat
-->0-Sheep (y=81, x=51, store=525.0) before normal moving and eating
-->0-Sheep (y=80, x=52, store=535.0) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=61, x=105, store=522.5) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=61, x=105, store=522.5). Will move normally and eat
-->1-Sheep (y=61, x=105, store=522.5) before normal moving and eating
-->1-Sheep (y=60, x=106, store=532.5) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=71, x=56, store=535.0) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=71, x=56, store=535.0). Will move normally and eat
-->2-Sheep (y=71, x=56, store=535.0) before normal moving and eating
-->2-Sheep (y=70, x=55, store=545.0) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=72, x=106, store=532.5) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=72, x=106, store=532.5). Will move normally and eat
-->3-Sheep (y=72, x=106, store=532.5) before normal moving and eating
-->3-Sheep (y=73, x=107, store=542.5) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=75, x=115, store=500) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=75, x=115, store=500). Will move normally and eat
-->4-Sheep (y=75, x=115, store=500) before normal moving and eating
-->4-Sheep (y=76, x=116, store=510) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=81, x=69, store=580) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=81, x=69, store=580). Will move normally and eat
-->5-Sheep (y=81, x=69, store=580) before normal moving and eating
-->5-Sheep (y=82, x=70, store=590) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=228, x=41, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=228, x=41, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=228, x=41, store=100) before normal moving
-->else1 ends: 0-Wolf (y=229, x=40, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=111, x=272, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=111, x=272, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=111, x=272, store=300) before normal moving
-->else1 ends: 1-Wolf (y=112, x=271, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=211, x=121, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=211, x=121, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=211, x=121, store=200) before normal moving
-->else1 ends: 2-Wolf (y=212, x=120, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=49, x=1, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=49, x=1, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=49, x=1, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=48, x=0, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=47, x=3, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=47, x=3, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=47, x=3, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=48, x=4, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=45, x=5, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=45, x=5, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=45, x=5, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=46, x=6, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=49, x=4, store=836.0) --------
--> 6-Wolf has > 500 store (y=49, x=4, store=836.0) and Random >= 0.5. so will try to find CW to move closer or breed/fight if within AD(5).
-> No CW found. although store >500 and p>=0.5!
--->else2 begins: 6-Wolf (y=49, x=4, store=836.0) before normal moving.
--->else2 begins: 6-Wolf (y=48, x=3, store=836.0) after normal moving.
.... el2 _______  6-Wolf moved normally _______ 
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 54 ************

-> ------------ 0-Sheep initialised with (y=80, x=52, store=535.0) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=80, x=52, store=535.0). Will move normally and eat
-->0-Sheep (y=80, x=52, store=535.0) before normal moving and eating
-->0-Sheep (y=81, x=53, store=545.0) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=60, x=106, store=532.5) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=60, x=106, store=532.5). Will move normally and eat
-->1-Sheep (y=60, x=106, store=532.5) before normal moving and eating
-->1-Sheep (y=59, x=107, store=542.5) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=70, x=55, store=545.0) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=70, x=55, store=545.0). Will move normally and eat
-->2-Sheep (y=70, x=55, store=545.0) before normal moving and eating
-->2-Sheep (y=71, x=54, store=555.0) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=73, x=107, store=542.5) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=73, x=107, store=542.5). Will move normally and eat
-->3-Sheep (y=73, x=107, store=542.5) before normal moving and eating
-->3-Sheep (y=74, x=106, store=552.5) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=76, x=116, store=510) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=76, x=116, store=510). Will move normally and eat
-->4-Sheep (y=76, x=116, store=510) before normal moving and eating
-->4-Sheep (y=75, x=115, store=520) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=82, x=70, store=590) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=82, x=70, store=590). Will move normally and eat
-->5-Sheep (y=82, x=70, store=590) before normal moving and eating
-->5-Sheep (y=83, x=69, store=600) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=229, x=40, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=229, x=40, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=229, x=40, store=100) before normal moving
-->else1 ends: 0-Wolf (y=230, x=39, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=112, x=271, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=112, x=271, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=112, x=271, store=300) before normal moving
-->else1 ends: 1-Wolf (y=113, x=270, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=212, x=120, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=212, x=120, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=212, x=120, store=200) before normal moving
-->else1 ends: 2-Wolf (y=211, x=121, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=48, x=0, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=48, x=0, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=48, x=0, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=47, x=1, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=48, x=4, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=48, x=4, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=48, x=4, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=49, x=5, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=46, x=6, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=46, x=6, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=46, x=6, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=45, x=5, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=48, x=3, store=836.0) --------
--> 6-Wolf has >Min_energy(500) store (y=48, x=3, store=836.0) and 0.25 <= random.random() < 0.5. Tries to find food (sheep).
---> 6-Wolf looping with 0-Sheep
---> 6-Wolf looping with 1-Sheep
---> 6-Wolf looping with 2-Sheep
---> 6-Wolf looping with 3-Sheep
---> 6-Wolf looping with 4-Sheep
---> 6-Wolf looping with 5-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 6-Wolf (y=48, x=3, store=836.0) before normal moving
-->else1 ends: 6-Wolf (y=49, x=2, store=836.0) after normal moving
....el1___________ 6-Wolf moved normally___________
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 55 ************

-> ------------ 0-Sheep initialised with (y=81, x=53, store=545.0) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=81, x=53, store=545.0). Will move normally and eat
-->0-Sheep (y=81, x=53, store=545.0) before normal moving and eating
-->0-Sheep (y=80, x=52, store=555.0) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=59, x=107, store=542.5) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=59, x=107, store=542.5). Will move normally and eat
-->1-Sheep (y=59, x=107, store=542.5) before normal moving and eating
-->1-Sheep (y=60, x=108, store=552.5) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=71, x=54, store=555.0) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=71, x=54, store=555.0). Will move normally and eat
-->2-Sheep (y=71, x=54, store=555.0) before normal moving and eating
-->2-Sheep (y=70, x=55, store=565.0) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=74, x=106, store=552.5) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=74, x=106, store=552.5). Will move normally and eat
-->3-Sheep (y=74, x=106, store=552.5) before normal moving and eating
-->3-Sheep (y=75, x=107, store=562.5) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=75, x=115, store=520) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=75, x=115, store=520). Will move normally and eat
-->4-Sheep (y=75, x=115, store=520) before normal moving and eating
-->4-Sheep (y=76, x=114, store=530) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=83, x=69, store=600) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=83, x=69, store=600). Will move normally and eat
-->5-Sheep (y=83, x=69, store=600) before normal moving and eating
-->5-Sheep (y=82, x=68, store=610) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=230, x=39, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=230, x=39, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=230, x=39, store=100) before normal moving
-->else1 ends: 0-Wolf (y=231, x=40, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=113, x=270, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=113, x=270, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=113, x=270, store=300) before normal moving
-->else1 ends: 1-Wolf (y=112, x=269, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=211, x=121, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=211, x=121, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=211, x=121, store=200) before normal moving
-->else1 ends: 2-Wolf (y=210, x=122, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=47, x=1, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=47, x=1, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=47, x=1, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=48, x=0, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=49, x=5, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=49, x=5, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=49, x=5, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=50, x=4, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=45, x=5, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=45, x=5, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=45, x=5, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=46, x=6, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=49, x=2, store=836.0) --------
--> 6-Wolf has >Min_energy(500) store (y=49, x=2, store=836.0) and 0.25 <= random.random() < 0.5. Tries to find food (sheep).
---> 6-Wolf looping with 0-Sheep
---> 6-Wolf looping with 1-Sheep
---> 6-Wolf looping with 2-Sheep
---> 6-Wolf looping with 3-Sheep
---> 6-Wolf looping with 4-Sheep
---> 6-Wolf looping with 5-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 6-Wolf (y=49, x=2, store=836.0) before normal moving
-->else1 ends: 6-Wolf (y=50, x=1, store=836.0) after normal moving
....el1___________ 6-Wolf moved normally___________
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 56 ************

-> ------------ 0-Sheep initialised with (y=80, x=52, store=555.0) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=80, x=52, store=555.0). Will move normally and eat
-->0-Sheep (y=80, x=52, store=555.0) before normal moving and eating
-->0-Sheep (y=79, x=53, store=565.0) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=60, x=108, store=552.5) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=60, x=108, store=552.5). Will move normally and eat
-->1-Sheep (y=60, x=108, store=552.5) before normal moving and eating
-->1-Sheep (y=59, x=109, store=562.5) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=70, x=55, store=565.0) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=70, x=55, store=565.0). Will move normally and eat
-->2-Sheep (y=70, x=55, store=565.0) before normal moving and eating
-->2-Sheep (y=69, x=54, store=575.0) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=75, x=107, store=562.5) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=75, x=107, store=562.5). Will move normally and eat
-->3-Sheep (y=75, x=107, store=562.5) before normal moving and eating
-->3-Sheep (y=74, x=106, store=572.5) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=76, x=114, store=530) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=76, x=114, store=530). Will move normally and eat
-->4-Sheep (y=76, x=114, store=530) before normal moving and eating
-->4-Sheep (y=77, x=113, store=540) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=82, x=68, store=610) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store > Min_ernergy(600) (y=82, x=68, store=610).
-> NO CS Found.
-> 5-Sheep (y=82, x=68, store=610) before normally moving and eating.
-> 5-Sheep (y=81, x=69, store=620) after normally moving and eating.
___e1________ 5-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=231, x=40, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=231, x=40, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=231, x=40, store=100) before normal moving
-->else1 ends: 0-Wolf (y=230, x=39, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=112, x=269, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=112, x=269, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=112, x=269, store=300) before normal moving
-->else1 ends: 1-Wolf (y=113, x=268, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=210, x=122, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=210, x=122, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=210, x=122, store=200) before normal moving
-->else1 ends: 2-Wolf (y=211, x=123, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=48, x=0, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=48, x=0, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=48, x=0, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=49, x=1, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=50, x=4, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=50, x=4, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=50, x=4, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=49, x=3, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=46, x=6, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=46, x=6, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=46, x=6, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=45, x=7, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=50, x=1, store=836.0) --------
--> if and elif not satisfied
--> 6-Wolf has > Min_energy(500) store (y=50, x=1, store=836.0) but Random < bf_e/2(0.25). So will move normally.
--->else3 begins: 6-Wolf (y=50, x=1, store=836.0) before normal moving.
--->else3 begins: 6-Wolf (y=51, x=0, store=836.0) after normal moving.
....e3_______ 6-Wolf moved normally_______
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 57 ************

-> ------------ 0-Sheep initialised with (y=79, x=53, store=565.0) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=79, x=53, store=565.0). Will move normally and eat
-->0-Sheep (y=79, x=53, store=565.0) before normal moving and eating
-->0-Sheep (y=78, x=52, store=575.0) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=59, x=109, store=562.5) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=59, x=109, store=562.5). Will move normally and eat
-->1-Sheep (y=59, x=109, store=562.5) before normal moving and eating
-->1-Sheep (y=58, x=108, store=572.5) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=69, x=54, store=575.0) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=69, x=54, store=575.0). Will move normally and eat
-->2-Sheep (y=69, x=54, store=575.0) before normal moving and eating
-->2-Sheep (y=70, x=55, store=585.0) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=74, x=106, store=572.5) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=74, x=106, store=572.5). Will move normally and eat
-->3-Sheep (y=74, x=106, store=572.5) before normal moving and eating
-->3-Sheep (y=73, x=107, store=582.5) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=77, x=113, store=540) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=77, x=113, store=540). Will move normally and eat
-->4-Sheep (y=77, x=113, store=540) before normal moving and eating
-->4-Sheep (y=76, x=114, store=550) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=81, x=69, store=620) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store > Min_ernergy(600) (y=81, x=69, store=620).
-> NO CS Found.
-> 5-Sheep (y=81, x=69, store=620) before normally moving and eating.
-> 5-Sheep (y=82, x=68, store=630) after normally moving and eating.
___e1________ 5-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=230, x=39, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=230, x=39, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=230, x=39, store=100) before normal moving
-->else1 ends: 0-Wolf (y=229, x=38, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=113, x=268, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=113, x=268, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=113, x=268, store=300) before normal moving
-->else1 ends: 1-Wolf (y=112, x=267, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=211, x=123, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=211, x=123, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=211, x=123, store=200) before normal moving
-->else1 ends: 2-Wolf (y=210, x=124, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=49, x=1, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=49, x=1, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=49, x=1, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=50, x=0, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=49, x=3, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=49, x=3, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=49, x=3, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=50, x=2, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=45, x=7, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=45, x=7, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=45, x=7, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=46, x=8, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=51, x=0, store=836.0) --------
--> 6-Wolf has > 500 store (y=51, x=0, store=836.0) and Random >= 0.5. so will try to find CW to move closer or breed/fight if within AD(5).
-> No CW found. although store >500 and p>=0.5!
--->else2 begins: 6-Wolf (y=51, x=0, store=836.0) before normal moving.
--->else2 begins: 6-Wolf (y=50, x=1, store=836.0) after normal moving.
.... el2 _______  6-Wolf moved normally _______ 
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 58 ************

-> ------------ 0-Sheep initialised with (y=78, x=52, store=575.0) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=78, x=52, store=575.0). Will move normally and eat
-->0-Sheep (y=78, x=52, store=575.0) before normal moving and eating
-->0-Sheep (y=77, x=51, store=585.0) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=58, x=108, store=572.5) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=58, x=108, store=572.5). Will move normally and eat
-->1-Sheep (y=58, x=108, store=572.5) before normal moving and eating
-->1-Sheep (y=57, x=109, store=582.5) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=70, x=55, store=585.0) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=70, x=55, store=585.0). Will move normally and eat
-->2-Sheep (y=70, x=55, store=585.0) before normal moving and eating
-->2-Sheep (y=71, x=56, store=595.0) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=73, x=107, store=582.5) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=73, x=107, store=582.5). Will move normally and eat
-->3-Sheep (y=73, x=107, store=582.5) before normal moving and eating
-->3-Sheep (y=74, x=106, store=592.5) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=76, x=114, store=550) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=76, x=114, store=550). Will move normally and eat
-->4-Sheep (y=76, x=114, store=550) before normal moving and eating
-->4-Sheep (y=77, x=115, store=560) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=82, x=68, store=630) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store > Min_ernergy(600) (y=82, x=68, store=630).
-> NO CS Found.
-> 5-Sheep (y=82, x=68, store=630) before normally moving and eating.
-> 5-Sheep (y=83, x=67, store=640) after normally moving and eating.
___e1________ 5-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=229, x=38, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=229, x=38, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=229, x=38, store=100) before normal moving
-->else1 ends: 0-Wolf (y=230, x=39, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=112, x=267, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=112, x=267, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=112, x=267, store=300) before normal moving
-->else1 ends: 1-Wolf (y=113, x=266, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=210, x=124, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=210, x=124, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=210, x=124, store=200) before normal moving
-->else1 ends: 2-Wolf (y=211, x=123, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=50, x=0, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=50, x=0, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=50, x=0, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=51, x=0, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=50, x=2, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=50, x=2, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=50, x=2, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=51, x=3, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=46, x=8, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=46, x=8, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=46, x=8, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=47, x=9, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=50, x=1, store=836.0) --------
--> if and elif not satisfied
--> 6-Wolf has > Min_energy(500) store (y=50, x=1, store=836.0) but Random < bf_e/2(0.25). So will move normally.
--->else3 begins: 6-Wolf (y=50, x=1, store=836.0) before normal moving.
--->else3 begins: 6-Wolf (y=49, x=2, store=836.0) after normal moving.
....e3_______ 6-Wolf moved normally_______
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 59 ************

-> ------------ 0-Sheep initialised with (y=77, x=51, store=585.0) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=77, x=51, store=585.0). Will move normally and eat
-->0-Sheep (y=77, x=51, store=585.0) before normal moving and eating
-->0-Sheep (y=78, x=50, store=595.0) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=57, x=109, store=582.5) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=57, x=109, store=582.5). Will move normally and eat
-->1-Sheep (y=57, x=109, store=582.5) before normal moving and eating
-->1-Sheep (y=56, x=110, store=592.5) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=71, x=56, store=595.0) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=71, x=56, store=595.0). Will move normally and eat
-->2-Sheep (y=71, x=56, store=595.0) before normal moving and eating
-->2-Sheep (y=72, x=57, store=605.0) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=74, x=106, store=592.5) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=74, x=106, store=592.5). Will move normally and eat
-->3-Sheep (y=74, x=106, store=592.5) before normal moving and eating
-->3-Sheep (y=73, x=107, store=602.5) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=77, x=115, store=560) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=77, x=115, store=560). Will move normally and eat
-->4-Sheep (y=77, x=115, store=560) before normal moving and eating
-->4-Sheep (y=76, x=116, store=570) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=83, x=67, store=640) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store > Min_ernergy(600) (y=83, x=67, store=640).
-> NO CS Found.
-> 5-Sheep (y=83, x=67, store=640) before normally moving and eating.
-> 5-Sheep (y=84, x=66, store=650) after normally moving and eating.
___e1________ 5-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=230, x=39, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=230, x=39, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=230, x=39, store=100) before normal moving
-->else1 ends: 0-Wolf (y=231, x=38, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=113, x=266, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=113, x=266, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=113, x=266, store=300) before normal moving
-->else1 ends: 1-Wolf (y=112, x=265, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=211, x=123, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=211, x=123, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=211, x=123, store=200) before normal moving
-->else1 ends: 2-Wolf (y=212, x=122, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=51, x=0, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=51, x=0, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=51, x=0, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=52, x=0, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=51, x=3, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=51, x=3, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=51, x=3, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=50, x=4, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=47, x=9, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=47, x=9, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=47, x=9, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=48, x=8, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=49, x=2, store=836.0) --------
--> 6-Wolf has > 500 store (y=49, x=2, store=836.0) and Random >= 0.5. so will try to find CW to move closer or breed/fight if within AD(5).
-> No CW found. although store >500 and p>=0.5!
--->else2 begins: 6-Wolf (y=49, x=2, store=836.0) before normal moving.
--->else2 begins: 6-Wolf (y=48, x=3, store=836.0) after normal moving.
.... el2 _______  6-Wolf moved normally _______ 
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 60 ************

-> ------------ 0-Sheep initialised with (y=78, x=50, store=595.0) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=78, x=50, store=595.0). Will move normally and eat
-->0-Sheep (y=78, x=50, store=595.0) before normal moving and eating
-->0-Sheep (y=77, x=49, store=605.0) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=56, x=110, store=592.5) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=56, x=110, store=592.5). Will move normally and eat
-->1-Sheep (y=56, x=110, store=592.5) before normal moving and eating
-->1-Sheep (y=55, x=109, store=602.5) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=72, x=57, store=605.0) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store > Min_ernergy(600) (y=72, x=57, store=605.0).
--> 2-Sheep looping with 0-Sheep.
--> 2-Sheep looping with 1-Sheep.
--> 2-Sheep looping with 2-Sheep.
----> ---- (AD < D < MD).
----> Min distance=15.0 for 2-Sheep (y=72, x=57, store=605.0) with 2-Sheep (y=84, x=66, store=650).
->CS Found!
-> 2-Sheep (y=72, x=57, store=605.0) before moving closer (while eating) to CS-Sheep: (y=84, x=66, store=650).
-> 2-Wolf (y=78, x=61, store=615.0) after moving closer (while eating) to CS-Sheep: (y=84, x=66, store=650).
___________ 2-Sheep moved closer CS___________


-> ------------ 3-Sheep initialised with (y=73, x=107, store=602.5) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store > Min_ernergy(600) (y=73, x=107, store=602.5).
--> 3-Sheep looping with 0-Sheep.
----> ---- (AD < D < MD).
----> Min distance=9.486832980505138 for 3-Sheep (y=73, x=107, store=602.5) with 0-Sheep (y=76, x=116, store=570).
--> 3-Sheep looping with 1-Sheep.
->CS Found!
-> 3-Sheep (y=73, x=107, store=602.5) before moving closer (while eating) to CS-Sheep: (y=76, x=116, store=570).
-> 3-Wolf (y=74, x=111, store=612.5) after moving closer (while eating) to CS-Sheep: (y=76, x=116, store=570).
___________ 3-Sheep moved closer CS___________


-> ------------ 4-Sheep initialised with (y=76, x=116, store=570) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=76, x=116, store=570). Will move normally and eat
-->4-Sheep (y=76, x=116, store=570) before normal moving and eating
-->4-Sheep (y=77, x=117, store=580) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=84, x=66, store=650) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store > Min_ernergy(600) (y=84, x=66, store=650).
-> NO CS Found.
-> 5-Sheep (y=84, x=66, store=650) before normally moving and eating.
-> 5-Sheep (y=85, x=65, store=660) after normally moving and eating.
___e1________ 5-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=231, x=38, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=231, x=38, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=231, x=38, store=100) before normal moving
-->else1 ends: 0-Wolf (y=232, x=37, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=112, x=265, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=112, x=265, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=112, x=265, store=300) before normal moving
-->else1 ends: 1-Wolf (y=113, x=266, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=212, x=122, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=212, x=122, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=212, x=122, store=200) before normal moving
-->else1 ends: 2-Wolf (y=211, x=123, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=52, x=0, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=52, x=0, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=52, x=0, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=53, x=1, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=50, x=4, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=50, x=4, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=50, x=4, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=51, x=3, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=48, x=8, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=48, x=8, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=48, x=8, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=49, x=9, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=48, x=3, store=836.0) --------
--> if and elif not satisfied
--> 6-Wolf has > Min_energy(500) store (y=48, x=3, store=836.0) but Random < bf_e/2(0.25). So will move normally.
--->else3 begins: 6-Wolf (y=48, x=3, store=836.0) before normal moving.
--->else3 begins: 6-Wolf (y=49, x=2, store=836.0) after normal moving.
....e3_______ 6-Wolf moved normally_______
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 61 ************

-> ------------ 0-Sheep initialised with (y=77, x=49, store=605.0) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store > Min_ernergy(600) (y=77, x=49, store=605.0).
--> 0-Sheep looping with 0-Sheep.
--> 0-Sheep looping with 1-Sheep.
----> ---- (AD < D < MD).
----> Min distance=12.041594578792296 for 0-Sheep (y=77, x=49, store=605.0) with 1-Sheep (y=78, x=61, store=615.0).
--> 0-Sheep looping with 2-Sheep.
--> 0-Sheep looping with 3-Sheep.
--> 0-Sheep looping with 4-Sheep.
->CS Found!
-> 0-Sheep (y=77, x=49, store=605.0) before moving closer (while eating) to CS-Sheep: (y=78, x=61, store=615.0).
-> 0-Wolf (y=77, x=55, store=615.0) after moving closer (while eating) to CS-Sheep: (y=78, x=61, store=615.0).
___________ 0-Sheep moved closer CS___________


-> ------------ 1-Sheep initialised with (y=55, x=109, store=602.5) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store > Min_ernergy(600) (y=55, x=109, store=602.5).
--> 1-Sheep looping with 0-Sheep.
--> 1-Sheep looping with 1-Sheep.
----> ---- (AD < D < MD).
----> Min distance=19.1049731745428 for 1-Sheep (y=55, x=109, store=602.5) with 1-Sheep (y=74, x=111, store=612.5).
--> 1-Sheep looping with 2-Sheep.
--> 1-Sheep looping with 3-Sheep.
->CS Found!
-> 1-Sheep (y=55, x=109, store=602.5) before moving closer (while eating) to CS-Sheep: (y=74, x=111, store=612.5).
-> 1-Wolf (y=64, x=110, store=612.5) after moving closer (while eating) to CS-Sheep: (y=74, x=111, store=612.5).
___________ 1-Sheep moved closer CS___________


-> ------------ 2-Sheep initialised with (y=78, x=61, store=615.0) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store > Min_ernergy(600) (y=78, x=61, store=615.0).
--> 2-Sheep looping with 0-Sheep.
--> 2-Sheep looping with 1-Sheep.
--> 2-Sheep looping with 2-Sheep.
----> ---- (AD < D < MD).
----> Min distance=8.06225774829855 for 2-Sheep (y=78, x=61, store=615.0) with 2-Sheep (y=85, x=65, store=660).
->CS Found!
-> 2-Sheep (y=78, x=61, store=615.0) before moving closer (while eating) to CS-Sheep: (y=85, x=65, store=660).
-> 2-Wolf (y=81, x=63, store=625.0) after moving closer (while eating) to CS-Sheep: (y=85, x=65, store=660).
___________ 2-Sheep moved closer CS___________


-> ------------ 3-Sheep initialised with (y=74, x=111, store=612.5) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store > Min_ernergy(600) (y=74, x=111, store=612.5).
--> 3-Sheep looping with 0-Sheep.
----> ---- (AD < D < MD).
----> Min distance=6.708203932499369 for 3-Sheep (y=74, x=111, store=612.5) with 0-Sheep (y=77, x=117, store=580).
--> 3-Sheep looping with 1-Sheep.
->CS Found!
-> 3-Sheep (y=74, x=111, store=612.5) before moving closer (while eating) to CS-Sheep: (y=77, x=117, store=580).
-> 3-Wolf (y=75, x=114, store=622.5) after moving closer (while eating) to CS-Sheep: (y=77, x=117, store=580).
___________ 3-Sheep moved closer CS___________


-> ------------ 4-Sheep initialised with (y=77, x=117, store=580) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=77, x=117, store=580). Will move normally and eat
-->4-Sheep (y=77, x=117, store=580) before normal moving and eating
-->4-Sheep (y=76, x=118, store=590) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=85, x=65, store=660) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store > Min_ernergy(600) (y=85, x=65, store=660).
-> NO CS Found.
-> 5-Sheep (y=85, x=65, store=660) before normally moving and eating.
-> 5-Sheep (y=86, x=64, store=670) after normally moving and eating.
___e1________ 5-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=232, x=37, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=232, x=37, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=232, x=37, store=100) before normal moving
-->else1 ends: 0-Wolf (y=233, x=38, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=113, x=266, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=113, x=266, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=113, x=266, store=300) before normal moving
-->else1 ends: 1-Wolf (y=112, x=267, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=211, x=123, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=211, x=123, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=211, x=123, store=200) before normal moving
-->else1 ends: 2-Wolf (y=212, x=124, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=53, x=1, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=53, x=1, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=53, x=1, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=52, x=0, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=51, x=3, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=51, x=3, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=51, x=3, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=50, x=4, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=49, x=9, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=49, x=9, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=49, x=9, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=48, x=10, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=49, x=2, store=836.0) --------
--> 6-Wolf has > 500 store (y=49, x=2, store=836.0) and Random >= 0.5. so will try to find CW to move closer or breed/fight if within AD(5).
-> No CW found. although store >500 and p>=0.5!
--->else2 begins: 6-Wolf (y=49, x=2, store=836.0) before normal moving.
--->else2 begins: 6-Wolf (y=50, x=3, store=836.0) after normal moving.
.... el2 _______  6-Wolf moved normally _______ 
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 62 ************

-> ------------ 0-Sheep initialised with (y=77, x=55, store=615.0) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store > Min_ernergy(600) (y=77, x=55, store=615.0).
--> 0-Sheep looping with 0-Sheep.
--> 0-Sheep looping with 1-Sheep.
----> ---- (AD < D < MD).
----> Min distance=8.94427190999916 for 0-Sheep (y=77, x=55, store=615.0) with 1-Sheep (y=81, x=63, store=625.0).
--> 0-Sheep looping with 2-Sheep.
--> 0-Sheep looping with 3-Sheep.
--> 0-Sheep looping with 4-Sheep.
->CS Found!
-> 0-Sheep (y=77, x=55, store=615.0) before moving closer (while eating) to CS-Sheep: (y=81, x=63, store=625.0).
-> 0-Wolf (y=79, x=59, store=625.0) after moving closer (while eating) to CS-Sheep: (y=81, x=63, store=625.0).
___________ 0-Sheep moved closer CS___________


-> ------------ 1-Sheep initialised with (y=64, x=110, store=612.5) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store > Min_ernergy(600) (y=64, x=110, store=612.5).
--> 1-Sheep looping with 0-Sheep.
--> 1-Sheep looping with 1-Sheep.
----> ---- (AD < D < MD).
----> Min distance=11.704699910719626 for 1-Sheep (y=64, x=110, store=612.5) with 1-Sheep (y=75, x=114, store=622.5).
--> 1-Sheep looping with 2-Sheep.
--> 1-Sheep looping with 3-Sheep.
->CS Found!
-> 1-Sheep (y=64, x=110, store=612.5) before moving closer (while eating) to CS-Sheep: (y=75, x=114, store=622.5).
-> 1-Wolf (y=69, x=112, store=622.5) after moving closer (while eating) to CS-Sheep: (y=75, x=114, store=622.5).
___________ 1-Sheep moved closer CS___________


-> ------------ 2-Sheep initialised with (y=81, x=63, store=625.0) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store > Min_ernergy(600) (y=81, x=63, store=625.0).
--> 2-Sheep looping with 0-Sheep.
--> 2-Sheep looping with 1-Sheep.
--> 2-Sheep looping with 2-Sheep.
----> ---- (AD < D < MD).
----> Min distance=5.0990195135927845 for 2-Sheep (y=81, x=63, store=625.0) with 2-Sheep (y=86, x=64, store=670).
->CS Found!
-> 2-Sheep (y=81, x=63, store=625.0) before moving closer (while eating) to CS-Sheep: (y=86, x=64, store=670).
-> 2-Wolf (y=83, x=63, store=635.0) after moving closer (while eating) to CS-Sheep: (y=86, x=64, store=670).
___________ 2-Sheep moved closer CS___________


-> ------------ 3-Sheep initialised with (y=75, x=114, store=622.5) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store > Min_ernergy(600) (y=75, x=114, store=622.5).
--> 3-Sheep looping with 0-Sheep.
----> D <=AD. Sheep Breeding/Sharing proximity of 4.123105625617661(<=5) entered by CS 3-Sheep (y=75, x=114, store=622.5) with CS 0-Sheep (y=76, x=118, store=590).
-----> 3-Sheep (y=75, x=114, store=622.5) and CS 0-Sheep (y=76, x=118, store=590 will not mate as CS 0-Sheep store <600. They will share resource to become average.
-----> Shared resources = True
-----> 3-Sheep (y=75, x=114, store=606.25) and CS 0-Sheep (y=76, x=118, store=606.25) after sharing resources!
_____________ 3-Sheep and CS 0-Sheep shared resources ____________
_______ Breeding=False, Failed breeding=False, Share=True for 3-Sheep __________

-> ------------ 4-Sheep initialised with (y=76, x=118, store=606.25) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store > Min_ernergy(600) (y=76, x=118, store=606.25).
--> 4-Sheep looping with 0-Sheep.
-> NO CS Found.
-> 4-Sheep (y=76, x=118, store=606.25) before normally moving and eating.
-> 4-Sheep (y=75, x=117, store=616.25) after normally moving and eating.
___e1________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=86, x=64, store=670) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store > Min_ernergy(600) (y=86, x=64, store=670).
-> NO CS Found.
-> 5-Sheep (y=86, x=64, store=670) before normally moving and eating.
-> 5-Sheep (y=85, x=63, store=680) after normally moving and eating.
___e1________ 5-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=233, x=38, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=233, x=38, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=233, x=38, store=100) before normal moving
-->else1 ends: 0-Wolf (y=234, x=37, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=112, x=267, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=112, x=267, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=112, x=267, store=300) before normal moving
-->else1 ends: 1-Wolf (y=111, x=268, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=212, x=124, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=212, x=124, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=212, x=124, store=200) before normal moving
-->else1 ends: 2-Wolf (y=213, x=123, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=52, x=0, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=52, x=0, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=52, x=0, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=51, x=1, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=50, x=4, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=50, x=4, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=50, x=4, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=51, x=3, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=48, x=10, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=48, x=10, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=48, x=10, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=49, x=9, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=50, x=3, store=836.0) --------
--> 6-Wolf has >Min_energy(500) store (y=50, x=3, store=836.0) and 0.25 <= random.random() < 0.5. Tries to find food (sheep).
---> 6-Wolf looping with 0-Sheep
---> 6-Wolf looping with 1-Sheep
---> 6-Wolf looping with 2-Sheep
---> 6-Wolf looping with 3-Sheep
---> 6-Wolf looping with 4-Sheep
---> 6-Wolf looping with 5-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 6-Wolf (y=50, x=3, store=836.0) before normal moving
-->else1 ends: 6-Wolf (y=51, x=2, store=836.0) after normal moving
....el1___________ 6-Wolf moved normally___________
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 63 ************

-> ------------ 0-Sheep initialised with (y=79, x=59, store=625.0) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store > Min_ernergy(600) (y=79, x=59, store=625.0).
--> 0-Sheep looping with 0-Sheep.
--> 0-Sheep looping with 1-Sheep.
----> ---- (AD < D < MD).
----> Min distance=5.656854249492381 for 0-Sheep (y=79, x=59, store=625.0) with 1-Sheep (y=83, x=63, store=635.0).
--> 0-Sheep looping with 2-Sheep.
--> 0-Sheep looping with 3-Sheep.
--> 0-Sheep looping with 4-Sheep.
->CS Found!
-> 0-Sheep (y=79, x=59, store=625.0) before moving closer (while eating) to CS-Sheep: (y=83, x=63, store=635.0).
-> 0-Wolf (y=81, x=61, store=635.0) after moving closer (while eating) to CS-Sheep: (y=83, x=63, store=635.0).
___________ 0-Sheep moved closer CS___________


-> ------------ 1-Sheep initialised with (y=69, x=112, store=622.5) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store > Min_ernergy(600) (y=69, x=112, store=622.5).
--> 1-Sheep looping with 0-Sheep.
--> 1-Sheep looping with 1-Sheep.
----> ---- (AD < D < MD).
----> Min distance=6.324555320336759 for 1-Sheep (y=69, x=112, store=622.5) with 1-Sheep (y=75, x=114, store=606.25).
--> 1-Sheep looping with 2-Sheep.
--> 1-Sheep looping with 3-Sheep.
->CS Found!
-> 1-Sheep (y=69, x=112, store=622.5) before moving closer (while eating) to CS-Sheep: (y=75, x=114, store=606.25).
-> 1-Wolf (y=72, x=113, store=632.5) after moving closer (while eating) to CS-Sheep: (y=75, x=114, store=606.25).
___________ 1-Sheep moved closer CS___________


-> ------------ 2-Sheep initialised with (y=83, x=63, store=635.0) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store > Min_ernergy(600) (y=83, x=63, store=635.0).
--> 2-Sheep looping with 0-Sheep.
--> 2-Sheep looping with 1-Sheep.
--> 2-Sheep looping with 2-Sheep.
----> D <=AD. Sheep Breeding/Sharing proximity of 2.0(<=5) entered by CS 2-Sheep (y=83, x=63, store=635.0) with CS 2-Sheep (y=85, x=63, store=680).
----->2-Sheep (y=83, x=63, store=635.0) and CS 2-Sheep (y=85, x=63, store=680 have > Min_energy (600) store. So they will try breeding if p>0.5
------>1.A. Random >0.5. So the sheep will breed.
------> 2-Sheep (y=83, x=63, store=635.0) before breeding with CS 2-Sheep (y=85, x=63, store=680).
------> Sheep Breed = True
------> 2-Sheep (y=83, x=63, store=328.75) after breeding with CS 2-Sheep (y=85, x=63, store=328.75).
_____________ 2-Sheep Mated SUCCESSFULLY with CS 2-Sheep ____________
_______ Breeding=True, Failed breeding=False, Share=False for 2-Sheep __________

-> ------------ 3-Sheep initialised with (y=75, x=114, store=606.25) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store > Min_ernergy(600) (y=75, x=114, store=606.25).
--> 3-Sheep looping with 0-Sheep.
----> D <=AD. Sheep Breeding/Sharing proximity of 3.0(<=5) entered by CS 3-Sheep (y=75, x=114, store=606.25) with CS 0-Sheep (y=75, x=117, store=616.25).
----->3-Sheep (y=75, x=114, store=606.25) and CS 0-Sheep (y=75, x=117, store=616.25 have > Min_energy (600) store. So they will try breeding if p>0.5
------>1.A. Random >0.5. So the sheep will breed.
------> 3-Sheep (y=75, x=114, store=606.25) before breeding with CS 0-Sheep (y=75, x=117, store=616.25).
------> Sheep Breed = True
------> 3-Sheep (y=75, x=114, store=305.625) after breeding with CS 0-Sheep (y=75, x=117, store=305.625).
_____________ 3-Sheep Mated SUCCESSFULLY with CS 0-Sheep ____________
_______ Breeding=True, Failed breeding=False, Share=False for 3-Sheep __________

-> ------------ 4-Sheep initialised with (y=75, x=117, store=305.625) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=75, x=117, store=305.625). Will move normally and eat
-->4-Sheep (y=75, x=117, store=305.625) before normal moving and eating
-->4-Sheep (y=74, x=116, store=315.625) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=85, x=63, store=328.75) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=85, x=63, store=328.75). Will move normally and eat
-->5-Sheep (y=85, x=63, store=328.75) before normal moving and eating
-->5-Sheep (y=84, x=62, store=338.75) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=234, x=37, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=234, x=37, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=234, x=37, store=100) before normal moving
-->else1 ends: 0-Wolf (y=235, x=36, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=111, x=268, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=111, x=268, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=111, x=268, store=300) before normal moving
-->else1 ends: 1-Wolf (y=112, x=267, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=213, x=123, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=213, x=123, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=213, x=123, store=200) before normal moving
-->else1 ends: 2-Wolf (y=214, x=122, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=51, x=1, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=51, x=1, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=51, x=1, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=50, x=0, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=51, x=3, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=51, x=3, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=51, x=3, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=50, x=4, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=49, x=9, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=49, x=9, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=49, x=9, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=48, x=8, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=51, x=2, store=836.0) --------
--> 6-Wolf has > 500 store (y=51, x=2, store=836.0) and Random >= 0.5. so will try to find CW to move closer or breed/fight if within AD(5).
-> No CW found. although store >500 and p>=0.5!
--->else2 begins: 6-Wolf (y=51, x=2, store=836.0) before normal moving.
--->else2 begins: 6-Wolf (y=50, x=3, store=836.0) after normal moving.
.... el2 _______  6-Wolf moved normally _______ 
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 64 ************

-> ------------ 0-Sheep initialised with (y=81, x=61, store=635.0) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store > Min_ernergy(600) (y=81, x=61, store=635.0).
--> 0-Sheep looping with 0-Sheep.
--> 0-Sheep looping with 1-Sheep.
----> D <=AD. Sheep Breeding/Sharing proximity of 2.8284271247461903(<=5) entered by CS 0-Sheep (y=81, x=61, store=635.0) with CS 1-Sheep (y=83, x=63, store=328.75).
-----> 0-Sheep (y=81, x=61, store=635.0) and CS 1-Sheep (y=83, x=63, store=328.75 will not mate as CS 1-Sheep store <600. They will share resource to become average.
-----> Shared resources = True
-----> 0-Sheep (y=81, x=61, store=481.875) and CS 1-Sheep (y=83, x=63, store=481.875) after sharing resources!
_____________ 0-Sheep and CS 1-Sheep shared resources ____________
_______ Breeding=False, Failed breeding=False, Share=True for 0-Sheep __________

-> ------------ 1-Sheep initialised with (y=72, x=113, store=632.5) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store > Min_ernergy(600) (y=72, x=113, store=632.5).
--> 1-Sheep looping with 0-Sheep.
--> 1-Sheep looping with 1-Sheep.
----> D <=AD. Sheep Breeding/Sharing proximity of 3.1622776601683795(<=5) entered by CS 1-Sheep (y=72, x=113, store=632.5) with CS 1-Sheep (y=75, x=114, store=305.625).
-----> 1-Sheep (y=72, x=113, store=632.5) and CS 1-Sheep (y=75, x=114, store=305.625 will not mate as CS 1-Sheep store <600. They will share resource to become average.
-----> Shared resources = True
-----> 1-Sheep (y=72, x=113, store=469.0625) and CS 1-Sheep (y=75, x=114, store=469.0625) after sharing resources!
_____________ 1-Sheep and CS 1-Sheep shared resources ____________
_______ Breeding=False, Failed breeding=False, Share=True for 1-Sheep __________

-> ------------ 2-Sheep initialised with (y=83, x=63, store=481.875) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=83, x=63, store=481.875). Will move normally and eat
-->2-Sheep (y=83, x=63, store=481.875) before normal moving and eating
-->2-Sheep (y=82, x=64, store=491.875) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=75, x=114, store=469.0625) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=75, x=114, store=469.0625). Will move normally and eat
-->3-Sheep (y=75, x=114, store=469.0625) before normal moving and eating
-->3-Sheep (y=76, x=115, store=479.0625) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=74, x=116, store=315.625) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=74, x=116, store=315.625). Will move normally and eat
-->4-Sheep (y=74, x=116, store=315.625) before normal moving and eating
-->4-Sheep (y=75, x=115, store=325.625) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=84, x=62, store=338.75) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=84, x=62, store=338.75). Will move normally and eat
-->5-Sheep (y=84, x=62, store=338.75) before normal moving and eating
-->5-Sheep (y=85, x=61, store=348.75) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=93, x=73, store=100) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=93, x=73, store=100). Will move normally and eat
-->6-Sheep (y=93, x=73, store=100) before normal moving and eating
-->6-Sheep (y=92, x=72, store=110) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=85, x=124, store=400) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=85, x=124, store=400). Will move normally and eat
-->7-Sheep (y=85, x=124, store=400) before normal moving and eating
-->7-Sheep (y=84, x=123, store=410) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=235, x=36, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=235, x=36, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=235, x=36, store=100) before normal moving
-->else1 ends: 0-Wolf (y=236, x=35, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=112, x=267, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=112, x=267, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=112, x=267, store=300) before normal moving
-->else1 ends: 1-Wolf (y=113, x=266, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=214, x=122, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=214, x=122, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=214, x=122, store=200) before normal moving
-->else1 ends: 2-Wolf (y=215, x=121, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=50, x=0, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=50, x=0, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=50, x=0, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=51, x=0, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=50, x=4, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=50, x=4, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=50, x=4, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=49, x=3, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=48, x=8, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=48, x=8, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=48, x=8, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=49, x=9, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=50, x=3, store=836.0) --------
--> if and elif not satisfied
--> 6-Wolf has > Min_energy(500) store (y=50, x=3, store=836.0) but Random < bf_e/2(0.25). So will move normally.
--->else3 begins: 6-Wolf (y=50, x=3, store=836.0) before normal moving.
--->else3 begins: 6-Wolf (y=51, x=4, store=836.0) after normal moving.
....e3_______ 6-Wolf moved normally_______
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 65 ************

-> ------------ 0-Sheep initialised with (y=81, x=61, store=481.875) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=81, x=61, store=481.875). Will move normally and eat
-->0-Sheep (y=81, x=61, store=481.875) before normal moving and eating
-->0-Sheep (y=82, x=62, store=491.875) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=72, x=113, store=469.0625) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=72, x=113, store=469.0625). Will move normally and eat
-->1-Sheep (y=72, x=113, store=469.0625) before normal moving and eating
-->1-Sheep (y=73, x=112, store=479.0625) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=82, x=64, store=491.875) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=82, x=64, store=491.875). Will move normally and eat
-->2-Sheep (y=82, x=64, store=491.875) before normal moving and eating
-->2-Sheep (y=81, x=63, store=501.875) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=76, x=115, store=479.0625) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=76, x=115, store=479.0625). Will move normally and eat
-->3-Sheep (y=76, x=115, store=479.0625) before normal moving and eating
-->3-Sheep (y=77, x=116, store=489.0625) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=75, x=115, store=325.625) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=75, x=115, store=325.625). Will move normally and eat
-->4-Sheep (y=75, x=115, store=325.625) before normal moving and eating
-->4-Sheep (y=76, x=116, store=335.625) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=85, x=61, store=348.75) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=85, x=61, store=348.75). Will move normally and eat
-->5-Sheep (y=85, x=61, store=348.75) before normal moving and eating
-->5-Sheep (y=84, x=60, store=358.75) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=92, x=72, store=110) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=92, x=72, store=110). Will move normally and eat
-->6-Sheep (y=92, x=72, store=110) before normal moving and eating
-->6-Sheep (y=93, x=73, store=120) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=84, x=123, store=410) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=84, x=123, store=410). Will move normally and eat
-->7-Sheep (y=84, x=123, store=410) before normal moving and eating
-->7-Sheep (y=83, x=124, store=420) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=236, x=35, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=236, x=35, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=236, x=35, store=100) before normal moving
-->else1 ends: 0-Wolf (y=237, x=36, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=113, x=266, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=113, x=266, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=113, x=266, store=300) before normal moving
-->else1 ends: 1-Wolf (y=114, x=267, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=215, x=121, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=215, x=121, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=215, x=121, store=200) before normal moving
-->else1 ends: 2-Wolf (y=214, x=120, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=51, x=0, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=51, x=0, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=51, x=0, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=50, x=1, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=49, x=3, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=49, x=3, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=49, x=3, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=48, x=2, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=49, x=9, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=49, x=9, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=49, x=9, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=48, x=8, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=51, x=4, store=836.0) --------
--> if and elif not satisfied
--> 6-Wolf has > Min_energy(500) store (y=51, x=4, store=836.0) but Random < bf_e/2(0.25). So will move normally.
--->else3 begins: 6-Wolf (y=51, x=4, store=836.0) before normal moving.
--->else3 begins: 6-Wolf (y=50, x=5, store=836.0) after normal moving.
....e3_______ 6-Wolf moved normally_______
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 66 ************

-> ------------ 0-Sheep initialised with (y=82, x=62, store=491.875) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=82, x=62, store=491.875). Will move normally and eat
-->0-Sheep (y=82, x=62, store=491.875) before normal moving and eating
-->0-Sheep (y=81, x=61, store=501.875) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=73, x=112, store=479.0625) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=73, x=112, store=479.0625). Will move normally and eat
-->1-Sheep (y=73, x=112, store=479.0625) before normal moving and eating
-->1-Sheep (y=74, x=111, store=489.0625) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=81, x=63, store=501.875) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=81, x=63, store=501.875). Will move normally and eat
-->2-Sheep (y=81, x=63, store=501.875) before normal moving and eating
-->2-Sheep (y=82, x=62, store=511.875) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=77, x=116, store=489.0625) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=77, x=116, store=489.0625). Will move normally and eat
-->3-Sheep (y=77, x=116, store=489.0625) before normal moving and eating
-->3-Sheep (y=78, x=117, store=499.0625) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=76, x=116, store=335.625) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=76, x=116, store=335.625). Will move normally and eat
-->4-Sheep (y=76, x=116, store=335.625) before normal moving and eating
-->4-Sheep (y=77, x=115, store=345.625) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=84, x=60, store=358.75) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=84, x=60, store=358.75). Will move normally and eat
-->5-Sheep (y=84, x=60, store=358.75) before normal moving and eating
-->5-Sheep (y=83, x=61, store=368.75) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=93, x=73, store=120) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=93, x=73, store=120). Will move normally and eat
-->6-Sheep (y=93, x=73, store=120) before normal moving and eating
-->6-Sheep (y=92, x=72, store=130) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=83, x=124, store=420) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=83, x=124, store=420). Will move normally and eat
-->7-Sheep (y=83, x=124, store=420) before normal moving and eating
-->7-Sheep (y=82, x=125, store=430) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=237, x=36, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=237, x=36, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=237, x=36, store=100) before normal moving
-->else1 ends: 0-Wolf (y=236, x=35, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=114, x=267, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=114, x=267, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=114, x=267, store=300) before normal moving
-->else1 ends: 1-Wolf (y=115, x=268, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=214, x=120, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=214, x=120, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=214, x=120, store=200) before normal moving
-->else1 ends: 2-Wolf (y=215, x=121, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=50, x=1, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=50, x=1, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=50, x=1, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=51, x=0, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=48, x=2, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=48, x=2, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=48, x=2, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=47, x=3, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=48, x=8, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=48, x=8, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=48, x=8, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=49, x=7, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=50, x=5, store=836.0) --------
--> if and elif not satisfied
--> 6-Wolf has > Min_energy(500) store (y=50, x=5, store=836.0) but Random < bf_e/2(0.25). So will move normally.
--->else3 begins: 6-Wolf (y=50, x=5, store=836.0) before normal moving.
--->else3 begins: 6-Wolf (y=51, x=4, store=836.0) after normal moving.
....e3_______ 6-Wolf moved normally_______
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 67 ************

-> ------------ 0-Sheep initialised with (y=81, x=61, store=501.875) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=81, x=61, store=501.875). Will move normally and eat
-->0-Sheep (y=81, x=61, store=501.875) before normal moving and eating
-->0-Sheep (y=80, x=60, store=511.875) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=74, x=111, store=489.0625) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=74, x=111, store=489.0625). Will move normally and eat
-->1-Sheep (y=74, x=111, store=489.0625) before normal moving and eating
-->1-Sheep (y=75, x=112, store=499.0625) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=82, x=62, store=511.875) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=82, x=62, store=511.875). Will move normally and eat
-->2-Sheep (y=82, x=62, store=511.875) before normal moving and eating
-->2-Sheep (y=83, x=61, store=521.875) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=78, x=117, store=499.0625) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=78, x=117, store=499.0625). Will move normally and eat
-->3-Sheep (y=78, x=117, store=499.0625) before normal moving and eating
-->3-Sheep (y=79, x=118, store=509.0625) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=77, x=115, store=345.625) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=77, x=115, store=345.625). Will move normally and eat
-->4-Sheep (y=77, x=115, store=345.625) before normal moving and eating
-->4-Sheep (y=78, x=116, store=355.625) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=83, x=61, store=368.75) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=83, x=61, store=368.75). Will move normally and eat
-->5-Sheep (y=83, x=61, store=368.75) before normal moving and eating
-->5-Sheep (y=84, x=62, store=378.75) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=92, x=72, store=130) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=92, x=72, store=130). Will move normally and eat
-->6-Sheep (y=92, x=72, store=130) before normal moving and eating
-->6-Sheep (y=93, x=73, store=140) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=82, x=125, store=430) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=82, x=125, store=430). Will move normally and eat
-->7-Sheep (y=82, x=125, store=430) before normal moving and eating
-->7-Sheep (y=81, x=124, store=440) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=236, x=35, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=236, x=35, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=236, x=35, store=100) before normal moving
-->else1 ends: 0-Wolf (y=237, x=34, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=115, x=268, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=115, x=268, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=115, x=268, store=300) before normal moving
-->else1 ends: 1-Wolf (y=116, x=267, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=215, x=121, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=215, x=121, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=215, x=121, store=200) before normal moving
-->else1 ends: 2-Wolf (y=216, x=122, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=51, x=0, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=51, x=0, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=51, x=0, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=52, x=0, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=47, x=3, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=47, x=3, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=47, x=3, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=48, x=2, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=49, x=7, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=49, x=7, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=49, x=7, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=50, x=8, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=51, x=4, store=836.0) --------
--> if and elif not satisfied
--> 6-Wolf has > Min_energy(500) store (y=51, x=4, store=836.0) but Random < bf_e/2(0.25). So will move normally.
--->else3 begins: 6-Wolf (y=51, x=4, store=836.0) before normal moving.
--->else3 begins: 6-Wolf (y=50, x=3, store=836.0) after normal moving.
....e3_______ 6-Wolf moved normally_______
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 68 ************

-> ------------ 0-Sheep initialised with (y=80, x=60, store=511.875) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=80, x=60, store=511.875). Will move normally and eat
-->0-Sheep (y=80, x=60, store=511.875) before normal moving and eating
-->0-Sheep (y=81, x=61, store=521.875) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=75, x=112, store=499.0625) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=75, x=112, store=499.0625). Will move normally and eat
-->1-Sheep (y=75, x=112, store=499.0625) before normal moving and eating
-->1-Sheep (y=74, x=111, store=509.0625) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=83, x=61, store=521.875) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=83, x=61, store=521.875). Will move normally and eat
-->2-Sheep (y=83, x=61, store=521.875) before normal moving and eating
-->2-Sheep (y=84, x=60, store=531.875) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=79, x=118, store=509.0625) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=79, x=118, store=509.0625). Will move normally and eat
-->3-Sheep (y=79, x=118, store=509.0625) before normal moving and eating
-->3-Sheep (y=78, x=119, store=519.0625) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=78, x=116, store=355.625) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=78, x=116, store=355.625). Will move normally and eat
-->4-Sheep (y=78, x=116, store=355.625) before normal moving and eating
-->4-Sheep (y=77, x=115, store=365.625) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=84, x=62, store=378.75) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=84, x=62, store=378.75). Will move normally and eat
-->5-Sheep (y=84, x=62, store=378.75) before normal moving and eating
-->5-Sheep (y=83, x=63, store=388.75) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=93, x=73, store=140) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=93, x=73, store=140). Will move normally and eat
-->6-Sheep (y=93, x=73, store=140) before normal moving and eating
-->6-Sheep (y=92, x=74, store=150) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=81, x=124, store=440) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=81, x=124, store=440). Will move normally and eat
-->7-Sheep (y=81, x=124, store=440) before normal moving and eating
-->7-Sheep (y=82, x=125, store=450) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=237, x=34, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=237, x=34, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=237, x=34, store=100) before normal moving
-->else1 ends: 0-Wolf (y=236, x=33, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=116, x=267, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=116, x=267, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=116, x=267, store=300) before normal moving
-->else1 ends: 1-Wolf (y=117, x=266, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=216, x=122, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=216, x=122, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=216, x=122, store=200) before normal moving
-->else1 ends: 2-Wolf (y=217, x=121, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=52, x=0, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=52, x=0, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=52, x=0, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=51, x=0, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=48, x=2, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=48, x=2, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=48, x=2, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=49, x=1, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=50, x=8, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=50, x=8, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=50, x=8, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=49, x=7, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=50, x=3, store=836.0) --------
--> 6-Wolf has > 500 store (y=50, x=3, store=836.0) and Random >= 0.5. so will try to find CW to move closer or breed/fight if within AD(5).
-> No CW found. although store >500 and p>=0.5!
--->else2 begins: 6-Wolf (y=50, x=3, store=836.0) before normal moving.
--->else2 begins: 6-Wolf (y=49, x=2, store=836.0) after normal moving.
.... el2 _______  6-Wolf moved normally _______ 
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 69 ************

-> ------------ 0-Sheep initialised with (y=81, x=61, store=521.875) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=81, x=61, store=521.875). Will move normally and eat
-->0-Sheep (y=81, x=61, store=521.875) before normal moving and eating
-->0-Sheep (y=80, x=62, store=531.875) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=74, x=111, store=509.0625) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=74, x=111, store=509.0625). Will move normally and eat
-->1-Sheep (y=74, x=111, store=509.0625) before normal moving and eating
-->1-Sheep (y=75, x=112, store=519.0625) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=84, x=60, store=531.875) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=84, x=60, store=531.875). Will move normally and eat
-->2-Sheep (y=84, x=60, store=531.875) before normal moving and eating
-->2-Sheep (y=83, x=59, store=541.875) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=78, x=119, store=519.0625) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=78, x=119, store=519.0625). Will move normally and eat
-->3-Sheep (y=78, x=119, store=519.0625) before normal moving and eating
-->3-Sheep (y=79, x=120, store=529.0625) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=77, x=115, store=365.625) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=77, x=115, store=365.625). Will move normally and eat
-->4-Sheep (y=77, x=115, store=365.625) before normal moving and eating
-->4-Sheep (y=76, x=116, store=375.625) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=83, x=63, store=388.75) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=83, x=63, store=388.75). Will move normally and eat
-->5-Sheep (y=83, x=63, store=388.75) before normal moving and eating
-->5-Sheep (y=82, x=64, store=398.75) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=92, x=74, store=150) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=92, x=74, store=150). Will move normally and eat
-->6-Sheep (y=92, x=74, store=150) before normal moving and eating
-->6-Sheep (y=93, x=73, store=160) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=82, x=125, store=450) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=82, x=125, store=450). Will move normally and eat
-->7-Sheep (y=82, x=125, store=450) before normal moving and eating
-->7-Sheep (y=83, x=124, store=460) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=236, x=33, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=236, x=33, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=236, x=33, store=100) before normal moving
-->else1 ends: 0-Wolf (y=237, x=34, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=117, x=266, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=117, x=266, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=117, x=266, store=300) before normal moving
-->else1 ends: 1-Wolf (y=116, x=267, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=217, x=121, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=217, x=121, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=217, x=121, store=200) before normal moving
-->else1 ends: 2-Wolf (y=218, x=122, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=51, x=0, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=51, x=0, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=51, x=0, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=50, x=1, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=49, x=1, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=49, x=1, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=49, x=1, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=48, x=2, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=49, x=7, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=49, x=7, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=49, x=7, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=48, x=6, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=49, x=2, store=836.0) --------
--> 6-Wolf has >Min_energy(500) store (y=49, x=2, store=836.0) and 0.25 <= random.random() < 0.5. Tries to find food (sheep).
---> 6-Wolf looping with 0-Sheep
---> 6-Wolf looping with 1-Sheep
---> 6-Wolf looping with 2-Sheep
---> 6-Wolf looping with 3-Sheep
---> 6-Wolf looping with 4-Sheep
---> 6-Wolf looping with 5-Sheep
---> 6-Wolf looping with 6-Sheep
---> 6-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 6-Wolf (y=49, x=2, store=836.0) before normal moving
-->else1 ends: 6-Wolf (y=48, x=3, store=836.0) after normal moving
....el1___________ 6-Wolf moved normally___________
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 70 ************

-> ------------ 0-Sheep initialised with (y=80, x=62, store=531.875) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=80, x=62, store=531.875). Will move normally and eat
-->0-Sheep (y=80, x=62, store=531.875) before normal moving and eating
-->0-Sheep (y=81, x=63, store=541.875) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=75, x=112, store=519.0625) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=75, x=112, store=519.0625). Will move normally and eat
-->1-Sheep (y=75, x=112, store=519.0625) before normal moving and eating
-->1-Sheep (y=76, x=113, store=529.0625) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=83, x=59, store=541.875) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=83, x=59, store=541.875). Will move normally and eat
-->2-Sheep (y=83, x=59, store=541.875) before normal moving and eating
-->2-Sheep (y=82, x=58, store=551.875) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=79, x=120, store=529.0625) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=79, x=120, store=529.0625). Will move normally and eat
-->3-Sheep (y=79, x=120, store=529.0625) before normal moving and eating
-->3-Sheep (y=80, x=121, store=539.0625) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=76, x=116, store=375.625) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=76, x=116, store=375.625). Will move normally and eat
-->4-Sheep (y=76, x=116, store=375.625) before normal moving and eating
-->4-Sheep (y=75, x=115, store=385.625) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=82, x=64, store=398.75) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=82, x=64, store=398.75). Will move normally and eat
-->5-Sheep (y=82, x=64, store=398.75) before normal moving and eating
-->5-Sheep (y=81, x=65, store=408.75) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=93, x=73, store=160) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=93, x=73, store=160). Will move normally and eat
-->6-Sheep (y=93, x=73, store=160) before normal moving and eating
-->6-Sheep (y=92, x=74, store=170) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=83, x=124, store=460) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=83, x=124, store=460). Will move normally and eat
-->7-Sheep (y=83, x=124, store=460) before normal moving and eating
-->7-Sheep (y=82, x=123, store=470) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=237, x=34, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=237, x=34, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=237, x=34, store=100) before normal moving
-->else1 ends: 0-Wolf (y=238, x=33, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=116, x=267, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=116, x=267, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=116, x=267, store=300) before normal moving
-->else1 ends: 1-Wolf (y=117, x=266, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=218, x=122, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=218, x=122, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=218, x=122, store=200) before normal moving
-->else1 ends: 2-Wolf (y=217, x=121, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=50, x=1, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=50, x=1, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=50, x=1, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=51, x=0, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=48, x=2, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=48, x=2, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=48, x=2, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=47, x=1, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=48, x=6, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=48, x=6, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=48, x=6, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=47, x=7, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=48, x=3, store=836.0) --------
--> 6-Wolf has >Min_energy(500) store (y=48, x=3, store=836.0) and 0.25 <= random.random() < 0.5. Tries to find food (sheep).
---> 6-Wolf looping with 0-Sheep
---> 6-Wolf looping with 1-Sheep
---> 6-Wolf looping with 2-Sheep
---> 6-Wolf looping with 3-Sheep
---> 6-Wolf looping with 4-Sheep
---> 6-Wolf looping with 5-Sheep
---> 6-Wolf looping with 6-Sheep
---> 6-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 6-Wolf (y=48, x=3, store=836.0) before normal moving
-->else1 ends: 6-Wolf (y=47, x=2, store=836.0) after normal moving
....el1___________ 6-Wolf moved normally___________
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 71 ************

-> ------------ 0-Sheep initialised with (y=81, x=63, store=541.875) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=81, x=63, store=541.875). Will move normally and eat
-->0-Sheep (y=81, x=63, store=541.875) before normal moving and eating
-->0-Sheep (y=82, x=62, store=551.875) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=76, x=113, store=529.0625) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=76, x=113, store=529.0625). Will move normally and eat
-->1-Sheep (y=76, x=113, store=529.0625) before normal moving and eating
-->1-Sheep (y=75, x=112, store=539.0625) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=82, x=58, store=551.875) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=82, x=58, store=551.875). Will move normally and eat
-->2-Sheep (y=82, x=58, store=551.875) before normal moving and eating
-->2-Sheep (y=83, x=59, store=561.875) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=80, x=121, store=539.0625) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=80, x=121, store=539.0625). Will move normally and eat
-->3-Sheep (y=80, x=121, store=539.0625) before normal moving and eating
-->3-Sheep (y=79, x=122, store=549.0625) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=75, x=115, store=385.625) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=75, x=115, store=385.625). Will move normally and eat
-->4-Sheep (y=75, x=115, store=385.625) before normal moving and eating
-->4-Sheep (y=76, x=116, store=395.625) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=81, x=65, store=408.75) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=81, x=65, store=408.75). Will move normally and eat
-->5-Sheep (y=81, x=65, store=408.75) before normal moving and eating
-->5-Sheep (y=80, x=66, store=418.75) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=92, x=74, store=170) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=92, x=74, store=170). Will move normally and eat
-->6-Sheep (y=92, x=74, store=170) before normal moving and eating
-->6-Sheep (y=91, x=75, store=180) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=82, x=123, store=470) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=82, x=123, store=470). Will move normally and eat
-->7-Sheep (y=82, x=123, store=470) before normal moving and eating
-->7-Sheep (y=81, x=122, store=480) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=238, x=33, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=238, x=33, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=238, x=33, store=100) before normal moving
-->else1 ends: 0-Wolf (y=237, x=34, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=117, x=266, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=117, x=266, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=117, x=266, store=300) before normal moving
-->else1 ends: 1-Wolf (y=116, x=265, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=217, x=121, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=217, x=121, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=217, x=121, store=200) before normal moving
-->else1 ends: 2-Wolf (y=218, x=122, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=51, x=0, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=51, x=0, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=51, x=0, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=50, x=0, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=47, x=1, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=47, x=1, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=47, x=1, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=48, x=0, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=47, x=7, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=47, x=7, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=47, x=7, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=46, x=6, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=47, x=2, store=836.0) --------
--> 6-Wolf has > 500 store (y=47, x=2, store=836.0) and Random >= 0.5. so will try to find CW to move closer or breed/fight if within AD(5).
-> No CW found. although store >500 and p>=0.5!
--->else2 begins: 6-Wolf (y=47, x=2, store=836.0) before normal moving.
--->else2 begins: 6-Wolf (y=46, x=3, store=836.0) after normal moving.
.... el2 _______  6-Wolf moved normally _______ 
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 72 ************

-> ------------ 0-Sheep initialised with (y=82, x=62, store=551.875) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=82, x=62, store=551.875). Will move normally and eat
-->0-Sheep (y=82, x=62, store=551.875) before normal moving and eating
-->0-Sheep (y=83, x=63, store=561.875) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=75, x=112, store=539.0625) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=75, x=112, store=539.0625). Will move normally and eat
-->1-Sheep (y=75, x=112, store=539.0625) before normal moving and eating
-->1-Sheep (y=74, x=113, store=549.0625) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=83, x=59, store=561.875) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=83, x=59, store=561.875). Will move normally and eat
-->2-Sheep (y=83, x=59, store=561.875) before normal moving and eating
-->2-Sheep (y=84, x=58, store=571.875) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=79, x=122, store=549.0625) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=79, x=122, store=549.0625). Will move normally and eat
-->3-Sheep (y=79, x=122, store=549.0625) before normal moving and eating
-->3-Sheep (y=78, x=123, store=559.0625) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=76, x=116, store=395.625) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=76, x=116, store=395.625). Will move normally and eat
-->4-Sheep (y=76, x=116, store=395.625) before normal moving and eating
-->4-Sheep (y=77, x=117, store=405.625) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=80, x=66, store=418.75) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=80, x=66, store=418.75). Will move normally and eat
-->5-Sheep (y=80, x=66, store=418.75) before normal moving and eating
-->5-Sheep (y=79, x=67, store=428.75) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=91, x=75, store=180) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=91, x=75, store=180). Will move normally and eat
-->6-Sheep (y=91, x=75, store=180) before normal moving and eating
-->6-Sheep (y=90, x=76, store=190) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=81, x=122, store=480) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=81, x=122, store=480). Will move normally and eat
-->7-Sheep (y=81, x=122, store=480) before normal moving and eating
-->7-Sheep (y=82, x=121, store=490) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=237, x=34, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=237, x=34, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=237, x=34, store=100) before normal moving
-->else1 ends: 0-Wolf (y=236, x=35, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=116, x=265, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=116, x=265, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=116, x=265, store=300) before normal moving
-->else1 ends: 1-Wolf (y=117, x=264, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=218, x=122, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=218, x=122, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=218, x=122, store=200) before normal moving
-->else1 ends: 2-Wolf (y=217, x=123, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=50, x=0, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=50, x=0, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=50, x=0, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=49, x=1, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=48, x=0, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=48, x=0, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=48, x=0, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=49, x=0, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=46, x=6, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=46, x=6, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=46, x=6, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=45, x=5, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=46, x=3, store=836.0) --------
--> 6-Wolf has > 500 store (y=46, x=3, store=836.0) and Random >= 0.5. so will try to find CW to move closer or breed/fight if within AD(5).
-> No CW found. although store >500 and p>=0.5!
--->else2 begins: 6-Wolf (y=46, x=3, store=836.0) before normal moving.
--->else2 begins: 6-Wolf (y=45, x=2, store=836.0) after normal moving.
.... el2 _______  6-Wolf moved normally _______ 
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 73 ************

-> ------------ 0-Sheep initialised with (y=83, x=63, store=561.875) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=83, x=63, store=561.875). Will move normally and eat
-->0-Sheep (y=83, x=63, store=561.875) before normal moving and eating
-->0-Sheep (y=82, x=64, store=571.875) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=74, x=113, store=549.0625) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=74, x=113, store=549.0625). Will move normally and eat
-->1-Sheep (y=74, x=113, store=549.0625) before normal moving and eating
-->1-Sheep (y=75, x=114, store=559.0625) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=84, x=58, store=571.875) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=84, x=58, store=571.875). Will move normally and eat
-->2-Sheep (y=84, x=58, store=571.875) before normal moving and eating
-->2-Sheep (y=83, x=59, store=581.875) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=78, x=123, store=559.0625) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=78, x=123, store=559.0625). Will move normally and eat
-->3-Sheep (y=78, x=123, store=559.0625) before normal moving and eating
-->3-Sheep (y=79, x=124, store=569.0625) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=77, x=117, store=405.625) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=77, x=117, store=405.625). Will move normally and eat
-->4-Sheep (y=77, x=117, store=405.625) before normal moving and eating
-->4-Sheep (y=76, x=118, store=415.625) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=79, x=67, store=428.75) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=79, x=67, store=428.75). Will move normally and eat
-->5-Sheep (y=79, x=67, store=428.75) before normal moving and eating
-->5-Sheep (y=80, x=66, store=438.75) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=90, x=76, store=190) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=90, x=76, store=190). Will move normally and eat
-->6-Sheep (y=90, x=76, store=190) before normal moving and eating
-->6-Sheep (y=91, x=75, store=200) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=82, x=121, store=490) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=82, x=121, store=490). Will move normally and eat
-->7-Sheep (y=82, x=121, store=490) before normal moving and eating
-->7-Sheep (y=83, x=120, store=500) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=236, x=35, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=236, x=35, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=236, x=35, store=100) before normal moving
-->else1 ends: 0-Wolf (y=237, x=34, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=117, x=264, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=117, x=264, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=117, x=264, store=300) before normal moving
-->else1 ends: 1-Wolf (y=118, x=263, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=217, x=123, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=217, x=123, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=217, x=123, store=200) before normal moving
-->else1 ends: 2-Wolf (y=216, x=122, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=49, x=1, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=49, x=1, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=49, x=1, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=48, x=0, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=49, x=0, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=49, x=0, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=49, x=0, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=48, x=0, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=45, x=5, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=45, x=5, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=45, x=5, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=44, x=6, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=45, x=2, store=836.0) --------
--> if and elif not satisfied
--> 6-Wolf has > Min_energy(500) store (y=45, x=2, store=836.0) but Random < bf_e/2(0.25). So will move normally.
--->else3 begins: 6-Wolf (y=45, x=2, store=836.0) before normal moving.
--->else3 begins: 6-Wolf (y=44, x=1, store=836.0) after normal moving.
....e3_______ 6-Wolf moved normally_______
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 74 ************

-> ------------ 0-Sheep initialised with (y=82, x=64, store=571.875) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=82, x=64, store=571.875). Will move normally and eat
-->0-Sheep (y=82, x=64, store=571.875) before normal moving and eating
-->0-Sheep (y=81, x=65, store=581.875) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=75, x=114, store=559.0625) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=75, x=114, store=559.0625). Will move normally and eat
-->1-Sheep (y=75, x=114, store=559.0625) before normal moving and eating
-->1-Sheep (y=74, x=115, store=569.0625) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=83, x=59, store=581.875) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=83, x=59, store=581.875). Will move normally and eat
-->2-Sheep (y=83, x=59, store=581.875) before normal moving and eating
-->2-Sheep (y=82, x=60, store=591.875) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=79, x=124, store=569.0625) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=79, x=124, store=569.0625). Will move normally and eat
-->3-Sheep (y=79, x=124, store=569.0625) before normal moving and eating
-->3-Sheep (y=78, x=123, store=579.0625) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=76, x=118, store=415.625) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=76, x=118, store=415.625). Will move normally and eat
-->4-Sheep (y=76, x=118, store=415.625) before normal moving and eating
-->4-Sheep (y=75, x=119, store=425.625) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=80, x=66, store=438.75) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=80, x=66, store=438.75). Will move normally and eat
-->5-Sheep (y=80, x=66, store=438.75) before normal moving and eating
-->5-Sheep (y=79, x=67, store=448.75) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=91, x=75, store=200) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=91, x=75, store=200). Will move normally and eat
-->6-Sheep (y=91, x=75, store=200) before normal moving and eating
-->6-Sheep (y=92, x=74, store=210) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=83, x=120, store=500) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=83, x=120, store=500). Will move normally and eat
-->7-Sheep (y=83, x=120, store=500) before normal moving and eating
-->7-Sheep (y=84, x=121, store=510) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=237, x=34, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=237, x=34, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=237, x=34, store=100) before normal moving
-->else1 ends: 0-Wolf (y=238, x=33, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=118, x=263, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=118, x=263, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=118, x=263, store=300) before normal moving
-->else1 ends: 1-Wolf (y=119, x=264, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=216, x=122, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=216, x=122, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=216, x=122, store=200) before normal moving
-->else1 ends: 2-Wolf (y=215, x=121, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=48, x=0, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=48, x=0, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=48, x=0, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=49, x=0, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=48, x=0, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=48, x=0, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=48, x=0, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=47, x=1, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=44, x=6, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=44, x=6, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=44, x=6, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=45, x=7, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=44, x=1, store=836.0) --------
--> if and elif not satisfied
--> 6-Wolf has > Min_energy(500) store (y=44, x=1, store=836.0) but Random < bf_e/2(0.25). So will move normally.
--->else3 begins: 6-Wolf (y=44, x=1, store=836.0) before normal moving.
--->else3 begins: 6-Wolf (y=43, x=0, store=836.0) after normal moving.
....e3_______ 6-Wolf moved normally_______
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 75 ************

-> ------------ 0-Sheep initialised with (y=81, x=65, store=581.875) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=81, x=65, store=581.875). Will move normally and eat
-->0-Sheep (y=81, x=65, store=581.875) before normal moving and eating
-->0-Sheep (y=82, x=64, store=591.875) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=74, x=115, store=569.0625) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=74, x=115, store=569.0625). Will move normally and eat
-->1-Sheep (y=74, x=115, store=569.0625) before normal moving and eating
-->1-Sheep (y=73, x=114, store=579.0625) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=82, x=60, store=591.875) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=82, x=60, store=591.875). Will move normally and eat
-->2-Sheep (y=82, x=60, store=591.875) before normal moving and eating
-->2-Sheep (y=83, x=59, store=601.875) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=78, x=123, store=579.0625) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=78, x=123, store=579.0625). Will move normally and eat
-->3-Sheep (y=78, x=123, store=579.0625) before normal moving and eating
-->3-Sheep (y=79, x=124, store=589.0625) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=75, x=119, store=425.625) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=75, x=119, store=425.625). Will move normally and eat
-->4-Sheep (y=75, x=119, store=425.625) before normal moving and eating
-->4-Sheep (y=76, x=118, store=435.625) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=79, x=67, store=448.75) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=79, x=67, store=448.75). Will move normally and eat
-->5-Sheep (y=79, x=67, store=448.75) before normal moving and eating
-->5-Sheep (y=80, x=66, store=458.75) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=92, x=74, store=210) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=92, x=74, store=210). Will move normally and eat
-->6-Sheep (y=92, x=74, store=210) before normal moving and eating
-->6-Sheep (y=93, x=73, store=220) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=84, x=121, store=510) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=84, x=121, store=510). Will move normally and eat
-->7-Sheep (y=84, x=121, store=510) before normal moving and eating
-->7-Sheep (y=83, x=122, store=520) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=238, x=33, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=238, x=33, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=238, x=33, store=100) before normal moving
-->else1 ends: 0-Wolf (y=239, x=32, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=119, x=264, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=119, x=264, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=119, x=264, store=300) before normal moving
-->else1 ends: 1-Wolf (y=118, x=263, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=215, x=121, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=215, x=121, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=215, x=121, store=200) before normal moving
-->else1 ends: 2-Wolf (y=216, x=120, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=49, x=0, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=49, x=0, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=49, x=0, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=50, x=1, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=47, x=1, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=47, x=1, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=47, x=1, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=46, x=2, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=45, x=7, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=45, x=7, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=45, x=7, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=46, x=6, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=43, x=0, store=836.0) --------
--> 6-Wolf has > 500 store (y=43, x=0, store=836.0) and Random >= 0.5. so will try to find CW to move closer or breed/fight if within AD(5).
-> No CW found. although store >500 and p>=0.5!
--->else2 begins: 6-Wolf (y=43, x=0, store=836.0) before normal moving.
--->else2 begins: 6-Wolf (y=42, x=1, store=836.0) after normal moving.
.... el2 _______  6-Wolf moved normally _______ 
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 76 ************

-> ------------ 0-Sheep initialised with (y=82, x=64, store=591.875) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=82, x=64, store=591.875). Will move normally and eat
-->0-Sheep (y=82, x=64, store=591.875) before normal moving and eating
-->0-Sheep (y=83, x=63, store=601.875) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=73, x=114, store=579.0625) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=73, x=114, store=579.0625). Will move normally and eat
-->1-Sheep (y=73, x=114, store=579.0625) before normal moving and eating
-->1-Sheep (y=74, x=113, store=589.0625) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=83, x=59, store=601.875) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store > Min_ernergy(600) (y=83, x=59, store=601.875).
--> 2-Sheep looping with 0-Sheep.
--> 2-Sheep looping with 1-Sheep.
--> 2-Sheep looping with 2-Sheep.
----> ---- (AD < D < MD).
----> Min distance=7.615773105863909 for 2-Sheep (y=83, x=59, store=601.875) with 2-Sheep (y=80, x=66, store=458.75).
--> 2-Sheep looping with 3-Sheep.
--> 2-Sheep looping with 4-Sheep.
->CS Found!
-> 2-Sheep (y=83, x=59, store=601.875) before moving closer (while eating) to CS-Sheep: (y=80, x=66, store=458.75).
-> 2-Wolf (y=81, x=62, store=611.875) after moving closer (while eating) to CS-Sheep: (y=80, x=66, store=458.75).
___________ 2-Sheep moved closer CS___________


-> ------------ 3-Sheep initialised with (y=79, x=124, store=589.0625) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=79, x=124, store=589.0625). Will move normally and eat
-->3-Sheep (y=79, x=124, store=589.0625) before normal moving and eating
-->3-Sheep (y=80, x=123, store=599.0625) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=76, x=118, store=435.625) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=76, x=118, store=435.625). Will move normally and eat
-->4-Sheep (y=76, x=118, store=435.625) before normal moving and eating
-->4-Sheep (y=75, x=119, store=445.625) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=80, x=66, store=458.75) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=80, x=66, store=458.75). Will move normally and eat
-->5-Sheep (y=80, x=66, store=458.75) before normal moving and eating
-->5-Sheep (y=79, x=65, store=468.75) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=93, x=73, store=220) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=93, x=73, store=220). Will move normally and eat
-->6-Sheep (y=93, x=73, store=220) before normal moving and eating
-->6-Sheep (y=94, x=74, store=230) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=83, x=122, store=520) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=83, x=122, store=520). Will move normally and eat
-->7-Sheep (y=83, x=122, store=520) before normal moving and eating
-->7-Sheep (y=82, x=121, store=530) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=239, x=32, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=239, x=32, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=239, x=32, store=100) before normal moving
-->else1 ends: 0-Wolf (y=240, x=33, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=118, x=263, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=118, x=263, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=118, x=263, store=300) before normal moving
-->else1 ends: 1-Wolf (y=117, x=262, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=216, x=120, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=216, x=120, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=216, x=120, store=200) before normal moving
-->else1 ends: 2-Wolf (y=217, x=119, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=50, x=1, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=50, x=1, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=50, x=1, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=51, x=0, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=46, x=2, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=46, x=2, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=46, x=2, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=45, x=1, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=46, x=6, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=46, x=6, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=46, x=6, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=47, x=5, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=42, x=1, store=836.0) --------
--> 6-Wolf has >Min_energy(500) store (y=42, x=1, store=836.0) and 0.25 <= random.random() < 0.5. Tries to find food (sheep).
---> 6-Wolf looping with 0-Sheep
---> 6-Wolf looping with 1-Sheep
---> 6-Wolf looping with 2-Sheep
---> 6-Wolf looping with 3-Sheep
---> 6-Wolf looping with 4-Sheep
---> 6-Wolf looping with 5-Sheep
---> 6-Wolf looping with 6-Sheep
---> 6-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 6-Wolf (y=42, x=1, store=836.0) before normal moving
-->else1 ends: 6-Wolf (y=41, x=0, store=836.0) after normal moving
....el1___________ 6-Wolf moved normally___________
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 77 ************

-> ------------ 0-Sheep initialised with (y=83, x=63, store=601.875) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store > Min_ernergy(600) (y=83, x=63, store=601.875).
--> 0-Sheep looping with 0-Sheep.
--> 0-Sheep looping with 1-Sheep.
----> D <=AD. Sheep Breeding/Sharing proximity of 2.23606797749979(<=5) entered by CS 0-Sheep (y=83, x=63, store=601.875) with CS 1-Sheep (y=81, x=62, store=611.875).
----->0-Sheep (y=83, x=63, store=601.875) and CS 1-Sheep (y=81, x=62, store=611.875 have > Min_energy (600) store. So they will try breeding if p>0.5
------>1.B Random <0.5. So the breeding will fail.
------> 0-Sheep (y=83, x=63, store=601.875) before failed breeding with CS 1-Sheep (y=81, x=62, store=611.875)
------> Failed Sheep Breeding = True
------> 0-Sheep (y=83, x=63, store=303.4375) after failed breeding with CS 1-Sheep (y=81, x=62, store=303.4375).
_____________ 0-Sheep Fail Mated with CS 1-Sheep ____________
_______ Breeding=False, Failed breeding=True, Share=False for 0-Sheep __________

-> ------------ 1-Sheep initialised with (y=74, x=113, store=589.0625) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=74, x=113, store=589.0625). Will move normally and eat
-->1-Sheep (y=74, x=113, store=589.0625) before normal moving and eating
-->1-Sheep (y=73, x=114, store=599.0625) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=81, x=62, store=303.4375) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=81, x=62, store=303.4375). Will move normally and eat
-->2-Sheep (y=81, x=62, store=303.4375) before normal moving and eating
-->2-Sheep (y=80, x=63, store=313.4375) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=80, x=123, store=599.0625) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=80, x=123, store=599.0625). Will move normally and eat
-->3-Sheep (y=80, x=123, store=599.0625) before normal moving and eating
-->3-Sheep (y=81, x=122, store=609.0625) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=75, x=119, store=445.625) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=75, x=119, store=445.625). Will move normally and eat
-->4-Sheep (y=75, x=119, store=445.625) before normal moving and eating
-->4-Sheep (y=76, x=120, store=455.625) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=79, x=65, store=468.75) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=79, x=65, store=468.75). Will move normally and eat
-->5-Sheep (y=79, x=65, store=468.75) before normal moving and eating
-->5-Sheep (y=78, x=64, store=478.75) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=94, x=74, store=230) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=94, x=74, store=230). Will move normally and eat
-->6-Sheep (y=94, x=74, store=230) before normal moving and eating
-->6-Sheep (y=93, x=75, store=240) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=82, x=121, store=530) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=82, x=121, store=530). Will move normally and eat
-->7-Sheep (y=82, x=121, store=530) before normal moving and eating
-->7-Sheep (y=83, x=120, store=540) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=240, x=33, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=240, x=33, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=240, x=33, store=100) before normal moving
-->else1 ends: 0-Wolf (y=239, x=34, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=117, x=262, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=117, x=262, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=117, x=262, store=300) before normal moving
-->else1 ends: 1-Wolf (y=116, x=261, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=217, x=119, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=217, x=119, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=217, x=119, store=200) before normal moving
-->else1 ends: 2-Wolf (y=216, x=120, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=51, x=0, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=51, x=0, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=51, x=0, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=52, x=1, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=45, x=1, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=45, x=1, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=45, x=1, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=44, x=2, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=47, x=5, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=47, x=5, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=47, x=5, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=48, x=4, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=41, x=0, store=836.0) --------
--> 6-Wolf has > 500 store (y=41, x=0, store=836.0) and Random >= 0.5. so will try to find CW to move closer or breed/fight if within AD(5).
-> No CW found. although store >500 and p>=0.5!
--->else2 begins: 6-Wolf (y=41, x=0, store=836.0) before normal moving.
--->else2 begins: 6-Wolf (y=40, x=0, store=836.0) after normal moving.
.... el2 _______  6-Wolf moved normally _______ 
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 78 ************

-> ------------ 0-Sheep initialised with (y=83, x=63, store=303.4375) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=83, x=63, store=303.4375). Will move normally and eat
-->0-Sheep (y=83, x=63, store=303.4375) before normal moving and eating
-->0-Sheep (y=82, x=62, store=313.4375) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=73, x=114, store=599.0625) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=73, x=114, store=599.0625). Will move normally and eat
-->1-Sheep (y=73, x=114, store=599.0625) before normal moving and eating
-->1-Sheep (y=72, x=115, store=609.0625) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=80, x=63, store=313.4375) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=80, x=63, store=313.4375). Will move normally and eat
-->2-Sheep (y=80, x=63, store=313.4375) before normal moving and eating
-->2-Sheep (y=81, x=64, store=323.4375) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=81, x=122, store=609.0625) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store > Min_ernergy(600) (y=81, x=122, store=609.0625).
--> 3-Sheep looping with 0-Sheep.
----> ---- (AD < D < MD).
----> Min distance=5.385164807134504 for 3-Sheep (y=81, x=122, store=609.0625) with 0-Sheep (y=76, x=120, store=455.625).
--> 3-Sheep looping with 1-Sheep.
--> 3-Sheep looping with 2-Sheep.
--> 3-Sheep looping with 3-Sheep.
----> D <=AD. Sheep Breeding/Sharing proximity of 2.8284271247461903(<=5) entered by CS 3-Sheep (y=81, x=122, store=609.0625) with CS 3-Sheep (y=83, x=120, store=540).
-----> 3-Sheep (y=81, x=122, store=609.0625) and CS 3-Sheep (y=83, x=120, store=540 will not mate as CS 3-Sheep store <600. They will share resource to become average.
-----> Shared resources = True
-----> 3-Sheep (y=81, x=122, store=574.53125) and CS 3-Sheep (y=83, x=120, store=574.53125) after sharing resources!
_____________ 3-Sheep and CS 3-Sheep shared resources ____________
_______ Breeding=False, Failed breeding=False, Share=True for 3-Sheep __________

-> ------------ 4-Sheep initialised with (y=76, x=120, store=455.625) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=76, x=120, store=455.625). Will move normally and eat
-->4-Sheep (y=76, x=120, store=455.625) before normal moving and eating
-->4-Sheep (y=75, x=119, store=465.625) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=78, x=64, store=478.75) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=78, x=64, store=478.75). Will move normally and eat
-->5-Sheep (y=78, x=64, store=478.75) before normal moving and eating
-->5-Sheep (y=77, x=63, store=488.75) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=93, x=75, store=240) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=93, x=75, store=240). Will move normally and eat
-->6-Sheep (y=93, x=75, store=240) before normal moving and eating
-->6-Sheep (y=94, x=74, store=250) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=83, x=120, store=574.53125) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=83, x=120, store=574.53125). Will move normally and eat
-->7-Sheep (y=83, x=120, store=574.53125) before normal moving and eating
-->7-Sheep (y=82, x=121, store=584.53125) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=239, x=34, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=239, x=34, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=239, x=34, store=100) before normal moving
-->else1 ends: 0-Wolf (y=238, x=35, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=116, x=261, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=116, x=261, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=116, x=261, store=300) before normal moving
-->else1 ends: 1-Wolf (y=115, x=262, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=216, x=120, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=216, x=120, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=216, x=120, store=200) before normal moving
-->else1 ends: 2-Wolf (y=215, x=121, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=52, x=1, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=52, x=1, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=52, x=1, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=53, x=2, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=44, x=2, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=44, x=2, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=44, x=2, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=45, x=3, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=48, x=4, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=48, x=4, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=48, x=4, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=49, x=3, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=40, x=0, store=836.0) --------
--> 6-Wolf has > 500 store (y=40, x=0, store=836.0) and Random >= 0.5. so will try to find CW to move closer or breed/fight if within AD(5).
-> No CW found. although store >500 and p>=0.5!
--->else2 begins: 6-Wolf (y=40, x=0, store=836.0) before normal moving.
--->else2 begins: 6-Wolf (y=41, x=1, store=836.0) after normal moving.
.... el2 _______  6-Wolf moved normally _______ 
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 79 ************

-> ------------ 0-Sheep initialised with (y=82, x=62, store=313.4375) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=82, x=62, store=313.4375). Will move normally and eat
-->0-Sheep (y=82, x=62, store=313.4375) before normal moving and eating
-->0-Sheep (y=83, x=63, store=323.4375) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=72, x=115, store=609.0625) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store > Min_ernergy(600) (y=72, x=115, store=609.0625).
--> 1-Sheep looping with 0-Sheep.
--> 1-Sheep looping with 1-Sheep.
----> ---- (AD < D < MD).
----> Min distance=11.40175425099138 for 1-Sheep (y=72, x=115, store=609.0625) with 1-Sheep (y=81, x=122, store=574.53125).
--> 1-Sheep looping with 2-Sheep.
----> D <=AD. Sheep Breeding/Sharing proximity of 5.0(<=5) entered by CS 1-Sheep (y=72, x=115, store=609.0625) with CS 2-Sheep (y=75, x=119, store=465.625).
-----> 1-Sheep (y=72, x=115, store=609.0625) and CS 2-Sheep (y=75, x=119, store=465.625 will not mate as CS 2-Sheep store <600. They will share resource to become average.
-----> Shared resources = True
-----> 1-Sheep (y=72, x=115, store=537.34375) and CS 2-Sheep (y=75, x=119, store=537.34375) after sharing resources!
_____________ 1-Sheep and CS 2-Sheep shared resources ____________
_______ Breeding=False, Failed breeding=False, Share=True for 1-Sheep __________

-> ------------ 2-Sheep initialised with (y=81, x=64, store=323.4375) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=81, x=64, store=323.4375). Will move normally and eat
-->2-Sheep (y=81, x=64, store=323.4375) before normal moving and eating
-->2-Sheep (y=82, x=65, store=333.4375) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=81, x=122, store=574.53125) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=81, x=122, store=574.53125). Will move normally and eat
-->3-Sheep (y=81, x=122, store=574.53125) before normal moving and eating
-->3-Sheep (y=82, x=121, store=584.53125) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=75, x=119, store=537.34375) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=75, x=119, store=537.34375). Will move normally and eat
-->4-Sheep (y=75, x=119, store=537.34375) before normal moving and eating
-->4-Sheep (y=76, x=118, store=547.34375) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=77, x=63, store=488.75) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=77, x=63, store=488.75). Will move normally and eat
-->5-Sheep (y=77, x=63, store=488.75) before normal moving and eating
-->5-Sheep (y=76, x=64, store=498.75) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=94, x=74, store=250) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=94, x=74, store=250). Will move normally and eat
-->6-Sheep (y=94, x=74, store=250) before normal moving and eating
-->6-Sheep (y=93, x=73, store=260) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=82, x=121, store=584.53125) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=82, x=121, store=584.53125). Will move normally and eat
-->7-Sheep (y=82, x=121, store=584.53125) before normal moving and eating
-->7-Sheep (y=81, x=122, store=594.53125) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=238, x=35, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=238, x=35, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=238, x=35, store=100) before normal moving
-->else1 ends: 0-Wolf (y=237, x=36, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=115, x=262, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=115, x=262, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=115, x=262, store=300) before normal moving
-->else1 ends: 1-Wolf (y=114, x=263, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=215, x=121, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=215, x=121, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=215, x=121, store=200) before normal moving
-->else1 ends: 2-Wolf (y=216, x=122, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=53, x=2, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=53, x=2, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=53, x=2, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=52, x=1, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=45, x=3, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=45, x=3, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=45, x=3, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=46, x=2, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=49, x=3, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=49, x=3, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=49, x=3, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=50, x=4, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=41, x=1, store=836.0) --------
--> 6-Wolf has >Min_energy(500) store (y=41, x=1, store=836.0) and 0.25 <= random.random() < 0.5. Tries to find food (sheep).
---> 6-Wolf looping with 0-Sheep
---> 6-Wolf looping with 1-Sheep
---> 6-Wolf looping with 2-Sheep
---> 6-Wolf looping with 3-Sheep
---> 6-Wolf looping with 4-Sheep
---> 6-Wolf looping with 5-Sheep
---> 6-Wolf looping with 6-Sheep
---> 6-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 6-Wolf (y=41, x=1, store=836.0) before normal moving
-->else1 ends: 6-Wolf (y=40, x=2, store=836.0) after normal moving
....el1___________ 6-Wolf moved normally___________
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 80 ************

-> ------------ 0-Sheep initialised with (y=83, x=63, store=323.4375) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=83, x=63, store=323.4375). Will move normally and eat
-->0-Sheep (y=83, x=63, store=323.4375) before normal moving and eating
-->0-Sheep (y=84, x=64, store=333.4375) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=72, x=115, store=537.34375) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=72, x=115, store=537.34375). Will move normally and eat
-->1-Sheep (y=72, x=115, store=537.34375) before normal moving and eating
-->1-Sheep (y=71, x=116, store=547.34375) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=82, x=65, store=333.4375) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=82, x=65, store=333.4375). Will move normally and eat
-->2-Sheep (y=82, x=65, store=333.4375) before normal moving and eating
-->2-Sheep (y=81, x=66, store=343.4375) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=82, x=121, store=584.53125) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=82, x=121, store=584.53125). Will move normally and eat
-->3-Sheep (y=82, x=121, store=584.53125) before normal moving and eating
-->3-Sheep (y=83, x=120, store=594.53125) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=76, x=118, store=547.34375) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=76, x=118, store=547.34375). Will move normally and eat
-->4-Sheep (y=76, x=118, store=547.34375) before normal moving and eating
-->4-Sheep (y=77, x=117, store=557.34375) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=76, x=64, store=498.75) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=76, x=64, store=498.75). Will move normally and eat
-->5-Sheep (y=76, x=64, store=498.75) before normal moving and eating
-->5-Sheep (y=77, x=65, store=508.75) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=93, x=73, store=260) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=93, x=73, store=260). Will move normally and eat
-->6-Sheep (y=93, x=73, store=260) before normal moving and eating
-->6-Sheep (y=94, x=72, store=270) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=81, x=122, store=594.53125) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=81, x=122, store=594.53125). Will move normally and eat
-->7-Sheep (y=81, x=122, store=594.53125) before normal moving and eating
-->7-Sheep (y=82, x=121, store=604.53125) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=237, x=36, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=237, x=36, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=237, x=36, store=100) before normal moving
-->else1 ends: 0-Wolf (y=238, x=37, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=114, x=263, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=114, x=263, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=114, x=263, store=300) before normal moving
-->else1 ends: 1-Wolf (y=115, x=264, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=216, x=122, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=216, x=122, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=216, x=122, store=200) before normal moving
-->else1 ends: 2-Wolf (y=215, x=123, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=52, x=1, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=52, x=1, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=52, x=1, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=53, x=0, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=46, x=2, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=46, x=2, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=46, x=2, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=45, x=1, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=50, x=4, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=50, x=4, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=50, x=4, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=51, x=5, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=40, x=2, store=836.0) --------
--> 6-Wolf has > 500 store (y=40, x=2, store=836.0) and Random >= 0.5. so will try to find CW to move closer or breed/fight if within AD(5).
-> No CW found. although store >500 and p>=0.5!
--->else2 begins: 6-Wolf (y=40, x=2, store=836.0) before normal moving.
--->else2 begins: 6-Wolf (y=41, x=3, store=836.0) after normal moving.
.... el2 _______  6-Wolf moved normally _______ 
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 81 ************

-> ------------ 0-Sheep initialised with (y=84, x=64, store=333.4375) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=84, x=64, store=333.4375). Will move normally and eat
-->0-Sheep (y=84, x=64, store=333.4375) before normal moving and eating
-->0-Sheep (y=83, x=63, store=343.4375) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=71, x=116, store=547.34375) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=71, x=116, store=547.34375). Will move normally and eat
-->1-Sheep (y=71, x=116, store=547.34375) before normal moving and eating
-->1-Sheep (y=70, x=117, store=557.34375) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=81, x=66, store=343.4375) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=81, x=66, store=343.4375). Will move normally and eat
-->2-Sheep (y=81, x=66, store=343.4375) before normal moving and eating
-->2-Sheep (y=80, x=65, store=353.4375) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=83, x=120, store=594.53125) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=83, x=120, store=594.53125). Will move normally and eat
-->3-Sheep (y=83, x=120, store=594.53125) before normal moving and eating
-->3-Sheep (y=82, x=121, store=604.53125) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=77, x=117, store=557.34375) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=77, x=117, store=557.34375). Will move normally and eat
-->4-Sheep (y=77, x=117, store=557.34375) before normal moving and eating
-->4-Sheep (y=78, x=116, store=567.34375) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=77, x=65, store=508.75) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=77, x=65, store=508.75). Will move normally and eat
-->5-Sheep (y=77, x=65, store=508.75) before normal moving and eating
-->5-Sheep (y=78, x=66, store=518.75) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=94, x=72, store=270) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=94, x=72, store=270). Will move normally and eat
-->6-Sheep (y=94, x=72, store=270) before normal moving and eating
-->6-Sheep (y=95, x=73, store=280) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=82, x=121, store=604.53125) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store > Min_ernergy(600) (y=82, x=121, store=604.53125).
-> NO CS Found.
-> 7-Sheep (y=82, x=121, store=604.53125) before normally moving and eating.
-> 7-Sheep (y=83, x=120, store=614.53125) after normally moving and eating.
___e1________ 7-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=238, x=37, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=238, x=37, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=238, x=37, store=100) before normal moving
-->else1 ends: 0-Wolf (y=239, x=38, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=115, x=264, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=115, x=264, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=115, x=264, store=300) before normal moving
-->else1 ends: 1-Wolf (y=114, x=265, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=215, x=123, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=215, x=123, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=215, x=123, store=200) before normal moving
-->else1 ends: 2-Wolf (y=214, x=124, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=53, x=0, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=53, x=0, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=53, x=0, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=54, x=1, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=45, x=1, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=45, x=1, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=45, x=1, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=44, x=0, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=51, x=5, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=51, x=5, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=51, x=5, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=50, x=6, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=41, x=3, store=836.0) --------
--> if and elif not satisfied
--> 6-Wolf has > Min_energy(500) store (y=41, x=3, store=836.0) but Random < bf_e/2(0.25). So will move normally.
--->else3 begins: 6-Wolf (y=41, x=3, store=836.0) before normal moving.
--->else3 begins: 6-Wolf (y=40, x=4, store=836.0) after normal moving.
....e3_______ 6-Wolf moved normally_______
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 82 ************

-> ------------ 0-Sheep initialised with (y=83, x=63, store=343.4375) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=83, x=63, store=343.4375). Will move normally and eat
-->0-Sheep (y=83, x=63, store=343.4375) before normal moving and eating
-->0-Sheep (y=82, x=64, store=353.4375) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=70, x=117, store=557.34375) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=70, x=117, store=557.34375). Will move normally and eat
-->1-Sheep (y=70, x=117, store=557.34375) before normal moving and eating
-->1-Sheep (y=69, x=116, store=567.34375) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=80, x=65, store=353.4375) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=80, x=65, store=353.4375). Will move normally and eat
-->2-Sheep (y=80, x=65, store=353.4375) before normal moving and eating
-->2-Sheep (y=81, x=66, store=363.4375) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=82, x=121, store=604.53125) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store > Min_ernergy(600) (y=82, x=121, store=604.53125).
--> 3-Sheep looping with 0-Sheep.
----> ---- (AD < D < MD).
----> Min distance=6.4031242374328485 for 3-Sheep (y=82, x=121, store=604.53125) with 0-Sheep (y=78, x=116, store=567.34375).
--> 3-Sheep looping with 1-Sheep.
--> 3-Sheep looping with 2-Sheep.
--> 3-Sheep looping with 3-Sheep.
----> D <=AD. Sheep Breeding/Sharing proximity of 1.4142135623730951(<=5) entered by CS 3-Sheep (y=82, x=121, store=604.53125) with CS 3-Sheep (y=83, x=120, store=614.53125).
----->3-Sheep (y=82, x=121, store=604.53125) and CS 3-Sheep (y=83, x=120, store=614.53125 have > Min_energy (600) store. So they will try breeding if p>0.5
------>1.B Random <0.5. So the breeding will fail.
------> 3-Sheep (y=82, x=121, store=604.53125) before failed breeding with CS 3-Sheep (y=83, x=120, store=614.53125)
------> Failed Sheep Breeding = True
------> 3-Sheep (y=82, x=121, store=304.765625) after failed breeding with CS 3-Sheep (y=83, x=120, store=304.765625).
_____________ 3-Sheep Fail Mated with CS 3-Sheep ____________
_______ Breeding=False, Failed breeding=True, Share=False for 3-Sheep __________

-> ------------ 4-Sheep initialised with (y=78, x=116, store=567.34375) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=78, x=116, store=567.34375). Will move normally and eat
-->4-Sheep (y=78, x=116, store=567.34375) before normal moving and eating
-->4-Sheep (y=77, x=117, store=577.34375) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=78, x=66, store=518.75) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=78, x=66, store=518.75). Will move normally and eat
-->5-Sheep (y=78, x=66, store=518.75) before normal moving and eating
-->5-Sheep (y=79, x=67, store=528.75) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=95, x=73, store=280) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=95, x=73, store=280). Will move normally and eat
-->6-Sheep (y=95, x=73, store=280) before normal moving and eating
-->6-Sheep (y=94, x=74, store=290) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=83, x=120, store=304.765625) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=83, x=120, store=304.765625). Will move normally and eat
-->7-Sheep (y=83, x=120, store=304.765625) before normal moving and eating
-->7-Sheep (y=82, x=119, store=314.765625) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=239, x=38, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=239, x=38, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=239, x=38, store=100) before normal moving
-->else1 ends: 0-Wolf (y=238, x=37, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=114, x=265, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=114, x=265, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=114, x=265, store=300) before normal moving
-->else1 ends: 1-Wolf (y=115, x=266, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=214, x=124, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=214, x=124, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=214, x=124, store=200) before normal moving
-->else1 ends: 2-Wolf (y=213, x=123, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=54, x=1, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=54, x=1, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=54, x=1, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=55, x=0, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=44, x=0, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=44, x=0, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=44, x=0, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=43, x=0, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=50, x=6, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=50, x=6, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=50, x=6, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=51, x=5, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=40, x=4, store=836.0) --------
--> 6-Wolf has >Min_energy(500) store (y=40, x=4, store=836.0) and 0.25 <= random.random() < 0.5. Tries to find food (sheep).
---> 6-Wolf looping with 0-Sheep
---> 6-Wolf looping with 1-Sheep
---> 6-Wolf looping with 2-Sheep
---> 6-Wolf looping with 3-Sheep
---> 6-Wolf looping with 4-Sheep
---> 6-Wolf looping with 5-Sheep
---> 6-Wolf looping with 6-Sheep
---> 6-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 6-Wolf (y=40, x=4, store=836.0) before normal moving
-->else1 ends: 6-Wolf (y=41, x=3, store=836.0) after normal moving
....el1___________ 6-Wolf moved normally___________
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 83 ************

-> ------------ 0-Sheep initialised with (y=82, x=64, store=353.4375) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=82, x=64, store=353.4375). Will move normally and eat
-->0-Sheep (y=82, x=64, store=353.4375) before normal moving and eating
-->0-Sheep (y=81, x=63, store=363.4375) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=69, x=116, store=567.34375) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=69, x=116, store=567.34375). Will move normally and eat
-->1-Sheep (y=69, x=116, store=567.34375) before normal moving and eating
-->1-Sheep (y=68, x=117, store=577.34375) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=81, x=66, store=363.4375) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=81, x=66, store=363.4375). Will move normally and eat
-->2-Sheep (y=81, x=66, store=363.4375) before normal moving and eating
-->2-Sheep (y=82, x=67, store=373.4375) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=82, x=121, store=304.765625) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=82, x=121, store=304.765625). Will move normally and eat
-->3-Sheep (y=82, x=121, store=304.765625) before normal moving and eating
-->3-Sheep (y=83, x=122, store=314.765625) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=77, x=117, store=577.34375) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=77, x=117, store=577.34375). Will move normally and eat
-->4-Sheep (y=77, x=117, store=577.34375) before normal moving and eating
-->4-Sheep (y=76, x=118, store=587.34375) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=79, x=67, store=528.75) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=79, x=67, store=528.75). Will move normally and eat
-->5-Sheep (y=79, x=67, store=528.75) before normal moving and eating
-->5-Sheep (y=80, x=68, store=538.75) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=94, x=74, store=290) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=94, x=74, store=290). Will move normally and eat
-->6-Sheep (y=94, x=74, store=290) before normal moving and eating
-->6-Sheep (y=93, x=75, store=300) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=82, x=119, store=314.765625) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=82, x=119, store=314.765625). Will move normally and eat
-->7-Sheep (y=82, x=119, store=314.765625) before normal moving and eating
-->7-Sheep (y=83, x=120, store=324.765625) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=238, x=37, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=238, x=37, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=238, x=37, store=100) before normal moving
-->else1 ends: 0-Wolf (y=239, x=36, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=115, x=266, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=115, x=266, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=115, x=266, store=300) before normal moving
-->else1 ends: 1-Wolf (y=116, x=267, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=213, x=123, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=213, x=123, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=213, x=123, store=200) before normal moving
-->else1 ends: 2-Wolf (y=214, x=122, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=55, x=0, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=55, x=0, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=55, x=0, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=54, x=0, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=43, x=0, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=43, x=0, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=43, x=0, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=44, x=0, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=51, x=5, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=51, x=5, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=51, x=5, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=50, x=6, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=41, x=3, store=836.0) --------
--> 6-Wolf has > 500 store (y=41, x=3, store=836.0) and Random >= 0.5. so will try to find CW to move closer or breed/fight if within AD(5).
-> No CW found. although store >500 and p>=0.5!
--->else2 begins: 6-Wolf (y=41, x=3, store=836.0) before normal moving.
--->else2 begins: 6-Wolf (y=42, x=4, store=836.0) after normal moving.
.... el2 _______  6-Wolf moved normally _______ 
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 84 ************

-> ------------ 0-Sheep initialised with (y=81, x=63, store=363.4375) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=81, x=63, store=363.4375). Will move normally and eat
-->0-Sheep (y=81, x=63, store=363.4375) before normal moving and eating
-->0-Sheep (y=80, x=62, store=373.4375) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=68, x=117, store=577.34375) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=68, x=117, store=577.34375). Will move normally and eat
-->1-Sheep (y=68, x=117, store=577.34375) before normal moving and eating
-->1-Sheep (y=67, x=118, store=587.34375) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=82, x=67, store=373.4375) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=82, x=67, store=373.4375). Will move normally and eat
-->2-Sheep (y=82, x=67, store=373.4375) before normal moving and eating
-->2-Sheep (y=83, x=66, store=383.4375) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=83, x=122, store=314.765625) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=83, x=122, store=314.765625). Will move normally and eat
-->3-Sheep (y=83, x=122, store=314.765625) before normal moving and eating
-->3-Sheep (y=84, x=121, store=324.765625) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=76, x=118, store=587.34375) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=76, x=118, store=587.34375). Will move normally and eat
-->4-Sheep (y=76, x=118, store=587.34375) before normal moving and eating
-->4-Sheep (y=75, x=119, store=597.34375) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=80, x=68, store=538.75) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=80, x=68, store=538.75). Will move normally and eat
-->5-Sheep (y=80, x=68, store=538.75) before normal moving and eating
-->5-Sheep (y=81, x=67, store=548.75) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=93, x=75, store=300) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=93, x=75, store=300). Will move normally and eat
-->6-Sheep (y=93, x=75, store=300) before normal moving and eating
-->6-Sheep (y=92, x=76, store=310) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=83, x=120, store=324.765625) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=83, x=120, store=324.765625). Will move normally and eat
-->7-Sheep (y=83, x=120, store=324.765625) before normal moving and eating
-->7-Sheep (y=82, x=121, store=334.765625) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=239, x=36, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=239, x=36, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=239, x=36, store=100) before normal moving
-->else1 ends: 0-Wolf (y=240, x=37, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=116, x=267, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=116, x=267, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=116, x=267, store=300) before normal moving
-->else1 ends: 1-Wolf (y=115, x=268, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=214, x=122, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=214, x=122, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=214, x=122, store=200) before normal moving
-->else1 ends: 2-Wolf (y=215, x=123, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=54, x=0, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=54, x=0, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=54, x=0, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=55, x=1, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=44, x=0, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=44, x=0, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=44, x=0, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=43, x=0, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=50, x=6, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=50, x=6, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=50, x=6, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=51, x=5, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=42, x=4, store=836.0) --------
--> 6-Wolf has > 500 store (y=42, x=4, store=836.0) and Random >= 0.5. so will try to find CW to move closer or breed/fight if within AD(5).
-> No CW found. although store >500 and p>=0.5!
--->else2 begins: 6-Wolf (y=42, x=4, store=836.0) before normal moving.
--->else2 begins: 6-Wolf (y=43, x=3, store=836.0) after normal moving.
.... el2 _______  6-Wolf moved normally _______ 
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 85 ************

-> ------------ 0-Sheep initialised with (y=80, x=62, store=373.4375) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=80, x=62, store=373.4375). Will move normally and eat
-->0-Sheep (y=80, x=62, store=373.4375) before normal moving and eating
-->0-Sheep (y=79, x=61, store=383.4375) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=67, x=118, store=587.34375) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=67, x=118, store=587.34375). Will move normally and eat
-->1-Sheep (y=67, x=118, store=587.34375) before normal moving and eating
-->1-Sheep (y=66, x=117, store=597.34375) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=83, x=66, store=383.4375) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=83, x=66, store=383.4375). Will move normally and eat
-->2-Sheep (y=83, x=66, store=383.4375) before normal moving and eating
-->2-Sheep (y=82, x=67, store=393.4375) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=84, x=121, store=324.765625) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=84, x=121, store=324.765625). Will move normally and eat
-->3-Sheep (y=84, x=121, store=324.765625) before normal moving and eating
-->3-Sheep (y=83, x=120, store=334.765625) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=75, x=119, store=597.34375) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=75, x=119, store=597.34375). Will move normally and eat
-->4-Sheep (y=75, x=119, store=597.34375) before normal moving and eating
-->4-Sheep (y=74, x=120, store=607.34375) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=81, x=67, store=548.75) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=81, x=67, store=548.75). Will move normally and eat
-->5-Sheep (y=81, x=67, store=548.75) before normal moving and eating
-->5-Sheep (y=80, x=66, store=558.75) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=92, x=76, store=310) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=92, x=76, store=310). Will move normally and eat
-->6-Sheep (y=92, x=76, store=310) before normal moving and eating
-->6-Sheep (y=93, x=77, store=320) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=82, x=121, store=334.765625) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=82, x=121, store=334.765625). Will move normally and eat
-->7-Sheep (y=82, x=121, store=334.765625) before normal moving and eating
-->7-Sheep (y=83, x=122, store=344.765625) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=240, x=37, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=240, x=37, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=240, x=37, store=100) before normal moving
-->else1 ends: 0-Wolf (y=241, x=36, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=115, x=268, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=115, x=268, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=115, x=268, store=300) before normal moving
-->else1 ends: 1-Wolf (y=116, x=267, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=215, x=123, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=215, x=123, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=215, x=123, store=200) before normal moving
-->else1 ends: 2-Wolf (y=216, x=122, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=55, x=1, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=55, x=1, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=55, x=1, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=56, x=2, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=43, x=0, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=43, x=0, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=43, x=0, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=44, x=0, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=51, x=5, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=51, x=5, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=51, x=5, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=52, x=4, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=43, x=3, store=836.0) --------
--> 6-Wolf has >Min_energy(500) store (y=43, x=3, store=836.0) and 0.25 <= random.random() < 0.5. Tries to find food (sheep).
---> 6-Wolf looping with 0-Sheep
---> 6-Wolf looping with 1-Sheep
---> 6-Wolf looping with 2-Sheep
---> 6-Wolf looping with 3-Sheep
---> 6-Wolf looping with 4-Sheep
---> 6-Wolf looping with 5-Sheep
---> 6-Wolf looping with 6-Sheep
---> 6-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 6-Wolf (y=43, x=3, store=836.0) before normal moving
-->else1 ends: 6-Wolf (y=42, x=2, store=836.0) after normal moving
....el1___________ 6-Wolf moved normally___________
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 86 ************

-> ------------ 0-Sheep initialised with (y=79, x=61, store=383.4375) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=79, x=61, store=383.4375). Will move normally and eat
-->0-Sheep (y=79, x=61, store=383.4375) before normal moving and eating
-->0-Sheep (y=78, x=62, store=393.4375) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=66, x=117, store=597.34375) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=66, x=117, store=597.34375). Will move normally and eat
-->1-Sheep (y=66, x=117, store=597.34375) before normal moving and eating
-->1-Sheep (y=65, x=118, store=607.34375) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=82, x=67, store=393.4375) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=82, x=67, store=393.4375). Will move normally and eat
-->2-Sheep (y=82, x=67, store=393.4375) before normal moving and eating
-->2-Sheep (y=83, x=66, store=403.4375) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=83, x=120, store=334.765625) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=83, x=120, store=334.765625). Will move normally and eat
-->3-Sheep (y=83, x=120, store=334.765625) before normal moving and eating
-->3-Sheep (y=84, x=121, store=344.765625) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=74, x=120, store=607.34375) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store > Min_ernergy(600) (y=74, x=120, store=607.34375).
--> 4-Sheep looping with 0-Sheep.
--> 4-Sheep looping with 1-Sheep.
--> 4-Sheep looping with 2-Sheep.
----> ---- (AD < D < MD).
----> Min distance=9.219544457292887 for 4-Sheep (y=74, x=120, store=607.34375) with 2-Sheep (y=83, x=122, store=344.765625).
->CS Found!
-> 4-Sheep (y=74, x=120, store=607.34375) before moving closer (while eating) to CS-Sheep: (y=83, x=122, store=344.765625).
-> 4-Wolf (y=78, x=121, store=617.34375) after moving closer (while eating) to CS-Sheep: (y=83, x=122, store=344.765625).
___________ 4-Sheep moved closer CS___________


-> ------------ 5-Sheep initialised with (y=80, x=66, store=558.75) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=80, x=66, store=558.75). Will move normally and eat
-->5-Sheep (y=80, x=66, store=558.75) before normal moving and eating
-->5-Sheep (y=79, x=67, store=568.75) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=93, x=77, store=320) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=93, x=77, store=320). Will move normally and eat
-->6-Sheep (y=93, x=77, store=320) before normal moving and eating
-->6-Sheep (y=92, x=78, store=330) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=83, x=122, store=344.765625) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=83, x=122, store=344.765625). Will move normally and eat
-->7-Sheep (y=83, x=122, store=344.765625) before normal moving and eating
-->7-Sheep (y=82, x=121, store=354.765625) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=241, x=36, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=241, x=36, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=241, x=36, store=100) before normal moving
-->else1 ends: 0-Wolf (y=240, x=37, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=116, x=267, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=116, x=267, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=116, x=267, store=300) before normal moving
-->else1 ends: 1-Wolf (y=117, x=266, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=216, x=122, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=216, x=122, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=216, x=122, store=200) before normal moving
-->else1 ends: 2-Wolf (y=215, x=121, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=56, x=2, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=56, x=2, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=56, x=2, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=55, x=3, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=44, x=0, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=44, x=0, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=44, x=0, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=45, x=0, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=52, x=4, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=52, x=4, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=52, x=4, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=51, x=5, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=42, x=2, store=836.0) --------
--> if and elif not satisfied
--> 6-Wolf has > Min_energy(500) store (y=42, x=2, store=836.0) but Random < bf_e/2(0.25). So will move normally.
--->else3 begins: 6-Wolf (y=42, x=2, store=836.0) before normal moving.
--->else3 begins: 6-Wolf (y=43, x=3, store=836.0) after normal moving.
....e3_______ 6-Wolf moved normally_______
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 87 ************

-> ------------ 0-Sheep initialised with (y=78, x=62, store=393.4375) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=78, x=62, store=393.4375). Will move normally and eat
-->0-Sheep (y=78, x=62, store=393.4375) before normal moving and eating
-->0-Sheep (y=77, x=63, store=403.4375) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=65, x=118, store=607.34375) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store > Min_ernergy(600) (y=65, x=118, store=607.34375).
--> 1-Sheep looping with 0-Sheep.
--> 1-Sheep looping with 1-Sheep.
----> ---- (AD < D < MD).
----> Min distance=19.235384061671343 for 1-Sheep (y=65, x=118, store=607.34375) with 1-Sheep (y=84, x=121, store=344.765625).
--> 1-Sheep looping with 2-Sheep.
----> ---- (AD < D < MD).
----> Min distance=13.341664064126334 for 1-Sheep (y=65, x=118, store=607.34375) with 2-Sheep (y=78, x=121, store=617.34375).
--> 1-Sheep looping with 3-Sheep.
--> 1-Sheep looping with 4-Sheep.
--> 1-Sheep looping with 5-Sheep.
->CS Found!
-> 1-Sheep (y=65, x=118, store=607.34375) before moving closer (while eating) to CS-Sheep: (y=78, x=121, store=617.34375).
-> 1-Wolf (y=71, x=119, store=617.34375) after moving closer (while eating) to CS-Sheep: (y=78, x=121, store=617.34375).
___________ 1-Sheep moved closer CS___________


-> ------------ 2-Sheep initialised with (y=83, x=66, store=403.4375) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=83, x=66, store=403.4375). Will move normally and eat
-->2-Sheep (y=83, x=66, store=403.4375) before normal moving and eating
-->2-Sheep (y=82, x=65, store=413.4375) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=84, x=121, store=344.765625) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=84, x=121, store=344.765625). Will move normally and eat
-->3-Sheep (y=84, x=121, store=344.765625) before normal moving and eating
-->3-Sheep (y=85, x=120, store=354.765625) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=78, x=121, store=617.34375) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store > Min_ernergy(600) (y=78, x=121, store=617.34375).
--> 4-Sheep looping with 0-Sheep.
--> 4-Sheep looping with 1-Sheep.
--> 4-Sheep looping with 2-Sheep.
----> D <=AD. Sheep Breeding/Sharing proximity of 4.0(<=5) entered by CS 4-Sheep (y=78, x=121, store=617.34375) with CS 2-Sheep (y=82, x=121, store=354.765625).
-----> 4-Sheep (y=78, x=121, store=617.34375) and CS 2-Sheep (y=82, x=121, store=354.765625 will not mate as CS 2-Sheep store <600. They will share resource to become average.
-----> Shared resources = True
-----> 4-Sheep (y=78, x=121, store=486.0546875) and CS 2-Sheep (y=82, x=121, store=486.0546875) after sharing resources!
_____________ 4-Sheep and CS 2-Sheep shared resources ____________
_______ Breeding=False, Failed breeding=False, Share=True for 4-Sheep __________

-> ------------ 5-Sheep initialised with (y=79, x=67, store=568.75) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=79, x=67, store=568.75). Will move normally and eat
-->5-Sheep (y=79, x=67, store=568.75) before normal moving and eating
-->5-Sheep (y=80, x=68, store=578.75) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=92, x=78, store=330) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=92, x=78, store=330). Will move normally and eat
-->6-Sheep (y=92, x=78, store=330) before normal moving and eating
-->6-Sheep (y=93, x=79, store=340) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=82, x=121, store=486.0546875) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=82, x=121, store=486.0546875). Will move normally and eat
-->7-Sheep (y=82, x=121, store=486.0546875) before normal moving and eating
-->7-Sheep (y=83, x=122, store=496.0546875) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=240, x=37, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=240, x=37, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=240, x=37, store=100) before normal moving
-->else1 ends: 0-Wolf (y=241, x=36, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=117, x=266, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=117, x=266, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=117, x=266, store=300) before normal moving
-->else1 ends: 1-Wolf (y=116, x=267, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=215, x=121, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=215, x=121, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=215, x=121, store=200) before normal moving
-->else1 ends: 2-Wolf (y=216, x=120, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=55, x=3, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=55, x=3, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=55, x=3, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=56, x=4, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=45, x=0, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=45, x=0, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=45, x=0, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=44, x=1, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=51, x=5, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=51, x=5, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=51, x=5, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=52, x=6, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=43, x=3, store=836.0) --------
--> if and elif not satisfied
--> 6-Wolf has > Min_energy(500) store (y=43, x=3, store=836.0) but Random < bf_e/2(0.25). So will move normally.
--->else3 begins: 6-Wolf (y=43, x=3, store=836.0) before normal moving.
--->else3 begins: 6-Wolf (y=42, x=4, store=836.0) after normal moving.
....e3_______ 6-Wolf moved normally_______
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 88 ************

-> ------------ 0-Sheep initialised with (y=77, x=63, store=403.4375) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=77, x=63, store=403.4375). Will move normally and eat
-->0-Sheep (y=77, x=63, store=403.4375) before normal moving and eating
-->0-Sheep (y=78, x=64, store=413.4375) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=71, x=119, store=617.34375) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store > Min_ernergy(600) (y=71, x=119, store=617.34375).
--> 1-Sheep looping with 0-Sheep.
--> 1-Sheep looping with 1-Sheep.
----> ---- (AD < D < MD).
----> Min distance=14.035668847618199 for 1-Sheep (y=71, x=119, store=617.34375) with 1-Sheep (y=85, x=120, store=354.765625).
--> 1-Sheep looping with 2-Sheep.
----> ---- (AD < D < MD).
----> Min distance=7.280109889280518 for 1-Sheep (y=71, x=119, store=617.34375) with 2-Sheep (y=78, x=121, store=486.0546875).
--> 1-Sheep looping with 3-Sheep.
--> 1-Sheep looping with 4-Sheep.
--> 1-Sheep looping with 5-Sheep.
->CS Found!
-> 1-Sheep (y=71, x=119, store=617.34375) before moving closer (while eating) to CS-Sheep: (y=78, x=121, store=486.0546875).
-> 1-Wolf (y=74, x=120, store=627.34375) after moving closer (while eating) to CS-Sheep: (y=78, x=121, store=486.0546875).
___________ 1-Sheep moved closer CS___________


-> ------------ 2-Sheep initialised with (y=82, x=65, store=413.4375) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=82, x=65, store=413.4375). Will move normally and eat
-->2-Sheep (y=82, x=65, store=413.4375) before normal moving and eating
-->2-Sheep (y=81, x=66, store=423.4375) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=85, x=120, store=354.765625) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=85, x=120, store=354.765625). Will move normally and eat
-->3-Sheep (y=85, x=120, store=354.765625) before normal moving and eating
-->3-Sheep (y=86, x=119, store=364.765625) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=78, x=121, store=486.0546875) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=78, x=121, store=486.0546875). Will move normally and eat
-->4-Sheep (y=78, x=121, store=486.0546875) before normal moving and eating
-->4-Sheep (y=79, x=120, store=496.0546875) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=80, x=68, store=578.75) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=80, x=68, store=578.75). Will move normally and eat
-->5-Sheep (y=80, x=68, store=578.75) before normal moving and eating
-->5-Sheep (y=79, x=69, store=588.75) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=93, x=79, store=340) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=93, x=79, store=340). Will move normally and eat
-->6-Sheep (y=93, x=79, store=340) before normal moving and eating
-->6-Sheep (y=92, x=78, store=350) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=83, x=122, store=496.0546875) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=83, x=122, store=496.0546875). Will move normally and eat
-->7-Sheep (y=83, x=122, store=496.0546875) before normal moving and eating
-->7-Sheep (y=82, x=121, store=506.0546875) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=241, x=36, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=241, x=36, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=241, x=36, store=100) before normal moving
-->else1 ends: 0-Wolf (y=240, x=37, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=116, x=267, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=116, x=267, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=116, x=267, store=300) before normal moving
-->else1 ends: 1-Wolf (y=117, x=268, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=216, x=120, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=216, x=120, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=216, x=120, store=200) before normal moving
-->else1 ends: 2-Wolf (y=217, x=121, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=56, x=4, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=56, x=4, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=56, x=4, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=57, x=3, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=44, x=1, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=44, x=1, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=44, x=1, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=43, x=2, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=52, x=6, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=52, x=6, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=52, x=6, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=51, x=5, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=42, x=4, store=836.0) --------
--> 6-Wolf has > 500 store (y=42, x=4, store=836.0) and Random >= 0.5. so will try to find CW to move closer or breed/fight if within AD(5).
-> No CW found. although store >500 and p>=0.5!
--->else2 begins: 6-Wolf (y=42, x=4, store=836.0) before normal moving.
--->else2 begins: 6-Wolf (y=41, x=5, store=836.0) after normal moving.
.... el2 _______  6-Wolf moved normally _______ 
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 89 ************

-> ------------ 0-Sheep initialised with (y=78, x=64, store=413.4375) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=78, x=64, store=413.4375). Will move normally and eat
-->0-Sheep (y=78, x=64, store=413.4375) before normal moving and eating
-->0-Sheep (y=77, x=65, store=423.4375) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=74, x=120, store=627.34375) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store > Min_ernergy(600) (y=74, x=120, store=627.34375).
--> 1-Sheep looping with 0-Sheep.
--> 1-Sheep looping with 1-Sheep.
----> ---- (AD < D < MD).
----> Min distance=12.041594578792296 for 1-Sheep (y=74, x=120, store=627.34375) with 1-Sheep (y=86, x=119, store=364.765625).
--> 1-Sheep looping with 2-Sheep.
----> D <=AD. Sheep Breeding/Sharing proximity of 5.0(<=5) entered by CS 1-Sheep (y=74, x=120, store=627.34375) with CS 2-Sheep (y=79, x=120, store=496.0546875).
-----> 1-Sheep (y=74, x=120, store=627.34375) and CS 2-Sheep (y=79, x=120, store=496.0546875 will not mate as CS 2-Sheep store <600. They will share resource to become average.
-----> Shared resources = True
-----> 1-Sheep (y=74, x=120, store=561.69921875) and CS 2-Sheep (y=79, x=120, store=561.69921875) after sharing resources!
_____________ 1-Sheep and CS 2-Sheep shared resources ____________
_______ Breeding=False, Failed breeding=False, Share=True for 1-Sheep __________

-> ------------ 2-Sheep initialised with (y=81, x=66, store=423.4375) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=81, x=66, store=423.4375). Will move normally and eat
-->2-Sheep (y=81, x=66, store=423.4375) before normal moving and eating
-->2-Sheep (y=80, x=67, store=433.4375) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=86, x=119, store=364.765625) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=86, x=119, store=364.765625). Will move normally and eat
-->3-Sheep (y=86, x=119, store=364.765625) before normal moving and eating
-->3-Sheep (y=87, x=120, store=374.765625) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=79, x=120, store=561.69921875) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=79, x=120, store=561.69921875). Will move normally and eat
-->4-Sheep (y=79, x=120, store=561.69921875) before normal moving and eating
-->4-Sheep (y=78, x=121, store=571.69921875) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=79, x=69, store=588.75) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=79, x=69, store=588.75). Will move normally and eat
-->5-Sheep (y=79, x=69, store=588.75) before normal moving and eating
-->5-Sheep (y=78, x=68, store=598.75) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=92, x=78, store=350) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=92, x=78, store=350). Will move normally and eat
-->6-Sheep (y=92, x=78, store=350) before normal moving and eating
-->6-Sheep (y=91, x=79, store=360) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=82, x=121, store=506.0546875) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=82, x=121, store=506.0546875). Will move normally and eat
-->7-Sheep (y=82, x=121, store=506.0546875) before normal moving and eating
-->7-Sheep (y=81, x=122, store=516.0546875) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=240, x=37, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=240, x=37, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=240, x=37, store=100) before normal moving
-->else1 ends: 0-Wolf (y=241, x=38, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=117, x=268, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=117, x=268, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=117, x=268, store=300) before normal moving
-->else1 ends: 1-Wolf (y=118, x=267, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=217, x=121, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=217, x=121, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=217, x=121, store=200) before normal moving
-->else1 ends: 2-Wolf (y=216, x=122, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=57, x=3, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=57, x=3, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=57, x=3, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=58, x=4, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=43, x=2, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=43, x=2, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=43, x=2, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=44, x=3, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=51, x=5, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=51, x=5, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=51, x=5, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=50, x=4, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=41, x=5, store=836.0) --------
--> if and elif not satisfied
--> 6-Wolf has > Min_energy(500) store (y=41, x=5, store=836.0) but Random < bf_e/2(0.25). So will move normally.
--->else3 begins: 6-Wolf (y=41, x=5, store=836.0) before normal moving.
--->else3 begins: 6-Wolf (y=40, x=6, store=836.0) after normal moving.
....e3_______ 6-Wolf moved normally_______
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 90 ************

-> ------------ 0-Sheep initialised with (y=77, x=65, store=423.4375) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=77, x=65, store=423.4375). Will move normally and eat
-->0-Sheep (y=77, x=65, store=423.4375) before normal moving and eating
-->0-Sheep (y=76, x=64, store=433.4375) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=74, x=120, store=561.69921875) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=74, x=120, store=561.69921875). Will move normally and eat
-->1-Sheep (y=74, x=120, store=561.69921875) before normal moving and eating
-->1-Sheep (y=75, x=119, store=571.69921875) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=80, x=67, store=433.4375) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=80, x=67, store=433.4375). Will move normally and eat
-->2-Sheep (y=80, x=67, store=433.4375) before normal moving and eating
-->2-Sheep (y=81, x=68, store=443.4375) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=87, x=120, store=374.765625) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=87, x=120, store=374.765625). Will move normally and eat
-->3-Sheep (y=87, x=120, store=374.765625) before normal moving and eating
-->3-Sheep (y=88, x=119, store=384.765625) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=78, x=121, store=571.69921875) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=78, x=121, store=571.69921875). Will move normally and eat
-->4-Sheep (y=78, x=121, store=571.69921875) before normal moving and eating
-->4-Sheep (y=79, x=122, store=581.69921875) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=78, x=68, store=598.75) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=78, x=68, store=598.75). Will move normally and eat
-->5-Sheep (y=78, x=68, store=598.75) before normal moving and eating
-->5-Sheep (y=77, x=67, store=608.75) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=91, x=79, store=360) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=91, x=79, store=360). Will move normally and eat
-->6-Sheep (y=91, x=79, store=360) before normal moving and eating
-->6-Sheep (y=92, x=78, store=370) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=81, x=122, store=516.0546875) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=81, x=122, store=516.0546875). Will move normally and eat
-->7-Sheep (y=81, x=122, store=516.0546875) before normal moving and eating
-->7-Sheep (y=80, x=121, store=526.0546875) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=241, x=38, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=241, x=38, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=241, x=38, store=100) before normal moving
-->else1 ends: 0-Wolf (y=242, x=37, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=118, x=267, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=118, x=267, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=118, x=267, store=300) before normal moving
-->else1 ends: 1-Wolf (y=119, x=266, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=216, x=122, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=216, x=122, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=216, x=122, store=200) before normal moving
-->else1 ends: 2-Wolf (y=217, x=123, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=58, x=4, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=58, x=4, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=58, x=4, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=57, x=5, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=44, x=3, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=44, x=3, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=44, x=3, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=45, x=2, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=50, x=4, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=50, x=4, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=50, x=4, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=51, x=3, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=40, x=6, store=836.0) --------
--> 6-Wolf has >Min_energy(500) store (y=40, x=6, store=836.0) and 0.25 <= random.random() < 0.5. Tries to find food (sheep).
---> 6-Wolf looping with 0-Sheep
---> 6-Wolf looping with 1-Sheep
---> 6-Wolf looping with 2-Sheep
---> 6-Wolf looping with 3-Sheep
---> 6-Wolf looping with 4-Sheep
---> 6-Wolf looping with 5-Sheep
---> 6-Wolf looping with 6-Sheep
---> 6-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 6-Wolf (y=40, x=6, store=836.0) before normal moving
-->else1 ends: 6-Wolf (y=39, x=5, store=836.0) after normal moving
....el1___________ 6-Wolf moved normally___________
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 91 ************

-> ------------ 0-Sheep initialised with (y=76, x=64, store=433.4375) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=76, x=64, store=433.4375). Will move normally and eat
-->0-Sheep (y=76, x=64, store=433.4375) before normal moving and eating
-->0-Sheep (y=77, x=63, store=443.4375) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=75, x=119, store=571.69921875) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=75, x=119, store=571.69921875). Will move normally and eat
-->1-Sheep (y=75, x=119, store=571.69921875) before normal moving and eating
-->1-Sheep (y=76, x=118, store=581.69921875) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=81, x=68, store=443.4375) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=81, x=68, store=443.4375). Will move normally and eat
-->2-Sheep (y=81, x=68, store=443.4375) before normal moving and eating
-->2-Sheep (y=80, x=67, store=453.4375) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=88, x=119, store=384.765625) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=88, x=119, store=384.765625). Will move normally and eat
-->3-Sheep (y=88, x=119, store=384.765625) before normal moving and eating
-->3-Sheep (y=87, x=118, store=394.765625) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=79, x=122, store=581.69921875) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=79, x=122, store=581.69921875). Will move normally and eat
-->4-Sheep (y=79, x=122, store=581.69921875) before normal moving and eating
-->4-Sheep (y=78, x=121, store=591.69921875) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=77, x=67, store=608.75) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store > Min_ernergy(600) (y=77, x=67, store=608.75).
--> 5-Sheep looping with 0-Sheep.
----> ---- (AD < D < MD).
----> Min distance=18.601075237738275 for 5-Sheep (y=77, x=67, store=608.75) with 0-Sheep (y=92, x=78, store=370).
--> 5-Sheep looping with 1-Sheep.
->CS Found!
-> 5-Sheep (y=77, x=67, store=608.75) before moving closer (while eating) to CS-Sheep: (y=92, x=78, store=370).
-> 5-Wolf (y=84, x=72, store=618.75) after moving closer (while eating) to CS-Sheep: (y=92, x=78, store=370).
___________ 5-Sheep moved closer CS___________


-> ------------ 6-Sheep initialised with (y=92, x=78, store=370) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=92, x=78, store=370). Will move normally and eat
-->6-Sheep (y=92, x=78, store=370) before normal moving and eating
-->6-Sheep (y=93, x=79, store=380) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=80, x=121, store=526.0546875) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=80, x=121, store=526.0546875). Will move normally and eat
-->7-Sheep (y=80, x=121, store=526.0546875) before normal moving and eating
-->7-Sheep (y=79, x=122, store=536.0546875) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=242, x=37, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=242, x=37, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=242, x=37, store=100) before normal moving
-->else1 ends: 0-Wolf (y=241, x=36, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=119, x=266, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=119, x=266, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=119, x=266, store=300) before normal moving
-->else1 ends: 1-Wolf (y=120, x=265, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=217, x=123, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=217, x=123, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=217, x=123, store=200) before normal moving
-->else1 ends: 2-Wolf (y=216, x=122, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=57, x=5, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=57, x=5, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=57, x=5, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=58, x=6, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=45, x=2, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=45, x=2, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=45, x=2, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=44, x=1, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=51, x=3, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=51, x=3, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=51, x=3, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=50, x=2, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=39, x=5, store=836.0) --------
--> 6-Wolf has > 500 store (y=39, x=5, store=836.0) and Random >= 0.5. so will try to find CW to move closer or breed/fight if within AD(5).
-> No CW found. although store >500 and p>=0.5!
--->else2 begins: 6-Wolf (y=39, x=5, store=836.0) before normal moving.
--->else2 begins: 6-Wolf (y=38, x=6, store=836.0) after normal moving.
.... el2 _______  6-Wolf moved normally _______ 
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 92 ************

-> ------------ 0-Sheep initialised with (y=77, x=63, store=443.4375) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=77, x=63, store=443.4375). Will move normally and eat
-->0-Sheep (y=77, x=63, store=443.4375) before normal moving and eating
-->0-Sheep (y=76, x=64, store=453.4375) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=76, x=118, store=581.69921875) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=76, x=118, store=581.69921875). Will move normally and eat
-->1-Sheep (y=76, x=118, store=581.69921875) before normal moving and eating
-->1-Sheep (y=77, x=119, store=591.69921875) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=80, x=67, store=453.4375) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=80, x=67, store=453.4375). Will move normally and eat
-->2-Sheep (y=80, x=67, store=453.4375) before normal moving and eating
-->2-Sheep (y=81, x=66, store=463.4375) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=87, x=118, store=394.765625) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=87, x=118, store=394.765625). Will move normally and eat
-->3-Sheep (y=87, x=118, store=394.765625) before normal moving and eating
-->3-Sheep (y=88, x=117, store=404.765625) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=78, x=121, store=591.69921875) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=78, x=121, store=591.69921875). Will move normally and eat
-->4-Sheep (y=78, x=121, store=591.69921875) before normal moving and eating
-->4-Sheep (y=79, x=122, store=601.69921875) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=84, x=72, store=618.75) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store > Min_ernergy(600) (y=84, x=72, store=618.75).
--> 5-Sheep looping with 0-Sheep.
----> ---- (AD < D < MD).
----> Min distance=11.40175425099138 for 5-Sheep (y=84, x=72, store=618.75) with 0-Sheep (y=93, x=79, store=380).
--> 5-Sheep looping with 1-Sheep.
->CS Found!
-> 5-Sheep (y=84, x=72, store=618.75) before moving closer (while eating) to CS-Sheep: (y=93, x=79, store=380).
-> 5-Wolf (y=88, x=75, store=628.75) after moving closer (while eating) to CS-Sheep: (y=93, x=79, store=380).
___________ 5-Sheep moved closer CS___________


-> ------------ 6-Sheep initialised with (y=93, x=79, store=380) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=93, x=79, store=380). Will move normally and eat
-->6-Sheep (y=93, x=79, store=380) before normal moving and eating
-->6-Sheep (y=92, x=80, store=390) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=79, x=122, store=536.0546875) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=79, x=122, store=536.0546875). Will move normally and eat
-->7-Sheep (y=79, x=122, store=536.0546875) before normal moving and eating
-->7-Sheep (y=78, x=121, store=546.0546875) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=241, x=36, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=241, x=36, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=241, x=36, store=100) before normal moving
-->else1 ends: 0-Wolf (y=242, x=37, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=120, x=265, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=120, x=265, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=120, x=265, store=300) before normal moving
-->else1 ends: 1-Wolf (y=119, x=266, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=216, x=122, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=216, x=122, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=216, x=122, store=200) before normal moving
-->else1 ends: 2-Wolf (y=217, x=121, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=58, x=6, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=58, x=6, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=58, x=6, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=59, x=7, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=44, x=1, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=44, x=1, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=44, x=1, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=43, x=2, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=50, x=2, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=50, x=2, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=50, x=2, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=51, x=1, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=38, x=6, store=836.0) --------
--> 6-Wolf has >Min_energy(500) store (y=38, x=6, store=836.0) and 0.25 <= random.random() < 0.5. Tries to find food (sheep).
---> 6-Wolf looping with 0-Sheep
---> 6-Wolf looping with 1-Sheep
---> 6-Wolf looping with 2-Sheep
---> 6-Wolf looping with 3-Sheep
---> 6-Wolf looping with 4-Sheep
---> 6-Wolf looping with 5-Sheep
---> 6-Wolf looping with 6-Sheep
---> 6-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 6-Wolf (y=38, x=6, store=836.0) before normal moving
-->else1 ends: 6-Wolf (y=39, x=7, store=836.0) after normal moving
....el1___________ 6-Wolf moved normally___________
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 93 ************

-> ------------ 0-Sheep initialised with (y=76, x=64, store=453.4375) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=76, x=64, store=453.4375). Will move normally and eat
-->0-Sheep (y=76, x=64, store=453.4375) before normal moving and eating
-->0-Sheep (y=75, x=63, store=463.4375) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=77, x=119, store=591.69921875) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=77, x=119, store=591.69921875). Will move normally and eat
-->1-Sheep (y=77, x=119, store=591.69921875) before normal moving and eating
-->1-Sheep (y=78, x=118, store=601.69921875) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=81, x=66, store=463.4375) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=81, x=66, store=463.4375). Will move normally and eat
-->2-Sheep (y=81, x=66, store=463.4375) before normal moving and eating
-->2-Sheep (y=82, x=65, store=473.4375) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=88, x=117, store=404.765625) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=88, x=117, store=404.765625). Will move normally and eat
-->3-Sheep (y=88, x=117, store=404.765625) before normal moving and eating
-->3-Sheep (y=89, x=118, store=414.765625) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=79, x=122, store=601.69921875) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store > Min_ernergy(600) (y=79, x=122, store=601.69921875).
--> 4-Sheep looping with 0-Sheep.
--> 4-Sheep looping with 1-Sheep.
--> 4-Sheep looping with 2-Sheep.
----> D <=AD. Sheep Breeding/Sharing proximity of 1.4142135623730951(<=5) entered by CS 4-Sheep (y=79, x=122, store=601.69921875) with CS 2-Sheep (y=78, x=121, store=546.0546875).
-----> 4-Sheep (y=79, x=122, store=601.69921875) and CS 2-Sheep (y=78, x=121, store=546.0546875 will not mate as CS 2-Sheep store <600. They will share resource to become average.
-----> Shared resources = True
-----> 4-Sheep (y=79, x=122, store=573.876953125) and CS 2-Sheep (y=78, x=121, store=573.876953125) after sharing resources!
_____________ 4-Sheep and CS 2-Sheep shared resources ____________
_______ Breeding=False, Failed breeding=False, Share=True for 4-Sheep __________

-> ------------ 5-Sheep initialised with (y=88, x=75, store=628.75) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store > Min_ernergy(600) (y=88, x=75, store=628.75).
--> 5-Sheep looping with 0-Sheep.
----> ---- (AD < D < MD).
----> Min distance=6.4031242374328485 for 5-Sheep (y=88, x=75, store=628.75) with 0-Sheep (y=92, x=80, store=390).
--> 5-Sheep looping with 1-Sheep.
->CS Found!
-> 5-Sheep (y=88, x=75, store=628.75) before moving closer (while eating) to CS-Sheep: (y=92, x=80, store=390).
-> 5-Wolf (y=90, x=77, store=638.75) after moving closer (while eating) to CS-Sheep: (y=92, x=80, store=390).
___________ 5-Sheep moved closer CS___________


-> ------------ 6-Sheep initialised with (y=92, x=80, store=390) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=92, x=80, store=390). Will move normally and eat
-->6-Sheep (y=92, x=80, store=390) before normal moving and eating
-->6-Sheep (y=91, x=79, store=400) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=78, x=121, store=573.876953125) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=78, x=121, store=573.876953125). Will move normally and eat
-->7-Sheep (y=78, x=121, store=573.876953125) before normal moving and eating
-->7-Sheep (y=77, x=120, store=583.876953125) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=242, x=37, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=242, x=37, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=242, x=37, store=100) before normal moving
-->else1 ends: 0-Wolf (y=243, x=36, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=119, x=266, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=119, x=266, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=119, x=266, store=300) before normal moving
-->else1 ends: 1-Wolf (y=120, x=267, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=217, x=121, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=217, x=121, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=217, x=121, store=200) before normal moving
-->else1 ends: 2-Wolf (y=216, x=120, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=59, x=7, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=59, x=7, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=59, x=7, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=60, x=6, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=43, x=2, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=43, x=2, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=43, x=2, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=42, x=3, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=51, x=1, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=51, x=1, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=51, x=1, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=50, x=2, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=39, x=7, store=836.0) --------
--> if and elif not satisfied
--> 6-Wolf has > Min_energy(500) store (y=39, x=7, store=836.0) but Random < bf_e/2(0.25). So will move normally.
--->else3 begins: 6-Wolf (y=39, x=7, store=836.0) before normal moving.
--->else3 begins: 6-Wolf (y=38, x=6, store=836.0) after normal moving.
....e3_______ 6-Wolf moved normally_______
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 94 ************

-> ------------ 0-Sheep initialised with (y=75, x=63, store=463.4375) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=75, x=63, store=463.4375). Will move normally and eat
-->0-Sheep (y=75, x=63, store=463.4375) before normal moving and eating
-->0-Sheep (y=76, x=64, store=473.4375) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=78, x=118, store=601.69921875) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store > Min_ernergy(600) (y=78, x=118, store=601.69921875).
--> 1-Sheep looping with 0-Sheep.
--> 1-Sheep looping with 1-Sheep.
----> ---- (AD < D < MD).
----> Min distance=11.0 for 1-Sheep (y=78, x=118, store=601.69921875) with 1-Sheep (y=89, x=118, store=414.765625).
--> 1-Sheep looping with 2-Sheep.
----> D <=AD. Sheep Breeding/Sharing proximity of 4.123105625617661(<=5) entered by CS 1-Sheep (y=78, x=118, store=601.69921875) with CS 2-Sheep (y=79, x=122, store=573.876953125).
-----> 1-Sheep (y=78, x=118, store=601.69921875) and CS 2-Sheep (y=79, x=122, store=573.876953125 will not mate as CS 2-Sheep store <600. They will share resource to become average.
-----> Shared resources = True
-----> 1-Sheep (y=78, x=118, store=587.7880859375) and CS 2-Sheep (y=79, x=122, store=587.7880859375) after sharing resources!
_____________ 1-Sheep and CS 2-Sheep shared resources ____________
_______ Breeding=False, Failed breeding=False, Share=True for 1-Sheep __________

-> ------------ 2-Sheep initialised with (y=82, x=65, store=473.4375) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=82, x=65, store=473.4375). Will move normally and eat
-->2-Sheep (y=82, x=65, store=473.4375) before normal moving and eating
-->2-Sheep (y=81, x=66, store=483.4375) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=89, x=118, store=414.765625) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=89, x=118, store=414.765625). Will move normally and eat
-->3-Sheep (y=89, x=118, store=414.765625) before normal moving and eating
-->3-Sheep (y=88, x=117, store=424.765625) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=79, x=122, store=587.7880859375) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=79, x=122, store=587.7880859375). Will move normally and eat
-->4-Sheep (y=79, x=122, store=587.7880859375) before normal moving and eating
-->4-Sheep (y=78, x=121, store=597.7880859375) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=90, x=77, store=638.75) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store > Min_ernergy(600) (y=90, x=77, store=638.75).
--> 5-Sheep looping with 0-Sheep.
----> D <=AD. Sheep Breeding/Sharing proximity of 2.23606797749979(<=5) entered by CS 5-Sheep (y=90, x=77, store=638.75) with CS 0-Sheep (y=91, x=79, store=400).
-----> 5-Sheep (y=90, x=77, store=638.75) and CS 0-Sheep (y=91, x=79, store=400 will not mate as CS 0-Sheep store <600. They will share resource to become average.
-----> Shared resources = True
-----> 5-Sheep (y=90, x=77, store=519.375) and CS 0-Sheep (y=91, x=79, store=519.375) after sharing resources!
_____________ 5-Sheep and CS 0-Sheep shared resources ____________
_______ Breeding=False, Failed breeding=False, Share=True for 5-Sheep __________

-> ------------ 6-Sheep initialised with (y=91, x=79, store=519.375) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=91, x=79, store=519.375). Will move normally and eat
-->6-Sheep (y=91, x=79, store=519.375) before normal moving and eating
-->6-Sheep (y=90, x=80, store=529.375) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=77, x=120, store=583.876953125) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=77, x=120, store=583.876953125). Will move normally and eat
-->7-Sheep (y=77, x=120, store=583.876953125) before normal moving and eating
-->7-Sheep (y=78, x=119, store=593.876953125) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=243, x=36, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=243, x=36, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=243, x=36, store=100) before normal moving
-->else1 ends: 0-Wolf (y=242, x=35, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=120, x=267, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=120, x=267, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=120, x=267, store=300) before normal moving
-->else1 ends: 1-Wolf (y=119, x=268, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=216, x=120, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=216, x=120, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=216, x=120, store=200) before normal moving
-->else1 ends: 2-Wolf (y=217, x=119, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=60, x=6, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=60, x=6, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=60, x=6, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=61, x=7, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=42, x=3, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=42, x=3, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=42, x=3, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=43, x=2, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=50, x=2, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=50, x=2, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=50, x=2, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=49, x=3, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=38, x=6, store=836.0) --------
--> 6-Wolf has > 500 store (y=38, x=6, store=836.0) and Random >= 0.5. so will try to find CW to move closer or breed/fight if within AD(5).
-> No CW found. although store >500 and p>=0.5!
--->else2 begins: 6-Wolf (y=38, x=6, store=836.0) before normal moving.
--->else2 begins: 6-Wolf (y=39, x=7, store=836.0) after normal moving.
.... el2 _______  6-Wolf moved normally _______ 
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 95 ************

-> ------------ 0-Sheep initialised with (y=76, x=64, store=473.4375) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=76, x=64, store=473.4375). Will move normally and eat
-->0-Sheep (y=76, x=64, store=473.4375) before normal moving and eating
-->0-Sheep (y=77, x=65, store=483.4375) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=78, x=118, store=587.7880859375) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=78, x=118, store=587.7880859375). Will move normally and eat
-->1-Sheep (y=78, x=118, store=587.7880859375) before normal moving and eating
-->1-Sheep (y=79, x=117, store=597.7880859375) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=81, x=66, store=483.4375) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=81, x=66, store=483.4375). Will move normally and eat
-->2-Sheep (y=81, x=66, store=483.4375) before normal moving and eating
-->2-Sheep (y=80, x=65, store=493.4375) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=88, x=117, store=424.765625) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=88, x=117, store=424.765625). Will move normally and eat
-->3-Sheep (y=88, x=117, store=424.765625) before normal moving and eating
-->3-Sheep (y=89, x=116, store=434.765625) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=78, x=121, store=597.7880859375) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=78, x=121, store=597.7880859375). Will move normally and eat
-->4-Sheep (y=78, x=121, store=597.7880859375) before normal moving and eating
-->4-Sheep (y=79, x=122, store=607.7880859375) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=90, x=77, store=519.375) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=90, x=77, store=519.375). Will move normally and eat
-->5-Sheep (y=90, x=77, store=519.375) before normal moving and eating
-->5-Sheep (y=91, x=78, store=529.375) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=90, x=80, store=529.375) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=90, x=80, store=529.375). Will move normally and eat
-->6-Sheep (y=90, x=80, store=529.375) before normal moving and eating
-->6-Sheep (y=91, x=79, store=539.375) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=78, x=119, store=593.876953125) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=78, x=119, store=593.876953125). Will move normally and eat
-->7-Sheep (y=78, x=119, store=593.876953125) before normal moving and eating
-->7-Sheep (y=79, x=120, store=603.876953125) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=242, x=35, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=242, x=35, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=242, x=35, store=100) before normal moving
-->else1 ends: 0-Wolf (y=241, x=36, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=119, x=268, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=119, x=268, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=119, x=268, store=300) before normal moving
-->else1 ends: 1-Wolf (y=118, x=269, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=217, x=119, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=217, x=119, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=217, x=119, store=200) before normal moving
-->else1 ends: 2-Wolf (y=216, x=118, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=61, x=7, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=61, x=7, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=61, x=7, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=62, x=6, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=43, x=2, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=43, x=2, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=43, x=2, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=44, x=3, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=49, x=3, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=49, x=3, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=49, x=3, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=48, x=4, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=39, x=7, store=836.0) --------
--> 6-Wolf has > 500 store (y=39, x=7, store=836.0) and Random >= 0.5. so will try to find CW to move closer or breed/fight if within AD(5).
-> No CW found. although store >500 and p>=0.5!
--->else2 begins: 6-Wolf (y=39, x=7, store=836.0) before normal moving.
--->else2 begins: 6-Wolf (y=40, x=8, store=836.0) after normal moving.
.... el2 _______  6-Wolf moved normally _______ 
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 96 ************

-> ------------ 0-Sheep initialised with (y=77, x=65, store=483.4375) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=77, x=65, store=483.4375). Will move normally and eat
-->0-Sheep (y=77, x=65, store=483.4375) before normal moving and eating
-->0-Sheep (y=78, x=66, store=493.4375) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=79, x=117, store=597.7880859375) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=79, x=117, store=597.7880859375). Will move normally and eat
-->1-Sheep (y=79, x=117, store=597.7880859375) before normal moving and eating
-->1-Sheep (y=78, x=116, store=607.7880859375) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=80, x=65, store=493.4375) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=80, x=65, store=493.4375). Will move normally and eat
-->2-Sheep (y=80, x=65, store=493.4375) before normal moving and eating
-->2-Sheep (y=79, x=66, store=503.4375) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=89, x=116, store=434.765625) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=89, x=116, store=434.765625). Will move normally and eat
-->3-Sheep (y=89, x=116, store=434.765625) before normal moving and eating
-->3-Sheep (y=90, x=117, store=444.765625) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=79, x=122, store=607.7880859375) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store > Min_ernergy(600) (y=79, x=122, store=607.7880859375).
--> 4-Sheep looping with 0-Sheep.
--> 4-Sheep looping with 1-Sheep.
--> 4-Sheep looping with 2-Sheep.
----> D <=AD. Sheep Breeding/Sharing proximity of 2.0(<=5) entered by CS 4-Sheep (y=79, x=122, store=607.7880859375) with CS 2-Sheep (y=79, x=120, store=603.876953125).
----->4-Sheep (y=79, x=122, store=607.7880859375) and CS 2-Sheep (y=79, x=120, store=603.876953125 have > Min_energy (600) store. So they will try breeding if p>0.5
------>1.B Random <0.5. So the breeding will fail.
------> 4-Sheep (y=79, x=122, store=607.7880859375) before failed breeding with CS 2-Sheep (y=79, x=120, store=603.876953125)
------> Failed Sheep Breeding = True
------> 4-Sheep (y=79, x=122, store=302.916259765625) after failed breeding with CS 2-Sheep (y=79, x=120, store=302.916259765625).
_____________ 4-Sheep Fail Mated with CS 2-Sheep ____________
_______ Breeding=False, Failed breeding=True, Share=False for 4-Sheep __________

-> ------------ 5-Sheep initialised with (y=91, x=78, store=529.375) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=91, x=78, store=529.375). Will move normally and eat
-->5-Sheep (y=91, x=78, store=529.375) before normal moving and eating
-->5-Sheep (y=92, x=77, store=539.375) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=91, x=79, store=539.375) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=91, x=79, store=539.375). Will move normally and eat
-->6-Sheep (y=91, x=79, store=539.375) before normal moving and eating
-->6-Sheep (y=90, x=78, store=549.375) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=79, x=120, store=302.916259765625) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=79, x=120, store=302.916259765625). Will move normally and eat
-->7-Sheep (y=79, x=120, store=302.916259765625) before normal moving and eating
-->7-Sheep (y=80, x=119, store=312.916259765625) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=241, x=36, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=241, x=36, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=241, x=36, store=100) before normal moving
-->else1 ends: 0-Wolf (y=240, x=37, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=118, x=269, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=118, x=269, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=118, x=269, store=300) before normal moving
-->else1 ends: 1-Wolf (y=119, x=268, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=216, x=118, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=216, x=118, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=216, x=118, store=200) before normal moving
-->else1 ends: 2-Wolf (y=217, x=117, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=62, x=6, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=62, x=6, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=62, x=6, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=63, x=7, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=44, x=3, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=44, x=3, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=44, x=3, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=43, x=4, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=48, x=4, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=48, x=4, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=48, x=4, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=49, x=5, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=40, x=8, store=836.0) --------
--> if and elif not satisfied
--> 6-Wolf has > Min_energy(500) store (y=40, x=8, store=836.0) but Random < bf_e/2(0.25). So will move normally.
--->else3 begins: 6-Wolf (y=40, x=8, store=836.0) before normal moving.
--->else3 begins: 6-Wolf (y=39, x=9, store=836.0) after normal moving.
....e3_______ 6-Wolf moved normally_______
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 97 ************

-> ------------ 0-Sheep initialised with (y=78, x=66, store=493.4375) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=78, x=66, store=493.4375). Will move normally and eat
-->0-Sheep (y=78, x=66, store=493.4375) before normal moving and eating
-->0-Sheep (y=77, x=65, store=503.4375) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=78, x=116, store=607.7880859375) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store > Min_ernergy(600) (y=78, x=116, store=607.7880859375).
--> 1-Sheep looping with 0-Sheep.
--> 1-Sheep looping with 1-Sheep.
----> ---- (AD < D < MD).
----> Min distance=12.041594578792296 for 1-Sheep (y=78, x=116, store=607.7880859375) with 1-Sheep (y=90, x=117, store=444.765625).
--> 1-Sheep looping with 2-Sheep.
----> ---- (AD < D < MD).
----> Min distance=6.082762530298219 for 1-Sheep (y=78, x=116, store=607.7880859375) with 2-Sheep (y=79, x=122, store=302.916259765625).
--> 1-Sheep looping with 3-Sheep.
--> 1-Sheep looping with 4-Sheep.
--> 1-Sheep looping with 5-Sheep.
----> D <=AD. Sheep Breeding/Sharing proximity of 3.605551275463989(<=5) entered by CS 1-Sheep (y=78, x=116, store=607.7880859375) with CS 5-Sheep (y=80, x=119, store=312.916259765625).
-----> 1-Sheep (y=78, x=116, store=607.7880859375) and CS 5-Sheep (y=80, x=119, store=312.916259765625 will not mate as CS 5-Sheep store <600. They will share resource to become average.
-----> Shared resources = True
-----> 1-Sheep (y=78, x=116, store=460.3521728515625) and CS 5-Sheep (y=80, x=119, store=460.3521728515625) after sharing resources!
_____________ 1-Sheep and CS 5-Sheep shared resources ____________
_______ Breeding=False, Failed breeding=False, Share=True for 1-Sheep __________

-> ------------ 2-Sheep initialised with (y=79, x=66, store=503.4375) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=79, x=66, store=503.4375). Will move normally and eat
-->2-Sheep (y=79, x=66, store=503.4375) before normal moving and eating
-->2-Sheep (y=78, x=67, store=513.4375) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=90, x=117, store=444.765625) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=90, x=117, store=444.765625). Will move normally and eat
-->3-Sheep (y=90, x=117, store=444.765625) before normal moving and eating
-->3-Sheep (y=91, x=116, store=454.765625) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=79, x=122, store=302.916259765625) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=79, x=122, store=302.916259765625). Will move normally and eat
-->4-Sheep (y=79, x=122, store=302.916259765625) before normal moving and eating
-->4-Sheep (y=78, x=121, store=312.916259765625) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=92, x=77, store=539.375) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=92, x=77, store=539.375). Will move normally and eat
-->5-Sheep (y=92, x=77, store=539.375) before normal moving and eating
-->5-Sheep (y=93, x=76, store=549.375) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=90, x=78, store=549.375) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=90, x=78, store=549.375). Will move normally and eat
-->6-Sheep (y=90, x=78, store=549.375) before normal moving and eating
-->6-Sheep (y=89, x=79, store=559.375) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=80, x=119, store=460.3521728515625) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=80, x=119, store=460.3521728515625). Will move normally and eat
-->7-Sheep (y=80, x=119, store=460.3521728515625) before normal moving and eating
-->7-Sheep (y=79, x=120, store=470.3521728515625) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=240, x=37, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=240, x=37, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=240, x=37, store=100) before normal moving
-->else1 ends: 0-Wolf (y=239, x=36, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=119, x=268, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=119, x=268, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=119, x=268, store=300) before normal moving
-->else1 ends: 1-Wolf (y=120, x=269, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=217, x=117, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=217, x=117, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=217, x=117, store=200) before normal moving
-->else1 ends: 2-Wolf (y=216, x=116, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=63, x=7, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=63, x=7, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=63, x=7, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=62, x=6, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=43, x=4, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=43, x=4, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=43, x=4, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=42, x=5, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=49, x=5, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=49, x=5, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=49, x=5, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=48, x=6, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=39, x=9, store=836.0) --------
--> if and elif not satisfied
--> 6-Wolf has > Min_energy(500) store (y=39, x=9, store=836.0) but Random < bf_e/2(0.25). So will move normally.
--->else3 begins: 6-Wolf (y=39, x=9, store=836.0) before normal moving.
--->else3 begins: 6-Wolf (y=40, x=8, store=836.0) after normal moving.
....e3_______ 6-Wolf moved normally_______
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 98 ************

-> ------------ 0-Sheep initialised with (y=77, x=65, store=503.4375) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=77, x=65, store=503.4375). Will move normally and eat
-->0-Sheep (y=77, x=65, store=503.4375) before normal moving and eating
-->0-Sheep (y=76, x=64, store=513.4375) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=78, x=116, store=460.3521728515625) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=78, x=116, store=460.3521728515625). Will move normally and eat
-->1-Sheep (y=78, x=116, store=460.3521728515625) before normal moving and eating
-->1-Sheep (y=79, x=117, store=470.3521728515625) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=78, x=67, store=513.4375) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=78, x=67, store=513.4375). Will move normally and eat
-->2-Sheep (y=78, x=67, store=513.4375) before normal moving and eating
-->2-Sheep (y=77, x=68, store=523.4375) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=91, x=116, store=454.765625) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=91, x=116, store=454.765625). Will move normally and eat
-->3-Sheep (y=91, x=116, store=454.765625) before normal moving and eating
-->3-Sheep (y=90, x=115, store=464.765625) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=78, x=121, store=312.916259765625) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=78, x=121, store=312.916259765625). Will move normally and eat
-->4-Sheep (y=78, x=121, store=312.916259765625) before normal moving and eating
-->4-Sheep (y=77, x=122, store=322.916259765625) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=93, x=76, store=549.375) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=93, x=76, store=549.375). Will move normally and eat
-->5-Sheep (y=93, x=76, store=549.375) before normal moving and eating
-->5-Sheep (y=92, x=77, store=559.375) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=89, x=79, store=559.375) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=89, x=79, store=559.375). Will move normally and eat
-->6-Sheep (y=89, x=79, store=559.375) before normal moving and eating
-->6-Sheep (y=88, x=80, store=569.375) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=79, x=120, store=470.3521728515625) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=79, x=120, store=470.3521728515625). Will move normally and eat
-->7-Sheep (y=79, x=120, store=470.3521728515625) before normal moving and eating
-->7-Sheep (y=80, x=121, store=480.3521728515625) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=239, x=36, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=239, x=36, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=239, x=36, store=100) before normal moving
-->else1 ends: 0-Wolf (y=238, x=37, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=120, x=269, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=120, x=269, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=120, x=269, store=300) before normal moving
-->else1 ends: 1-Wolf (y=119, x=270, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=216, x=116, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=216, x=116, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=216, x=116, store=200) before normal moving
-->else1 ends: 2-Wolf (y=217, x=117, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=62, x=6, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=62, x=6, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=62, x=6, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=63, x=7, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=42, x=5, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=42, x=5, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=42, x=5, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=41, x=4, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=48, x=6, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=48, x=6, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=48, x=6, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=47, x=5, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=40, x=8, store=836.0) --------
--> if and elif not satisfied
--> 6-Wolf has > Min_energy(500) store (y=40, x=8, store=836.0) but Random < bf_e/2(0.25). So will move normally.
--->else3 begins: 6-Wolf (y=40, x=8, store=836.0) before normal moving.
--->else3 begins: 6-Wolf (y=39, x=9, store=836.0) after normal moving.
....e3_______ 6-Wolf moved normally_______
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 99 ************

-> ------------ 0-Sheep initialised with (y=76, x=64, store=513.4375) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=76, x=64, store=513.4375). Will move normally and eat
-->0-Sheep (y=76, x=64, store=513.4375) before normal moving and eating
-->0-Sheep (y=77, x=63, store=523.4375) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=79, x=117, store=470.3521728515625) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=79, x=117, store=470.3521728515625). Will move normally and eat
-->1-Sheep (y=79, x=117, store=470.3521728515625) before normal moving and eating
-->1-Sheep (y=78, x=116, store=480.3521728515625) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=77, x=68, store=523.4375) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=77, x=68, store=523.4375). Will move normally and eat
-->2-Sheep (y=77, x=68, store=523.4375) before normal moving and eating
-->2-Sheep (y=78, x=67, store=533.4375) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=90, x=115, store=464.765625) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=90, x=115, store=464.765625). Will move normally and eat
-->3-Sheep (y=90, x=115, store=464.765625) before normal moving and eating
-->3-Sheep (y=89, x=114, store=474.765625) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=77, x=122, store=322.916259765625) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=77, x=122, store=322.916259765625). Will move normally and eat
-->4-Sheep (y=77, x=122, store=322.916259765625) before normal moving and eating
-->4-Sheep (y=78, x=121, store=332.916259765625) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=92, x=77, store=559.375) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=92, x=77, store=559.375). Will move normally and eat
-->5-Sheep (y=92, x=77, store=559.375) before normal moving and eating
-->5-Sheep (y=91, x=76, store=569.375) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=88, x=80, store=569.375) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=88, x=80, store=569.375). Will move normally and eat
-->6-Sheep (y=88, x=80, store=569.375) before normal moving and eating
-->6-Sheep (y=89, x=79, store=579.375) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=80, x=121, store=480.3521728515625) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=80, x=121, store=480.3521728515625). Will move normally and eat
-->7-Sheep (y=80, x=121, store=480.3521728515625) before normal moving and eating
-->7-Sheep (y=81, x=122, store=490.3521728515625) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=238, x=37, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=238, x=37, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=238, x=37, store=100) before normal moving
-->else1 ends: 0-Wolf (y=239, x=38, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=119, x=270, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=119, x=270, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=119, x=270, store=300) before normal moving
-->else1 ends: 1-Wolf (y=118, x=269, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=217, x=117, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=217, x=117, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=217, x=117, store=200) before normal moving
-->else1 ends: 2-Wolf (y=216, x=116, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=63, x=7, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=63, x=7, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=63, x=7, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=64, x=8, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=41, x=4, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=41, x=4, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=41, x=4, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=42, x=3, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=47, x=5, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=47, x=5, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=47, x=5, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=46, x=6, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=39, x=9, store=836.0) --------
--> if and elif not satisfied
--> 6-Wolf has > Min_energy(500) store (y=39, x=9, store=836.0) but Random < bf_e/2(0.25). So will move normally.
--->else3 begins: 6-Wolf (y=39, x=9, store=836.0) before normal moving.
--->else3 begins: 6-Wolf (y=40, x=8, store=836.0) after normal moving.
....e3_______ 6-Wolf moved normally_______
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 100 ************

-> ------------ 0-Sheep initialised with (y=77, x=63, store=523.4375) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=77, x=63, store=523.4375). Will move normally and eat
-->0-Sheep (y=77, x=63, store=523.4375) before normal moving and eating
-->0-Sheep (y=76, x=64, store=533.4375) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=78, x=116, store=480.3521728515625) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=78, x=116, store=480.3521728515625). Will move normally and eat
-->1-Sheep (y=78, x=116, store=480.3521728515625) before normal moving and eating
-->1-Sheep (y=77, x=115, store=490.3521728515625) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=78, x=67, store=533.4375) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=78, x=67, store=533.4375). Will move normally and eat
-->2-Sheep (y=78, x=67, store=533.4375) before normal moving and eating
-->2-Sheep (y=77, x=66, store=543.4375) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=89, x=114, store=474.765625) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=89, x=114, store=474.765625). Will move normally and eat
-->3-Sheep (y=89, x=114, store=474.765625) before normal moving and eating
-->3-Sheep (y=90, x=113, store=484.765625) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=78, x=121, store=332.916259765625) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=78, x=121, store=332.916259765625). Will move normally and eat
-->4-Sheep (y=78, x=121, store=332.916259765625) before normal moving and eating
-->4-Sheep (y=77, x=120, store=342.916259765625) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=91, x=76, store=569.375) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=91, x=76, store=569.375). Will move normally and eat
-->5-Sheep (y=91, x=76, store=569.375) before normal moving and eating
-->5-Sheep (y=90, x=75, store=579.375) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=89, x=79, store=579.375) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=89, x=79, store=579.375). Will move normally and eat
-->6-Sheep (y=89, x=79, store=579.375) before normal moving and eating
-->6-Sheep (y=88, x=80, store=589.375) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=81, x=122, store=490.3521728515625) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=81, x=122, store=490.3521728515625). Will move normally and eat
-->7-Sheep (y=81, x=122, store=490.3521728515625) before normal moving and eating
-->7-Sheep (y=82, x=121, store=500.3521728515625) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=239, x=38, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=239, x=38, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=239, x=38, store=100) before normal moving
-->else1 ends: 0-Wolf (y=240, x=39, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=118, x=269, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=118, x=269, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=118, x=269, store=300) before normal moving
-->else1 ends: 1-Wolf (y=119, x=268, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=216, x=116, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=216, x=116, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=216, x=116, store=200) before normal moving
-->else1 ends: 2-Wolf (y=217, x=117, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=64, x=8, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=64, x=8, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=64, x=8, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=65, x=9, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=42, x=3, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=42, x=3, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=42, x=3, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=41, x=4, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=46, x=6, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=46, x=6, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=46, x=6, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=47, x=5, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=40, x=8, store=836.0) --------
--> if and elif not satisfied
--> 6-Wolf has > Min_energy(500) store (y=40, x=8, store=836.0) but Random < bf_e/2(0.25). So will move normally.
--->else3 begins: 6-Wolf (y=40, x=8, store=836.0) before normal moving.
--->else3 begins: 6-Wolf (y=41, x=9, store=836.0) after normal moving.
....e3_______ 6-Wolf moved normally_______
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 101 ************

-> ------------ 0-Sheep initialised with (y=76, x=64, store=533.4375) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=76, x=64, store=533.4375). Will move normally and eat
-->0-Sheep (y=76, x=64, store=533.4375) before normal moving and eating
-->0-Sheep (y=77, x=65, store=543.4375) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=77, x=115, store=490.3521728515625) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=77, x=115, store=490.3521728515625). Will move normally and eat
-->1-Sheep (y=77, x=115, store=490.3521728515625) before normal moving and eating
-->1-Sheep (y=78, x=114, store=500.3521728515625) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=77, x=66, store=543.4375) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=77, x=66, store=543.4375). Will move normally and eat
-->2-Sheep (y=77, x=66, store=543.4375) before normal moving and eating
-->2-Sheep (y=78, x=67, store=553.4375) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=90, x=113, store=484.765625) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=90, x=113, store=484.765625). Will move normally and eat
-->3-Sheep (y=90, x=113, store=484.765625) before normal moving and eating
-->3-Sheep (y=91, x=112, store=494.765625) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=77, x=120, store=342.916259765625) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=77, x=120, store=342.916259765625). Will move normally and eat
-->4-Sheep (y=77, x=120, store=342.916259765625) before normal moving and eating
-->4-Sheep (y=78, x=119, store=352.916259765625) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=90, x=75, store=579.375) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=90, x=75, store=579.375). Will move normally and eat
-->5-Sheep (y=90, x=75, store=579.375) before normal moving and eating
-->5-Sheep (y=89, x=76, store=589.375) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=88, x=80, store=589.375) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=88, x=80, store=589.375). Will move normally and eat
-->6-Sheep (y=88, x=80, store=589.375) before normal moving and eating
-->6-Sheep (y=89, x=81, store=599.375) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=82, x=121, store=500.3521728515625) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=82, x=121, store=500.3521728515625). Will move normally and eat
-->7-Sheep (y=82, x=121, store=500.3521728515625) before normal moving and eating
-->7-Sheep (y=83, x=120, store=510.3521728515625) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=240, x=39, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=240, x=39, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=240, x=39, store=100) before normal moving
-->else1 ends: 0-Wolf (y=239, x=40, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=119, x=268, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=119, x=268, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=119, x=268, store=300) before normal moving
-->else1 ends: 1-Wolf (y=120, x=269, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=217, x=117, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=217, x=117, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=217, x=117, store=200) before normal moving
-->else1 ends: 2-Wolf (y=218, x=116, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=65, x=9, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=65, x=9, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=65, x=9, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=64, x=10, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=41, x=4, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=41, x=4, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=41, x=4, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=42, x=5, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=47, x=5, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=47, x=5, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=47, x=5, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=46, x=6, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=41, x=9, store=836.0) --------
--> 6-Wolf has > 500 store (y=41, x=9, store=836.0) and Random >= 0.5. so will try to find CW to move closer or breed/fight if within AD(5).
-> No CW found. although store >500 and p>=0.5!
--->else2 begins: 6-Wolf (y=41, x=9, store=836.0) before normal moving.
--->else2 begins: 6-Wolf (y=40, x=8, store=836.0) after normal moving.
.... el2 _______  6-Wolf moved normally _______ 
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 102 ************

-> ------------ 0-Sheep initialised with (y=77, x=65, store=543.4375) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=77, x=65, store=543.4375). Will move normally and eat
-->0-Sheep (y=77, x=65, store=543.4375) before normal moving and eating
-->0-Sheep (y=78, x=64, store=553.4375) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=78, x=114, store=500.3521728515625) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=78, x=114, store=500.3521728515625). Will move normally and eat
-->1-Sheep (y=78, x=114, store=500.3521728515625) before normal moving and eating
-->1-Sheep (y=77, x=115, store=510.3521728515625) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=78, x=67, store=553.4375) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=78, x=67, store=553.4375). Will move normally and eat
-->2-Sheep (y=78, x=67, store=553.4375) before normal moving and eating
-->2-Sheep (y=79, x=68, store=563.4375) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=91, x=112, store=494.765625) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=91, x=112, store=494.765625). Will move normally and eat
-->3-Sheep (y=91, x=112, store=494.765625) before normal moving and eating
-->3-Sheep (y=90, x=113, store=504.765625) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=78, x=119, store=352.916259765625) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=78, x=119, store=352.916259765625). Will move normally and eat
-->4-Sheep (y=78, x=119, store=352.916259765625) before normal moving and eating
-->4-Sheep (y=77, x=120, store=362.916259765625) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=89, x=76, store=589.375) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=89, x=76, store=589.375). Will move normally and eat
-->5-Sheep (y=89, x=76, store=589.375) before normal moving and eating
-->5-Sheep (y=90, x=75, store=599.375) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=89, x=81, store=599.375) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=89, x=81, store=599.375). Will move normally and eat
-->6-Sheep (y=89, x=81, store=599.375) before normal moving and eating
-->6-Sheep (y=88, x=82, store=609.375) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=83, x=120, store=510.3521728515625) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=83, x=120, store=510.3521728515625). Will move normally and eat
-->7-Sheep (y=83, x=120, store=510.3521728515625) before normal moving and eating
-->7-Sheep (y=82, x=119, store=520.3521728515625) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=239, x=40, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=239, x=40, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=239, x=40, store=100) before normal moving
-->else1 ends: 0-Wolf (y=238, x=41, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=120, x=269, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=120, x=269, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=120, x=269, store=300) before normal moving
-->else1 ends: 1-Wolf (y=119, x=268, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=218, x=116, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=218, x=116, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=218, x=116, store=200) before normal moving
-->else1 ends: 2-Wolf (y=217, x=117, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=64, x=10, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=64, x=10, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=64, x=10, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=63, x=9, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=42, x=5, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=42, x=5, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=42, x=5, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=43, x=4, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=46, x=6, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=46, x=6, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=46, x=6, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=47, x=5, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=40, x=8, store=836.0) --------
--> if and elif not satisfied
--> 6-Wolf has > Min_energy(500) store (y=40, x=8, store=836.0) but Random < bf_e/2(0.25). So will move normally.
--->else3 begins: 6-Wolf (y=40, x=8, store=836.0) before normal moving.
--->else3 begins: 6-Wolf (y=39, x=9, store=836.0) after normal moving.
....e3_______ 6-Wolf moved normally_______
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 103 ************

-> ------------ 0-Sheep initialised with (y=78, x=64, store=553.4375) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=78, x=64, store=553.4375). Will move normally and eat
-->0-Sheep (y=78, x=64, store=553.4375) before normal moving and eating
-->0-Sheep (y=77, x=63, store=563.4375) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=77, x=115, store=510.3521728515625) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=77, x=115, store=510.3521728515625). Will move normally and eat
-->1-Sheep (y=77, x=115, store=510.3521728515625) before normal moving and eating
-->1-Sheep (y=76, x=116, store=520.3521728515625) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=79, x=68, store=563.4375) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=79, x=68, store=563.4375). Will move normally and eat
-->2-Sheep (y=79, x=68, store=563.4375) before normal moving and eating
-->2-Sheep (y=78, x=67, store=573.4375) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=90, x=113, store=504.765625) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=90, x=113, store=504.765625). Will move normally and eat
-->3-Sheep (y=90, x=113, store=504.765625) before normal moving and eating
-->3-Sheep (y=91, x=112, store=514.765625) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=77, x=120, store=362.916259765625) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=77, x=120, store=362.916259765625). Will move normally and eat
-->4-Sheep (y=77, x=120, store=362.916259765625) before normal moving and eating
-->4-Sheep (y=76, x=119, store=372.916259765625) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=90, x=75, store=599.375) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=90, x=75, store=599.375). Will move normally and eat
-->5-Sheep (y=90, x=75, store=599.375) before normal moving and eating
-->5-Sheep (y=89, x=76, store=609.375) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=88, x=82, store=609.375) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store > Min_ernergy(600) (y=88, x=82, store=609.375).
--> 6-Sheep looping with 0-Sheep.
-> NO CS Found.
-> 6-Sheep (y=88, x=82, store=609.375) before normally moving and eating.
-> 6-Sheep (y=89, x=83, store=619.375) after normally moving and eating.
___e1________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=82, x=119, store=520.3521728515625) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=82, x=119, store=520.3521728515625). Will move normally and eat
-->7-Sheep (y=82, x=119, store=520.3521728515625) before normal moving and eating
-->7-Sheep (y=83, x=120, store=530.3521728515625) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=238, x=41, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=238, x=41, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=238, x=41, store=100) before normal moving
-->else1 ends: 0-Wolf (y=237, x=40, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=119, x=268, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=119, x=268, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=119, x=268, store=300) before normal moving
-->else1 ends: 1-Wolf (y=118, x=269, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=217, x=117, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=217, x=117, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=217, x=117, store=200) before normal moving
-->else1 ends: 2-Wolf (y=218, x=116, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=63, x=9, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=63, x=9, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=63, x=9, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=64, x=10, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=43, x=4, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=43, x=4, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=43, x=4, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=44, x=3, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=47, x=5, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=47, x=5, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=47, x=5, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=48, x=4, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=39, x=9, store=836.0) --------
--> 6-Wolf has >Min_energy(500) store (y=39, x=9, store=836.0) and 0.25 <= random.random() < 0.5. Tries to find food (sheep).
---> 6-Wolf looping with 0-Sheep
---> 6-Wolf looping with 1-Sheep
---> 6-Wolf looping with 2-Sheep
---> 6-Wolf looping with 3-Sheep
---> 6-Wolf looping with 4-Sheep
---> 6-Wolf looping with 5-Sheep
---> 6-Wolf looping with 6-Sheep
---> 6-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 6-Wolf (y=39, x=9, store=836.0) before normal moving
-->else1 ends: 6-Wolf (y=40, x=8, store=836.0) after normal moving
....el1___________ 6-Wolf moved normally___________
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 104 ************

-> ------------ 0-Sheep initialised with (y=77, x=63, store=563.4375) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=77, x=63, store=563.4375). Will move normally and eat
-->0-Sheep (y=77, x=63, store=563.4375) before normal moving and eating
-->0-Sheep (y=76, x=62, store=573.4375) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=76, x=116, store=520.3521728515625) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=76, x=116, store=520.3521728515625). Will move normally and eat
-->1-Sheep (y=76, x=116, store=520.3521728515625) before normal moving and eating
-->1-Sheep (y=77, x=115, store=530.3521728515625) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=78, x=67, store=573.4375) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=78, x=67, store=573.4375). Will move normally and eat
-->2-Sheep (y=78, x=67, store=573.4375) before normal moving and eating
-->2-Sheep (y=79, x=66, store=583.4375) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=91, x=112, store=514.765625) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=91, x=112, store=514.765625). Will move normally and eat
-->3-Sheep (y=91, x=112, store=514.765625) before normal moving and eating
-->3-Sheep (y=90, x=113, store=524.765625) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=76, x=119, store=372.916259765625) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=76, x=119, store=372.916259765625). Will move normally and eat
-->4-Sheep (y=76, x=119, store=372.916259765625) before normal moving and eating
-->4-Sheep (y=77, x=118, store=382.916259765625) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=89, x=76, store=609.375) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store > Min_ernergy(600) (y=89, x=76, store=609.375).
--> 5-Sheep looping with 0-Sheep.
----> ---- (AD < D < MD).
----> Min distance=7.0 for 5-Sheep (y=89, x=76, store=609.375) with 0-Sheep (y=89, x=83, store=619.375).
--> 5-Sheep looping with 1-Sheep.
->CS Found!
-> 5-Sheep (y=89, x=76, store=609.375) before moving closer (while eating) to CS-Sheep: (y=89, x=83, store=619.375).
-> 5-Wolf (y=89, x=79, store=619.375) after moving closer (while eating) to CS-Sheep: (y=89, x=83, store=619.375).
___________ 5-Sheep moved closer CS___________


-> ------------ 6-Sheep initialised with (y=89, x=83, store=619.375) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store > Min_ernergy(600) (y=89, x=83, store=619.375).
--> 6-Sheep looping with 0-Sheep.
-> NO CS Found.
-> 6-Sheep (y=89, x=83, store=619.375) before normally moving and eating.
-> 6-Sheep (y=90, x=82, store=629.375) after normally moving and eating.
___e1________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=83, x=120, store=530.3521728515625) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=83, x=120, store=530.3521728515625). Will move normally and eat
-->7-Sheep (y=83, x=120, store=530.3521728515625) before normal moving and eating
-->7-Sheep (y=84, x=119, store=540.3521728515625) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=237, x=40, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=237, x=40, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=237, x=40, store=100) before normal moving
-->else1 ends: 0-Wolf (y=238, x=41, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=118, x=269, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=118, x=269, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=118, x=269, store=300) before normal moving
-->else1 ends: 1-Wolf (y=119, x=270, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=218, x=116, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=218, x=116, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=218, x=116, store=200) before normal moving
-->else1 ends: 2-Wolf (y=217, x=115, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=64, x=10, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=64, x=10, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=64, x=10, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=65, x=11, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=44, x=3, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=44, x=3, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=44, x=3, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=43, x=2, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=48, x=4, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=48, x=4, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=48, x=4, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=49, x=3, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=40, x=8, store=836.0) --------
--> 6-Wolf has > 500 store (y=40, x=8, store=836.0) and Random >= 0.5. so will try to find CW to move closer or breed/fight if within AD(5).
-> No CW found. although store >500 and p>=0.5!
--->else2 begins: 6-Wolf (y=40, x=8, store=836.0) before normal moving.
--->else2 begins: 6-Wolf (y=41, x=9, store=836.0) after normal moving.
.... el2 _______  6-Wolf moved normally _______ 
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 105 ************

-> ------------ 0-Sheep initialised with (y=76, x=62, store=573.4375) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=76, x=62, store=573.4375). Will move normally and eat
-->0-Sheep (y=76, x=62, store=573.4375) before normal moving and eating
-->0-Sheep (y=77, x=63, store=583.4375) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=77, x=115, store=530.3521728515625) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=77, x=115, store=530.3521728515625). Will move normally and eat
-->1-Sheep (y=77, x=115, store=530.3521728515625) before normal moving and eating
-->1-Sheep (y=78, x=114, store=540.3521728515625) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=79, x=66, store=583.4375) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=79, x=66, store=583.4375). Will move normally and eat
-->2-Sheep (y=79, x=66, store=583.4375) before normal moving and eating
-->2-Sheep (y=78, x=65, store=593.4375) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=90, x=113, store=524.765625) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=90, x=113, store=524.765625). Will move normally and eat
-->3-Sheep (y=90, x=113, store=524.765625) before normal moving and eating
-->3-Sheep (y=89, x=112, store=534.765625) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=77, x=118, store=382.916259765625) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=77, x=118, store=382.916259765625). Will move normally and eat
-->4-Sheep (y=77, x=118, store=382.916259765625) before normal moving and eating
-->4-Sheep (y=76, x=117, store=392.916259765625) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=89, x=79, store=619.375) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store > Min_ernergy(600) (y=89, x=79, store=619.375).
--> 5-Sheep looping with 0-Sheep.
----> D <=AD. Sheep Breeding/Sharing proximity of 3.1622776601683795(<=5) entered by CS 5-Sheep (y=89, x=79, store=619.375) with CS 0-Sheep (y=90, x=82, store=629.375).
----->5-Sheep (y=89, x=79, store=619.375) and CS 0-Sheep (y=90, x=82, store=629.375 have > Min_energy (600) store. So they will try breeding if p>0.5
------>1.A. Random >0.5. So the sheep will breed.
------> 5-Sheep (y=89, x=79, store=619.375) before breeding with CS 0-Sheep (y=90, x=82, store=629.375).
------> Sheep Breed = True
------> 5-Sheep (y=89, x=79, store=312.1875) after breeding with CS 0-Sheep (y=90, x=82, store=312.1875).
_____________ 5-Sheep Mated SUCCESSFULLY with CS 0-Sheep ____________
_______ Breeding=True, Failed breeding=False, Share=False for 5-Sheep __________

-> ------------ 6-Sheep initialised with (y=90, x=82, store=312.1875) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=90, x=82, store=312.1875). Will move normally and eat
-->6-Sheep (y=90, x=82, store=312.1875) before normal moving and eating
-->6-Sheep (y=89, x=81, store=322.1875) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=84, x=119, store=540.3521728515625) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=84, x=119, store=540.3521728515625). Will move normally and eat
-->7-Sheep (y=84, x=119, store=540.3521728515625) before normal moving and eating
-->7-Sheep (y=85, x=120, store=550.3521728515625) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=238, x=41, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=238, x=41, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
---> 0-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=238, x=41, store=100) before normal moving
-->else1 ends: 0-Wolf (y=237, x=42, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=119, x=270, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=119, x=270, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
---> 1-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=119, x=270, store=300) before normal moving
-->else1 ends: 1-Wolf (y=118, x=271, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=217, x=115, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=217, x=115, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
---> 2-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=217, x=115, store=200) before normal moving
-->else1 ends: 2-Wolf (y=216, x=116, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=65, x=11, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=65, x=11, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
---> 3-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=65, x=11, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=64, x=10, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=43, x=2, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=43, x=2, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
---> 4-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=43, x=2, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=44, x=1, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=49, x=3, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=49, x=3, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
---> 5-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=49, x=3, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=48, x=2, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=41, x=9, store=836.0) --------
--> 6-Wolf has >Min_energy(500) store (y=41, x=9, store=836.0) and 0.25 <= random.random() < 0.5. Tries to find food (sheep).
---> 6-Wolf looping with 0-Sheep
---> 6-Wolf looping with 1-Sheep
---> 6-Wolf looping with 2-Sheep
---> 6-Wolf looping with 3-Sheep
---> 6-Wolf looping with 4-Sheep
---> 6-Wolf looping with 5-Sheep
---> 6-Wolf looping with 6-Sheep
---> 6-Wolf looping with 7-Sheep
---> 6-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 6-Wolf (y=41, x=9, store=836.0) before normal moving
-->else1 ends: 6-Wolf (y=42, x=10, store=836.0) after normal moving
....el1___________ 6-Wolf moved normally___________
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 106 ************

-> ------------ 0-Sheep initialised with (y=77, x=63, store=583.4375) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=77, x=63, store=583.4375). Will move normally and eat
-->0-Sheep (y=77, x=63, store=583.4375) before normal moving and eating
-->0-Sheep (y=76, x=62, store=593.4375) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=78, x=114, store=540.3521728515625) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=78, x=114, store=540.3521728515625). Will move normally and eat
-->1-Sheep (y=78, x=114, store=540.3521728515625) before normal moving and eating
-->1-Sheep (y=77, x=115, store=550.3521728515625) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=78, x=65, store=593.4375) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=78, x=65, store=593.4375). Will move normally and eat
-->2-Sheep (y=78, x=65, store=593.4375) before normal moving and eating
-->2-Sheep (y=77, x=64, store=603.4375) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=89, x=112, store=534.765625) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=89, x=112, store=534.765625). Will move normally and eat
-->3-Sheep (y=89, x=112, store=534.765625) before normal moving and eating
-->3-Sheep (y=88, x=113, store=544.765625) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=76, x=117, store=392.916259765625) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=76, x=117, store=392.916259765625). Will move normally and eat
-->4-Sheep (y=76, x=117, store=392.916259765625) before normal moving and eating
-->4-Sheep (y=77, x=118, store=402.916259765625) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=89, x=79, store=312.1875) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=89, x=79, store=312.1875). Will move normally and eat
-->5-Sheep (y=89, x=79, store=312.1875) before normal moving and eating
-->5-Sheep (y=90, x=78, store=322.1875) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=89, x=81, store=322.1875) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=89, x=81, store=322.1875). Will move normally and eat
-->6-Sheep (y=89, x=81, store=322.1875) before normal moving and eating
-->6-Sheep (y=88, x=80, store=332.1875) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=85, x=120, store=550.3521728515625) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=85, x=120, store=550.3521728515625). Will move normally and eat
-->7-Sheep (y=85, x=120, store=550.3521728515625) before normal moving and eating
-->7-Sheep (y=84, x=119, store=560.3521728515625) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________


-> ------------ 8-Sheep initialised with (y=99, x=89, store=400) -----------
--> 8-Sheep looping with 0-Wolf.
--> 8-Sheep looping with 1-Wolf.
--> 8-Sheep looping with 2-Wolf.
--> 8-Sheep looping with 3-Wolf.
--> 8-Sheep looping with 4-Wolf.
--> 8-Sheep looping with 5-Wolf.
--> 8-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->8-Sheep has Store < Min_ernergy(600) (y=99, x=89, store=400). Will move normally and eat
-->8-Sheep (y=99, x=89, store=400) before normal moving and eating
-->8-Sheep (y=100, x=90, store=410) after normal moving and eating
___e2________ 8-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=237, x=42, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=237, x=42, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
---> 0-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=237, x=42, store=100) before normal moving
-->else1 ends: 0-Wolf (y=238, x=41, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=118, x=271, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=118, x=271, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
---> 1-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=118, x=271, store=300) before normal moving
-->else1 ends: 1-Wolf (y=117, x=270, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=216, x=116, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=216, x=116, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
---> 2-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=216, x=116, store=200) before normal moving
-->else1 ends: 2-Wolf (y=215, x=115, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=64, x=10, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=64, x=10, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
---> 3-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=64, x=10, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=63, x=9, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=44, x=1, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=44, x=1, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
---> 4-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=44, x=1, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=43, x=0, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=48, x=2, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=48, x=2, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
---> 5-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=48, x=2, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=47, x=1, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=42, x=10, store=836.0) --------
--> 6-Wolf has >Min_energy(500) store (y=42, x=10, store=836.0) and 0.25 <= random.random() < 0.5. Tries to find food (sheep).
---> 6-Wolf looping with 0-Sheep
---> 6-Wolf looping with 1-Sheep
---> 6-Wolf looping with 2-Sheep
---> 6-Wolf looping with 3-Sheep
---> 6-Wolf looping with 4-Sheep
---> 6-Wolf looping with 5-Sheep
---> 6-Wolf looping with 6-Sheep
---> 6-Wolf looping with 7-Sheep
---> 6-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 6-Wolf (y=42, x=10, store=836.0) before normal moving
-->else1 ends: 6-Wolf (y=41, x=9, store=836.0) after normal moving
....el1___________ 6-Wolf moved normally___________
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 107 ************

-> ------------ 0-Sheep initialised with (y=76, x=62, store=593.4375) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=76, x=62, store=593.4375). Will move normally and eat
-->0-Sheep (y=76, x=62, store=593.4375) before normal moving and eating
-->0-Sheep (y=77, x=63, store=603.4375) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=77, x=115, store=550.3521728515625) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=77, x=115, store=550.3521728515625). Will move normally and eat
-->1-Sheep (y=77, x=115, store=550.3521728515625) before normal moving and eating
-->1-Sheep (y=76, x=116, store=560.3521728515625) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=77, x=64, store=603.4375) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store > Min_ernergy(600) (y=77, x=64, store=603.4375).
--> 2-Sheep looping with 0-Sheep.
--> 2-Sheep looping with 1-Sheep.
--> 2-Sheep looping with 2-Sheep.
----> ---- (AD < D < MD).
----> Min distance=19.1049731745428 for 2-Sheep (y=77, x=64, store=603.4375) with 2-Sheep (y=90, x=78, store=322.1875).
--> 2-Sheep looping with 3-Sheep.
--> 2-Sheep looping with 4-Sheep.
--> 2-Sheep looping with 5-Sheep.
->CS Found!
-> 2-Sheep (y=77, x=64, store=603.4375) before moving closer (while eating) to CS-Sheep: (y=90, x=78, store=322.1875).
-> 2-Wolf (y=83, x=71, store=613.4375) after moving closer (while eating) to CS-Sheep: (y=90, x=78, store=322.1875).
___________ 2-Sheep moved closer CS___________


-> ------------ 3-Sheep initialised with (y=88, x=113, store=544.765625) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=88, x=113, store=544.765625). Will move normally and eat
-->3-Sheep (y=88, x=113, store=544.765625) before normal moving and eating
-->3-Sheep (y=89, x=114, store=554.765625) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=77, x=118, store=402.916259765625) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=77, x=118, store=402.916259765625). Will move normally and eat
-->4-Sheep (y=77, x=118, store=402.916259765625) before normal moving and eating
-->4-Sheep (y=78, x=117, store=412.916259765625) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=90, x=78, store=322.1875) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=90, x=78, store=322.1875). Will move normally and eat
-->5-Sheep (y=90, x=78, store=322.1875) before normal moving and eating
-->5-Sheep (y=91, x=79, store=332.1875) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=88, x=80, store=332.1875) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=88, x=80, store=332.1875). Will move normally and eat
-->6-Sheep (y=88, x=80, store=332.1875) before normal moving and eating
-->6-Sheep (y=89, x=79, store=342.1875) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=84, x=119, store=560.3521728515625) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=84, x=119, store=560.3521728515625). Will move normally and eat
-->7-Sheep (y=84, x=119, store=560.3521728515625) before normal moving and eating
-->7-Sheep (y=83, x=118, store=570.3521728515625) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________


-> ------------ 8-Sheep initialised with (y=100, x=90, store=410) -----------
--> 8-Sheep looping with 0-Wolf.
--> 8-Sheep looping with 1-Wolf.
--> 8-Sheep looping with 2-Wolf.
--> 8-Sheep looping with 3-Wolf.
--> 8-Sheep looping with 4-Wolf.
--> 8-Sheep looping with 5-Wolf.
--> 8-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->8-Sheep has Store < Min_ernergy(600) (y=100, x=90, store=410). Will move normally and eat
-->8-Sheep (y=100, x=90, store=410) before normal moving and eating
-->8-Sheep (y=101, x=89, store=420) after normal moving and eating
___e2________ 8-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=238, x=41, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=238, x=41, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
---> 0-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=238, x=41, store=100) before normal moving
-->else1 ends: 0-Wolf (y=237, x=40, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=117, x=270, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=117, x=270, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
---> 1-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=117, x=270, store=300) before normal moving
-->else1 ends: 1-Wolf (y=116, x=269, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=215, x=115, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=215, x=115, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
---> 2-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=215, x=115, store=200) before normal moving
-->else1 ends: 2-Wolf (y=214, x=114, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=63, x=9, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=63, x=9, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
---> 3-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=63, x=9, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=64, x=10, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=43, x=0, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=43, x=0, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
---> 4-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=43, x=0, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=42, x=1, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=47, x=1, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=47, x=1, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
---> 5-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=47, x=1, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=48, x=0, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=41, x=9, store=836.0) --------
--> if and elif not satisfied
--> 6-Wolf has > Min_energy(500) store (y=41, x=9, store=836.0) but Random < bf_e/2(0.25). So will move normally.
--->else3 begins: 6-Wolf (y=41, x=9, store=836.0) before normal moving.
--->else3 begins: 6-Wolf (y=40, x=10, store=836.0) after normal moving.
....e3_______ 6-Wolf moved normally_______
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 108 ************

-> ------------ 0-Sheep initialised with (y=77, x=63, store=603.4375) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store > Min_ernergy(600) (y=77, x=63, store=603.4375).
--> 0-Sheep looping with 0-Sheep.
--> 0-Sheep looping with 1-Sheep.
----> ---- (AD < D < MD).
----> Min distance=10.0 for 0-Sheep (y=77, x=63, store=603.4375) with 1-Sheep (y=83, x=71, store=613.4375).
--> 0-Sheep looping with 2-Sheep.
--> 0-Sheep looping with 3-Sheep.
--> 0-Sheep looping with 4-Sheep.
--> 0-Sheep looping with 5-Sheep.
--> 0-Sheep looping with 6-Sheep.
--> 0-Sheep looping with 7-Sheep.
->CS Found!
-> 0-Sheep (y=77, x=63, store=603.4375) before moving closer (while eating) to CS-Sheep: (y=83, x=71, store=613.4375).
-> 0-Wolf (y=80, x=67, store=613.4375) after moving closer (while eating) to CS-Sheep: (y=83, x=71, store=613.4375).
___________ 0-Sheep moved closer CS___________


-> ------------ 1-Sheep initialised with (y=76, x=116, store=560.3521728515625) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=76, x=116, store=560.3521728515625). Will move normally and eat
-->1-Sheep (y=76, x=116, store=560.3521728515625) before normal moving and eating
-->1-Sheep (y=75, x=117, store=570.3521728515625) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=83, x=71, store=613.4375) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store > Min_ernergy(600) (y=83, x=71, store=613.4375).
--> 2-Sheep looping with 0-Sheep.
--> 2-Sheep looping with 1-Sheep.
--> 2-Sheep looping with 2-Sheep.
----> ---- (AD < D < MD).
----> Min distance=11.313708498984761 for 2-Sheep (y=83, x=71, store=613.4375) with 2-Sheep (y=91, x=79, store=332.1875).
--> 2-Sheep looping with 3-Sheep.
----> ---- (AD < D < MD).
----> Min distance=10.0 for 2-Sheep (y=83, x=71, store=613.4375) with 3-Sheep (y=89, x=79, store=342.1875).
--> 2-Sheep looping with 4-Sheep.
--> 2-Sheep looping with 5-Sheep.
->CS Found!
-> 2-Sheep (y=83, x=71, store=613.4375) before moving closer (while eating) to CS-Sheep: (y=89, x=79, store=342.1875).
-> 2-Wolf (y=86, x=75, store=623.4375) after moving closer (while eating) to CS-Sheep: (y=89, x=79, store=342.1875).
___________ 2-Sheep moved closer CS___________


-> ------------ 3-Sheep initialised with (y=89, x=114, store=554.765625) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=89, x=114, store=554.765625). Will move normally and eat
-->3-Sheep (y=89, x=114, store=554.765625) before normal moving and eating
-->3-Sheep (y=90, x=113, store=564.765625) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=78, x=117, store=412.916259765625) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=78, x=117, store=412.916259765625). Will move normally and eat
-->4-Sheep (y=78, x=117, store=412.916259765625) before normal moving and eating
-->4-Sheep (y=77, x=118, store=422.916259765625) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=91, x=79, store=332.1875) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=91, x=79, store=332.1875). Will move normally and eat
-->5-Sheep (y=91, x=79, store=332.1875) before normal moving and eating
-->5-Sheep (y=92, x=78, store=342.1875) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=89, x=79, store=342.1875) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=89, x=79, store=342.1875). Will move normally and eat
-->6-Sheep (y=89, x=79, store=342.1875) before normal moving and eating
-->6-Sheep (y=90, x=78, store=352.1875) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=83, x=118, store=570.3521728515625) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=83, x=118, store=570.3521728515625). Will move normally and eat
-->7-Sheep (y=83, x=118, store=570.3521728515625) before normal moving and eating
-->7-Sheep (y=82, x=117, store=580.3521728515625) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________


-> ------------ 8-Sheep initialised with (y=101, x=89, store=420) -----------
--> 8-Sheep looping with 0-Wolf.
--> 8-Sheep looping with 1-Wolf.
--> 8-Sheep looping with 2-Wolf.
--> 8-Sheep looping with 3-Wolf.
--> 8-Sheep looping with 4-Wolf.
--> 8-Sheep looping with 5-Wolf.
--> 8-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->8-Sheep has Store < Min_ernergy(600) (y=101, x=89, store=420). Will move normally and eat
-->8-Sheep (y=101, x=89, store=420) before normal moving and eating
-->8-Sheep (y=100, x=88, store=430) after normal moving and eating
___e2________ 8-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=237, x=40, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=237, x=40, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
---> 0-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=237, x=40, store=100) before normal moving
-->else1 ends: 0-Wolf (y=238, x=41, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=116, x=269, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=116, x=269, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
---> 1-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=116, x=269, store=300) before normal moving
-->else1 ends: 1-Wolf (y=115, x=268, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=214, x=114, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=214, x=114, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
---> 2-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=214, x=114, store=200) before normal moving
-->else1 ends: 2-Wolf (y=215, x=113, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=64, x=10, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=64, x=10, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
---> 3-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=64, x=10, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=65, x=11, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=42, x=1, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=42, x=1, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
---> 4-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=42, x=1, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=43, x=0, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=48, x=0, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=48, x=0, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
---> 5-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=48, x=0, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=49, x=1, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=40, x=10, store=836.0) --------
--> 6-Wolf has >Min_energy(500) store (y=40, x=10, store=836.0) and 0.25 <= random.random() < 0.5. Tries to find food (sheep).
---> 6-Wolf looping with 0-Sheep
---> 6-Wolf looping with 1-Sheep
---> 6-Wolf looping with 2-Sheep
---> 6-Wolf looping with 3-Sheep
---> 6-Wolf looping with 4-Sheep
---> 6-Wolf looping with 5-Sheep
---> 6-Wolf looping with 6-Sheep
---> 6-Wolf looping with 7-Sheep
---> 6-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 6-Wolf (y=40, x=10, store=836.0) before normal moving
-->else1 ends: 6-Wolf (y=39, x=9, store=836.0) after normal moving
....el1___________ 6-Wolf moved normally___________
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 109 ************

-> ------------ 0-Sheep initialised with (y=80, x=67, store=613.4375) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store > Min_ernergy(600) (y=80, x=67, store=613.4375).
--> 0-Sheep looping with 0-Sheep.
--> 0-Sheep looping with 1-Sheep.
----> ---- (AD < D < MD).
----> Min distance=10.0 for 0-Sheep (y=80, x=67, store=613.4375) with 1-Sheep (y=86, x=75, store=623.4375).
--> 0-Sheep looping with 2-Sheep.
--> 0-Sheep looping with 3-Sheep.
--> 0-Sheep looping with 4-Sheep.
--> 0-Sheep looping with 5-Sheep.
--> 0-Sheep looping with 6-Sheep.
--> 0-Sheep looping with 7-Sheep.
->CS Found!
-> 0-Sheep (y=80, x=67, store=613.4375) before moving closer (while eating) to CS-Sheep: (y=86, x=75, store=623.4375).
-> 0-Wolf (y=83, x=71, store=623.4375) after moving closer (while eating) to CS-Sheep: (y=86, x=75, store=623.4375).
___________ 0-Sheep moved closer CS___________


-> ------------ 1-Sheep initialised with (y=75, x=117, store=570.3521728515625) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=75, x=117, store=570.3521728515625). Will move normally and eat
-->1-Sheep (y=75, x=117, store=570.3521728515625) before normal moving and eating
-->1-Sheep (y=74, x=116, store=580.3521728515625) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=86, x=75, store=623.4375) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store > Min_ernergy(600) (y=86, x=75, store=623.4375).
--> 2-Sheep looping with 0-Sheep.
--> 2-Sheep looping with 1-Sheep.
--> 2-Sheep looping with 2-Sheep.
----> ---- (AD < D < MD).
----> Min distance=6.708203932499369 for 2-Sheep (y=86, x=75, store=623.4375) with 2-Sheep (y=92, x=78, store=342.1875).
--> 2-Sheep looping with 3-Sheep.
----> D <=AD. Sheep Breeding/Sharing proximity of 5.0(<=5) entered by CS 2-Sheep (y=86, x=75, store=623.4375) with CS 3-Sheep (y=90, x=78, store=352.1875).
-----> 2-Sheep (y=86, x=75, store=623.4375) and CS 3-Sheep (y=90, x=78, store=352.1875 will not mate as CS 3-Sheep store <600. They will share resource to become average.
-----> Shared resources = True
-----> 2-Sheep (y=86, x=75, store=487.8125) and CS 3-Sheep (y=90, x=78, store=487.8125) after sharing resources!
_____________ 2-Sheep and CS 3-Sheep shared resources ____________
_______ Breeding=False, Failed breeding=False, Share=True for 2-Sheep __________

-> ------------ 3-Sheep initialised with (y=90, x=113, store=564.765625) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=90, x=113, store=564.765625). Will move normally and eat
-->3-Sheep (y=90, x=113, store=564.765625) before normal moving and eating
-->3-Sheep (y=89, x=114, store=574.765625) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=77, x=118, store=422.916259765625) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=77, x=118, store=422.916259765625). Will move normally and eat
-->4-Sheep (y=77, x=118, store=422.916259765625) before normal moving and eating
-->4-Sheep (y=78, x=117, store=432.916259765625) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=92, x=78, store=342.1875) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=92, x=78, store=342.1875). Will move normally and eat
-->5-Sheep (y=92, x=78, store=342.1875) before normal moving and eating
-->5-Sheep (y=91, x=79, store=352.1875) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=90, x=78, store=487.8125) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=90, x=78, store=487.8125). Will move normally and eat
-->6-Sheep (y=90, x=78, store=487.8125) before normal moving and eating
-->6-Sheep (y=91, x=79, store=497.8125) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=82, x=117, store=580.3521728515625) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=82, x=117, store=580.3521728515625). Will move normally and eat
-->7-Sheep (y=82, x=117, store=580.3521728515625) before normal moving and eating
-->7-Sheep (y=81, x=118, store=590.3521728515625) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________


-> ------------ 8-Sheep initialised with (y=100, x=88, store=430) -----------
--> 8-Sheep looping with 0-Wolf.
--> 8-Sheep looping with 1-Wolf.
--> 8-Sheep looping with 2-Wolf.
--> 8-Sheep looping with 3-Wolf.
--> 8-Sheep looping with 4-Wolf.
--> 8-Sheep looping with 5-Wolf.
--> 8-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->8-Sheep has Store < Min_ernergy(600) (y=100, x=88, store=430). Will move normally and eat
-->8-Sheep (y=100, x=88, store=430) before normal moving and eating
-->8-Sheep (y=99, x=89, store=440) after normal moving and eating
___e2________ 8-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=238, x=41, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=238, x=41, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
---> 0-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=238, x=41, store=100) before normal moving
-->else1 ends: 0-Wolf (y=237, x=42, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=115, x=268, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=115, x=268, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
---> 1-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=115, x=268, store=300) before normal moving
-->else1 ends: 1-Wolf (y=116, x=269, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=215, x=113, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=215, x=113, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
---> 2-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=215, x=113, store=200) before normal moving
-->else1 ends: 2-Wolf (y=214, x=114, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=65, x=11, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=65, x=11, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
---> 3-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=65, x=11, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=66, x=10, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=43, x=0, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=43, x=0, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
---> 4-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=43, x=0, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=44, x=0, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=49, x=1, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=49, x=1, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
---> 5-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=49, x=1, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=48, x=0, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=39, x=9, store=836.0) --------
--> 6-Wolf has > 500 store (y=39, x=9, store=836.0) and Random >= 0.5. so will try to find CW to move closer or breed/fight if within AD(5).
-> No CW found. although store >500 and p>=0.5!
--->else2 begins: 6-Wolf (y=39, x=9, store=836.0) before normal moving.
--->else2 begins: 6-Wolf (y=40, x=10, store=836.0) after normal moving.
.... el2 _______  6-Wolf moved normally _______ 
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 110 ************

-> ------------ 0-Sheep initialised with (y=83, x=71, store=623.4375) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store > Min_ernergy(600) (y=83, x=71, store=623.4375).
--> 0-Sheep looping with 0-Sheep.
--> 0-Sheep looping with 1-Sheep.
----> D <=AD. Sheep Breeding/Sharing proximity of 5.0(<=5) entered by CS 0-Sheep (y=83, x=71, store=623.4375) with CS 1-Sheep (y=86, x=75, store=487.8125).
-----> 0-Sheep (y=83, x=71, store=623.4375) and CS 1-Sheep (y=86, x=75, store=487.8125 will not mate as CS 1-Sheep store <600. They will share resource to become average.
-----> Shared resources = True
-----> 0-Sheep (y=83, x=71, store=555.625) and CS 1-Sheep (y=86, x=75, store=555.625) after sharing resources!
_____________ 0-Sheep and CS 1-Sheep shared resources ____________
_______ Breeding=False, Failed breeding=False, Share=True for 0-Sheep __________

-> ------------ 1-Sheep initialised with (y=74, x=116, store=580.3521728515625) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=74, x=116, store=580.3521728515625). Will move normally and eat
-->1-Sheep (y=74, x=116, store=580.3521728515625) before normal moving and eating
-->1-Sheep (y=73, x=117, store=590.3521728515625) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=86, x=75, store=555.625) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=86, x=75, store=555.625). Will move normally and eat
-->2-Sheep (y=86, x=75, store=555.625) before normal moving and eating
-->2-Sheep (y=85, x=74, store=565.625) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=89, x=114, store=574.765625) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=89, x=114, store=574.765625). Will move normally and eat
-->3-Sheep (y=89, x=114, store=574.765625) before normal moving and eating
-->3-Sheep (y=90, x=115, store=584.765625) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=78, x=117, store=432.916259765625) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=78, x=117, store=432.916259765625). Will move normally and eat
-->4-Sheep (y=78, x=117, store=432.916259765625) before normal moving and eating
-->4-Sheep (y=79, x=118, store=442.916259765625) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=91, x=79, store=352.1875) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=91, x=79, store=352.1875). Will move normally and eat
-->5-Sheep (y=91, x=79, store=352.1875) before normal moving and eating
-->5-Sheep (y=92, x=78, store=362.1875) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=91, x=79, store=497.8125) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=91, x=79, store=497.8125). Will move normally and eat
-->6-Sheep (y=91, x=79, store=497.8125) before normal moving and eating
-->6-Sheep (y=92, x=80, store=507.8125) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=81, x=118, store=590.3521728515625) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=81, x=118, store=590.3521728515625). Will move normally and eat
-->7-Sheep (y=81, x=118, store=590.3521728515625) before normal moving and eating
-->7-Sheep (y=80, x=117, store=600.3521728515625) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________


-> ------------ 8-Sheep initialised with (y=99, x=89, store=440) -----------
--> 8-Sheep looping with 0-Wolf.
--> 8-Sheep looping with 1-Wolf.
--> 8-Sheep looping with 2-Wolf.
--> 8-Sheep looping with 3-Wolf.
--> 8-Sheep looping with 4-Wolf.
--> 8-Sheep looping with 5-Wolf.
--> 8-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->8-Sheep has Store < Min_ernergy(600) (y=99, x=89, store=440). Will move normally and eat
-->8-Sheep (y=99, x=89, store=440) before normal moving and eating
-->8-Sheep (y=98, x=88, store=450) after normal moving and eating
___e2________ 8-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=237, x=42, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=237, x=42, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
---> 0-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=237, x=42, store=100) before normal moving
-->else1 ends: 0-Wolf (y=236, x=43, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=116, x=269, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=116, x=269, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
---> 1-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=116, x=269, store=300) before normal moving
-->else1 ends: 1-Wolf (y=115, x=270, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=214, x=114, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=214, x=114, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
---> 2-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=214, x=114, store=200) before normal moving
-->else1 ends: 2-Wolf (y=213, x=113, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=66, x=10, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=66, x=10, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
---> 3-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=66, x=10, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=67, x=11, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=44, x=0, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=44, x=0, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
---> 4-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=44, x=0, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=43, x=1, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=48, x=0, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=48, x=0, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
---> 5-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=48, x=0, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=49, x=1, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=40, x=10, store=836.0) --------
--> 6-Wolf has > 500 store (y=40, x=10, store=836.0) and Random >= 0.5. so will try to find CW to move closer or breed/fight if within AD(5).
-> No CW found. although store >500 and p>=0.5!
--->else2 begins: 6-Wolf (y=40, x=10, store=836.0) before normal moving.
--->else2 begins: 6-Wolf (y=41, x=9, store=836.0) after normal moving.
.... el2 _______  6-Wolf moved normally _______ 
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 111 ************

-> ------------ 0-Sheep initialised with (y=83, x=71, store=555.625) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=83, x=71, store=555.625). Will move normally and eat
-->0-Sheep (y=83, x=71, store=555.625) before normal moving and eating
-->0-Sheep (y=82, x=72, store=565.625) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=73, x=117, store=590.3521728515625) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=73, x=117, store=590.3521728515625). Will move normally and eat
-->1-Sheep (y=73, x=117, store=590.3521728515625) before normal moving and eating
-->1-Sheep (y=72, x=116, store=600.3521728515625) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=85, x=74, store=565.625) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=85, x=74, store=565.625). Will move normally and eat
-->2-Sheep (y=85, x=74, store=565.625) before normal moving and eating
-->2-Sheep (y=86, x=73, store=575.625) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=90, x=115, store=584.765625) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=90, x=115, store=584.765625). Will move normally and eat
-->3-Sheep (y=90, x=115, store=584.765625) before normal moving and eating
-->3-Sheep (y=91, x=116, store=594.765625) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=79, x=118, store=442.916259765625) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=79, x=118, store=442.916259765625). Will move normally and eat
-->4-Sheep (y=79, x=118, store=442.916259765625) before normal moving and eating
-->4-Sheep (y=80, x=117, store=452.916259765625) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=92, x=78, store=362.1875) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=92, x=78, store=362.1875). Will move normally and eat
-->5-Sheep (y=92, x=78, store=362.1875) before normal moving and eating
-->5-Sheep (y=91, x=77, store=372.1875) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=92, x=80, store=507.8125) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=92, x=80, store=507.8125). Will move normally and eat
-->6-Sheep (y=92, x=80, store=507.8125) before normal moving and eating
-->6-Sheep (y=91, x=81, store=517.8125) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=80, x=117, store=600.3521728515625) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store > Min_ernergy(600) (y=80, x=117, store=600.3521728515625).
--> 7-Sheep looping with 0-Sheep.
-> NO CS Found.
-> 7-Sheep (y=80, x=117, store=600.3521728515625) before normally moving and eating.
-> 7-Sheep (y=81, x=116, store=610.3521728515625) after normally moving and eating.
___e1________ 7-Sheep moved normally and ate ___________


-> ------------ 8-Sheep initialised with (y=98, x=88, store=450) -----------
--> 8-Sheep looping with 0-Wolf.
--> 8-Sheep looping with 1-Wolf.
--> 8-Sheep looping with 2-Wolf.
--> 8-Sheep looping with 3-Wolf.
--> 8-Sheep looping with 4-Wolf.
--> 8-Sheep looping with 5-Wolf.
--> 8-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->8-Sheep has Store < Min_ernergy(600) (y=98, x=88, store=450). Will move normally and eat
-->8-Sheep (y=98, x=88, store=450) before normal moving and eating
-->8-Sheep (y=97, x=89, store=460) after normal moving and eating
___e2________ 8-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=236, x=43, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=236, x=43, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
---> 0-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=236, x=43, store=100) before normal moving
-->else1 ends: 0-Wolf (y=235, x=42, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=115, x=270, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=115, x=270, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
---> 1-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=115, x=270, store=300) before normal moving
-->else1 ends: 1-Wolf (y=116, x=271, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=213, x=113, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=213, x=113, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
---> 2-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=213, x=113, store=200) before normal moving
-->else1 ends: 2-Wolf (y=214, x=112, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=67, x=11, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=67, x=11, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
---> 3-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=67, x=11, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=66, x=10, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=43, x=1, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=43, x=1, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
---> 4-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=43, x=1, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=44, x=2, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=49, x=1, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=49, x=1, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
---> 5-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=49, x=1, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=48, x=0, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=41, x=9, store=836.0) --------
--> if and elif not satisfied
--> 6-Wolf has > Min_energy(500) store (y=41, x=9, store=836.0) but Random < bf_e/2(0.25). So will move normally.
--->else3 begins: 6-Wolf (y=41, x=9, store=836.0) before normal moving.
--->else3 begins: 6-Wolf (y=40, x=8, store=836.0) after normal moving.
....e3_______ 6-Wolf moved normally_______
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 112 ************

-> ------------ 0-Sheep initialised with (y=82, x=72, store=565.625) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=82, x=72, store=565.625). Will move normally and eat
-->0-Sheep (y=82, x=72, store=565.625) before normal moving and eating
-->0-Sheep (y=83, x=71, store=575.625) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=72, x=116, store=600.3521728515625) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store > Min_ernergy(600) (y=72, x=116, store=600.3521728515625).
--> 1-Sheep looping with 0-Sheep.
--> 1-Sheep looping with 1-Sheep.
----> ---- (AD < D < MD).
----> Min distance=19.0 for 1-Sheep (y=72, x=116, store=600.3521728515625) with 1-Sheep (y=91, x=116, store=594.765625).
--> 1-Sheep looping with 2-Sheep.
----> ---- (AD < D < MD).
----> Min distance=8.06225774829855 for 1-Sheep (y=72, x=116, store=600.3521728515625) with 2-Sheep (y=80, x=117, store=452.916259765625).
--> 1-Sheep looping with 3-Sheep.
--> 1-Sheep looping with 4-Sheep.
--> 1-Sheep looping with 5-Sheep.
--> 1-Sheep looping with 6-Sheep.
->CS Found!
-> 1-Sheep (y=72, x=116, store=600.3521728515625) before moving closer (while eating) to CS-Sheep: (y=80, x=117, store=452.916259765625).
-> 1-Wolf (y=76, x=116, store=610.3521728515625) after moving closer (while eating) to CS-Sheep: (y=80, x=117, store=452.916259765625).
___________ 1-Sheep moved closer CS___________


-> ------------ 2-Sheep initialised with (y=86, x=73, store=575.625) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=86, x=73, store=575.625). Will move normally and eat
-->2-Sheep (y=86, x=73, store=575.625) before normal moving and eating
-->2-Sheep (y=85, x=72, store=585.625) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=91, x=116, store=594.765625) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=91, x=116, store=594.765625). Will move normally and eat
-->3-Sheep (y=91, x=116, store=594.765625) before normal moving and eating
-->3-Sheep (y=90, x=117, store=604.765625) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=80, x=117, store=452.916259765625) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=80, x=117, store=452.916259765625). Will move normally and eat
-->4-Sheep (y=80, x=117, store=452.916259765625) before normal moving and eating
-->4-Sheep (y=79, x=116, store=462.916259765625) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=91, x=77, store=372.1875) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=91, x=77, store=372.1875). Will move normally and eat
-->5-Sheep (y=91, x=77, store=372.1875) before normal moving and eating
-->5-Sheep (y=92, x=76, store=382.1875) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=91, x=81, store=517.8125) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=91, x=81, store=517.8125). Will move normally and eat
-->6-Sheep (y=91, x=81, store=517.8125) before normal moving and eating
-->6-Sheep (y=92, x=82, store=527.8125) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=81, x=116, store=610.3521728515625) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store > Min_ernergy(600) (y=81, x=116, store=610.3521728515625).
--> 7-Sheep looping with 0-Sheep.
-> NO CS Found.
-> 7-Sheep (y=81, x=116, store=610.3521728515625) before normally moving and eating.
-> 7-Sheep (y=82, x=115, store=620.3521728515625) after normally moving and eating.
___e1________ 7-Sheep moved normally and ate ___________


-> ------------ 8-Sheep initialised with (y=97, x=89, store=460) -----------
--> 8-Sheep looping with 0-Wolf.
--> 8-Sheep looping with 1-Wolf.
--> 8-Sheep looping with 2-Wolf.
--> 8-Sheep looping with 3-Wolf.
--> 8-Sheep looping with 4-Wolf.
--> 8-Sheep looping with 5-Wolf.
--> 8-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->8-Sheep has Store < Min_ernergy(600) (y=97, x=89, store=460). Will move normally and eat
-->8-Sheep (y=97, x=89, store=460) before normal moving and eating
-->8-Sheep (y=96, x=90, store=470) after normal moving and eating
___e2________ 8-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=235, x=42, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=235, x=42, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
---> 0-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=235, x=42, store=100) before normal moving
-->else1 ends: 0-Wolf (y=236, x=41, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=116, x=271, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=116, x=271, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
---> 1-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=116, x=271, store=300) before normal moving
-->else1 ends: 1-Wolf (y=115, x=270, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=214, x=112, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=214, x=112, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
---> 2-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=214, x=112, store=200) before normal moving
-->else1 ends: 2-Wolf (y=215, x=111, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=66, x=10, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=66, x=10, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
---> 3-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=66, x=10, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=67, x=11, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=44, x=2, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=44, x=2, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
---> 4-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=44, x=2, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=43, x=1, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=48, x=0, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=48, x=0, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
---> 5-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=48, x=0, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=49, x=1, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=40, x=8, store=836.0) --------
--> if and elif not satisfied
--> 6-Wolf has > Min_energy(500) store (y=40, x=8, store=836.0) but Random < bf_e/2(0.25). So will move normally.
--->else3 begins: 6-Wolf (y=40, x=8, store=836.0) before normal moving.
--->else3 begins: 6-Wolf (y=41, x=7, store=836.0) after normal moving.
....e3_______ 6-Wolf moved normally_______
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 113 ************

-> ------------ 0-Sheep initialised with (y=83, x=71, store=575.625) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=83, x=71, store=575.625). Will move normally and eat
-->0-Sheep (y=83, x=71, store=575.625) before normal moving and eating
-->0-Sheep (y=82, x=72, store=585.625) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=76, x=116, store=610.3521728515625) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store > Min_ernergy(600) (y=76, x=116, store=610.3521728515625).
--> 1-Sheep looping with 0-Sheep.
--> 1-Sheep looping with 1-Sheep.
----> ---- (AD < D < MD).
----> Min distance=14.035668847618199 for 1-Sheep (y=76, x=116, store=610.3521728515625) with 1-Sheep (y=90, x=117, store=604.765625).
--> 1-Sheep looping with 2-Sheep.
----> D <=AD. Sheep Breeding/Sharing proximity of 3.0(<=5) entered by CS 1-Sheep (y=76, x=116, store=610.3521728515625) with CS 2-Sheep (y=79, x=116, store=462.916259765625).
-----> 1-Sheep (y=76, x=116, store=610.3521728515625) and CS 2-Sheep (y=79, x=116, store=462.916259765625 will not mate as CS 2-Sheep store <600. They will share resource to become average.
-----> Shared resources = True
-----> 1-Sheep (y=76, x=116, store=536.6342163085938) and CS 2-Sheep (y=79, x=116, store=536.6342163085938) after sharing resources!
_____________ 1-Sheep and CS 2-Sheep shared resources ____________
_______ Breeding=False, Failed breeding=False, Share=True for 1-Sheep __________

-> ------------ 2-Sheep initialised with (y=85, x=72, store=585.625) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=85, x=72, store=585.625). Will move normally and eat
-->2-Sheep (y=85, x=72, store=585.625) before normal moving and eating
-->2-Sheep (y=84, x=71, store=595.625) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=90, x=117, store=604.765625) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store > Min_ernergy(600) (y=90, x=117, store=604.765625).
--> 3-Sheep looping with 0-Sheep.
----> ---- (AD < D < MD).
----> Min distance=11.045361017187261 for 3-Sheep (y=90, x=117, store=604.765625) with 0-Sheep (y=79, x=116, store=536.6342163085938).
--> 3-Sheep looping with 1-Sheep.
--> 3-Sheep looping with 2-Sheep.
--> 3-Sheep looping with 3-Sheep.
----> ---- (AD < D < MD).
----> Min distance=8.246211251235321 for 3-Sheep (y=90, x=117, store=604.765625) with 3-Sheep (y=82, x=115, store=620.3521728515625).
--> 3-Sheep looping with 4-Sheep.
->CS Found!
-> 3-Sheep (y=90, x=117, store=604.765625) before moving closer (while eating) to CS-Sheep: (y=82, x=115, store=620.3521728515625).
-> 3-Wolf (y=86, x=116, store=614.765625) after moving closer (while eating) to CS-Sheep: (y=82, x=115, store=620.3521728515625).
___________ 3-Sheep moved closer CS___________


-> ------------ 4-Sheep initialised with (y=79, x=116, store=536.6342163085938) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=79, x=116, store=536.6342163085938). Will move normally and eat
-->4-Sheep (y=79, x=116, store=536.6342163085938) before normal moving and eating
-->4-Sheep (y=78, x=117, store=546.6342163085938) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=92, x=76, store=382.1875) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=92, x=76, store=382.1875). Will move normally and eat
-->5-Sheep (y=92, x=76, store=382.1875) before normal moving and eating
-->5-Sheep (y=91, x=75, store=392.1875) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=92, x=82, store=527.8125) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=92, x=82, store=527.8125). Will move normally and eat
-->6-Sheep (y=92, x=82, store=527.8125) before normal moving and eating
-->6-Sheep (y=93, x=83, store=537.8125) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=82, x=115, store=620.3521728515625) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store > Min_ernergy(600) (y=82, x=115, store=620.3521728515625).
--> 7-Sheep looping with 0-Sheep.
-> NO CS Found.
-> 7-Sheep (y=82, x=115, store=620.3521728515625) before normally moving and eating.
-> 7-Sheep (y=83, x=114, store=630.3521728515625) after normally moving and eating.
___e1________ 7-Sheep moved normally and ate ___________


-> ------------ 8-Sheep initialised with (y=96, x=90, store=470) -----------
--> 8-Sheep looping with 0-Wolf.
--> 8-Sheep looping with 1-Wolf.
--> 8-Sheep looping with 2-Wolf.
--> 8-Sheep looping with 3-Wolf.
--> 8-Sheep looping with 4-Wolf.
--> 8-Sheep looping with 5-Wolf.
--> 8-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->8-Sheep has Store < Min_ernergy(600) (y=96, x=90, store=470). Will move normally and eat
-->8-Sheep (y=96, x=90, store=470) before normal moving and eating
-->8-Sheep (y=95, x=89, store=480) after normal moving and eating
___e2________ 8-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=236, x=41, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=236, x=41, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
---> 0-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=236, x=41, store=100) before normal moving
-->else1 ends: 0-Wolf (y=235, x=40, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=115, x=270, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=115, x=270, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
---> 1-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=115, x=270, store=300) before normal moving
-->else1 ends: 1-Wolf (y=114, x=269, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=215, x=111, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=215, x=111, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
---> 2-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=215, x=111, store=200) before normal moving
-->else1 ends: 2-Wolf (y=216, x=110, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=67, x=11, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=67, x=11, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
---> 3-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=67, x=11, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=66, x=12, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=43, x=1, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=43, x=1, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
---> 4-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=43, x=1, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=44, x=2, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=49, x=1, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=49, x=1, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
---> 5-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=49, x=1, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=50, x=2, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=41, x=7, store=836.0) --------
--> 6-Wolf has > 500 store (y=41, x=7, store=836.0) and Random >= 0.5. so will try to find CW to move closer or breed/fight if within AD(5).
-> No CW found. although store >500 and p>=0.5!
--->else2 begins: 6-Wolf (y=41, x=7, store=836.0) before normal moving.
--->else2 begins: 6-Wolf (y=40, x=8, store=836.0) after normal moving.
.... el2 _______  6-Wolf moved normally _______ 
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 114 ************

-> ------------ 0-Sheep initialised with (y=82, x=72, store=585.625) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=82, x=72, store=585.625). Will move normally and eat
-->0-Sheep (y=82, x=72, store=585.625) before normal moving and eating
-->0-Sheep (y=81, x=73, store=595.625) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=76, x=116, store=536.6342163085938) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=76, x=116, store=536.6342163085938). Will move normally and eat
-->1-Sheep (y=76, x=116, store=536.6342163085938) before normal moving and eating
-->1-Sheep (y=77, x=117, store=546.6342163085938) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=84, x=71, store=595.625) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=84, x=71, store=595.625). Will move normally and eat
-->2-Sheep (y=84, x=71, store=595.625) before normal moving and eating
-->2-Sheep (y=83, x=72, store=605.625) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=86, x=116, store=614.765625) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store > Min_ernergy(600) (y=86, x=116, store=614.765625).
--> 3-Sheep looping with 0-Sheep.
----> ---- (AD < D < MD).
----> Min distance=8.06225774829855 for 3-Sheep (y=86, x=116, store=614.765625) with 0-Sheep (y=78, x=117, store=546.6342163085938).
--> 3-Sheep looping with 1-Sheep.
--> 3-Sheep looping with 2-Sheep.
--> 3-Sheep looping with 3-Sheep.
----> D <=AD. Sheep Breeding/Sharing proximity of 3.605551275463989(<=5) entered by CS 3-Sheep (y=86, x=116, store=614.765625) with CS 3-Sheep (y=83, x=114, store=630.3521728515625).
----->3-Sheep (y=86, x=116, store=614.765625) and CS 3-Sheep (y=83, x=114, store=630.3521728515625 have > Min_energy (600) store. So they will try breeding if p>0.5
------>1.B Random <0.5. So the breeding will fail.
------> 3-Sheep (y=86, x=116, store=614.765625) before failed breeding with CS 3-Sheep (y=83, x=114, store=630.3521728515625)
------> Failed Sheep Breeding = True
------> 3-Sheep (y=86, x=116, store=311.2794494628906) after failed breeding with CS 3-Sheep (y=83, x=114, store=311.2794494628906).
_____________ 3-Sheep Fail Mated with CS 3-Sheep ____________
_______ Breeding=False, Failed breeding=True, Share=False for 3-Sheep __________

-> ------------ 4-Sheep initialised with (y=78, x=117, store=546.6342163085938) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=78, x=117, store=546.6342163085938). Will move normally and eat
-->4-Sheep (y=78, x=117, store=546.6342163085938) before normal moving and eating
-->4-Sheep (y=77, x=118, store=556.6342163085938) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=91, x=75, store=392.1875) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=91, x=75, store=392.1875). Will move normally and eat
-->5-Sheep (y=91, x=75, store=392.1875) before normal moving and eating
-->5-Sheep (y=92, x=76, store=402.1875) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=93, x=83, store=537.8125) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=93, x=83, store=537.8125). Will move normally and eat
-->6-Sheep (y=93, x=83, store=537.8125) before normal moving and eating
-->6-Sheep (y=92, x=82, store=547.8125) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=83, x=114, store=311.2794494628906) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=83, x=114, store=311.2794494628906). Will move normally and eat
-->7-Sheep (y=83, x=114, store=311.2794494628906) before normal moving and eating
-->7-Sheep (y=84, x=115, store=321.2794494628906) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________


-> ------------ 8-Sheep initialised with (y=95, x=89, store=480) -----------
--> 8-Sheep looping with 0-Wolf.
--> 8-Sheep looping with 1-Wolf.
--> 8-Sheep looping with 2-Wolf.
--> 8-Sheep looping with 3-Wolf.
--> 8-Sheep looping with 4-Wolf.
--> 8-Sheep looping with 5-Wolf.
--> 8-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->8-Sheep has Store < Min_ernergy(600) (y=95, x=89, store=480). Will move normally and eat
-->8-Sheep (y=95, x=89, store=480) before normal moving and eating
-->8-Sheep (y=94, x=88, store=490) after normal moving and eating
___e2________ 8-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=235, x=40, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=235, x=40, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
---> 0-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=235, x=40, store=100) before normal moving
-->else1 ends: 0-Wolf (y=234, x=41, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=114, x=269, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=114, x=269, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
---> 1-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=114, x=269, store=300) before normal moving
-->else1 ends: 1-Wolf (y=115, x=268, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=216, x=110, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=216, x=110, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
---> 2-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=216, x=110, store=200) before normal moving
-->else1 ends: 2-Wolf (y=215, x=111, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=66, x=12, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=66, x=12, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
---> 3-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=66, x=12, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=67, x=13, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=44, x=2, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=44, x=2, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
---> 4-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=44, x=2, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=43, x=1, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=50, x=2, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=50, x=2, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
---> 5-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=50, x=2, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=51, x=3, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=40, x=8, store=836.0) --------
--> 6-Wolf has >Min_energy(500) store (y=40, x=8, store=836.0) and 0.25 <= random.random() < 0.5. Tries to find food (sheep).
---> 6-Wolf looping with 0-Sheep
---> 6-Wolf looping with 1-Sheep
---> 6-Wolf looping with 2-Sheep
---> 6-Wolf looping with 3-Sheep
---> 6-Wolf looping with 4-Sheep
---> 6-Wolf looping with 5-Sheep
---> 6-Wolf looping with 6-Sheep
---> 6-Wolf looping with 7-Sheep
---> 6-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 6-Wolf (y=40, x=8, store=836.0) before normal moving
-->else1 ends: 6-Wolf (y=41, x=9, store=836.0) after normal moving
....el1___________ 6-Wolf moved normally___________
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 115 ************

-> ------------ 0-Sheep initialised with (y=81, x=73, store=595.625) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=81, x=73, store=595.625). Will move normally and eat
-->0-Sheep (y=81, x=73, store=595.625) before normal moving and eating
-->0-Sheep (y=82, x=74, store=605.625) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=77, x=117, store=546.6342163085938) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=77, x=117, store=546.6342163085938). Will move normally and eat
-->1-Sheep (y=77, x=117, store=546.6342163085938) before normal moving and eating
-->1-Sheep (y=76, x=116, store=556.6342163085938) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=83, x=72, store=605.625) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store > Min_ernergy(600) (y=83, x=72, store=605.625).
--> 2-Sheep looping with 0-Sheep.
--> 2-Sheep looping with 1-Sheep.
--> 2-Sheep looping with 2-Sheep.
----> ---- (AD < D < MD).
----> Min distance=9.848857801796104 for 2-Sheep (y=83, x=72, store=605.625) with 2-Sheep (y=92, x=76, store=402.1875).
--> 2-Sheep looping with 3-Sheep.
--> 2-Sheep looping with 4-Sheep.
--> 2-Sheep looping with 5-Sheep.
->CS Found!
-> 2-Sheep (y=83, x=72, store=605.625) before moving closer (while eating) to CS-Sheep: (y=92, x=76, store=402.1875).
-> 2-Wolf (y=87, x=74, store=615.625) after moving closer (while eating) to CS-Sheep: (y=92, x=76, store=402.1875).
___________ 2-Sheep moved closer CS___________


-> ------------ 3-Sheep initialised with (y=86, x=116, store=311.2794494628906) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=86, x=116, store=311.2794494628906). Will move normally and eat
-->3-Sheep (y=86, x=116, store=311.2794494628906) before normal moving and eating
-->3-Sheep (y=85, x=115, store=321.2794494628906) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=77, x=118, store=556.6342163085938) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=77, x=118, store=556.6342163085938). Will move normally and eat
-->4-Sheep (y=77, x=118, store=556.6342163085938) before normal moving and eating
-->4-Sheep (y=76, x=119, store=566.6342163085938) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=92, x=76, store=402.1875) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=92, x=76, store=402.1875). Will move normally and eat
-->5-Sheep (y=92, x=76, store=402.1875) before normal moving and eating
-->5-Sheep (y=93, x=75, store=412.1875) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=92, x=82, store=547.8125) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=92, x=82, store=547.8125). Will move normally and eat
-->6-Sheep (y=92, x=82, store=547.8125) before normal moving and eating
-->6-Sheep (y=93, x=83, store=557.8125) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=84, x=115, store=321.2794494628906) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=84, x=115, store=321.2794494628906). Will move normally and eat
-->7-Sheep (y=84, x=115, store=321.2794494628906) before normal moving and eating
-->7-Sheep (y=85, x=116, store=331.2794494628906) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________


-> ------------ 8-Sheep initialised with (y=94, x=88, store=490) -----------
--> 8-Sheep looping with 0-Wolf.
--> 8-Sheep looping with 1-Wolf.
--> 8-Sheep looping with 2-Wolf.
--> 8-Sheep looping with 3-Wolf.
--> 8-Sheep looping with 4-Wolf.
--> 8-Sheep looping with 5-Wolf.
--> 8-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->8-Sheep has Store < Min_ernergy(600) (y=94, x=88, store=490). Will move normally and eat
-->8-Sheep (y=94, x=88, store=490) before normal moving and eating
-->8-Sheep (y=93, x=89, store=500) after normal moving and eating
___e2________ 8-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=234, x=41, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=234, x=41, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
---> 0-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=234, x=41, store=100) before normal moving
-->else1 ends: 0-Wolf (y=235, x=40, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=115, x=268, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=115, x=268, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
---> 1-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=115, x=268, store=300) before normal moving
-->else1 ends: 1-Wolf (y=116, x=269, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=215, x=111, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=215, x=111, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
---> 2-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=215, x=111, store=200) before normal moving
-->else1 ends: 2-Wolf (y=214, x=112, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=67, x=13, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=67, x=13, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
---> 3-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=67, x=13, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=68, x=12, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=43, x=1, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=43, x=1, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
---> 4-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=43, x=1, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=42, x=2, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=51, x=3, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=51, x=3, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
---> 5-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=51, x=3, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=50, x=2, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=41, x=9, store=836.0) --------
--> 6-Wolf has > 500 store (y=41, x=9, store=836.0) and Random >= 0.5. so will try to find CW to move closer or breed/fight if within AD(5).
-> No CW found. although store >500 and p>=0.5!
--->else2 begins: 6-Wolf (y=41, x=9, store=836.0) before normal moving.
--->else2 begins: 6-Wolf (y=42, x=10, store=836.0) after normal moving.
.... el2 _______  6-Wolf moved normally _______ 
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 116 ************

-> ------------ 0-Sheep initialised with (y=82, x=74, store=605.625) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store > Min_ernergy(600) (y=82, x=74, store=605.625).
--> 0-Sheep looping with 0-Sheep.
--> 0-Sheep looping with 1-Sheep.
----> D <=AD. Sheep Breeding/Sharing proximity of 5.0(<=5) entered by CS 0-Sheep (y=82, x=74, store=605.625) with CS 1-Sheep (y=87, x=74, store=615.625).
----->0-Sheep (y=82, x=74, store=605.625) and CS 1-Sheep (y=87, x=74, store=615.625 have > Min_energy (600) store. So they will try breeding if p>0.5
------>1.B Random <0.5. So the breeding will fail.
------> 0-Sheep (y=82, x=74, store=605.625) before failed breeding with CS 1-Sheep (y=87, x=74, store=615.625)
------> Failed Sheep Breeding = True
------> 0-Sheep (y=82, x=74, store=305.3125) after failed breeding with CS 1-Sheep (y=87, x=74, store=305.3125).
_____________ 0-Sheep Fail Mated with CS 1-Sheep ____________
_______ Breeding=False, Failed breeding=True, Share=False for 0-Sheep __________

-> ------------ 1-Sheep initialised with (y=76, x=116, store=556.6342163085938) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=76, x=116, store=556.6342163085938). Will move normally and eat
-->1-Sheep (y=76, x=116, store=556.6342163085938) before normal moving and eating
-->1-Sheep (y=77, x=117, store=566.6342163085938) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=87, x=74, store=305.3125) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=87, x=74, store=305.3125). Will move normally and eat
-->2-Sheep (y=87, x=74, store=305.3125) before normal moving and eating
-->2-Sheep (y=88, x=75, store=315.3125) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=85, x=115, store=321.2794494628906) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=85, x=115, store=321.2794494628906). Will move normally and eat
-->3-Sheep (y=85, x=115, store=321.2794494628906) before normal moving and eating
-->3-Sheep (y=86, x=114, store=331.2794494628906) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=76, x=119, store=566.6342163085938) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=76, x=119, store=566.6342163085938). Will move normally and eat
-->4-Sheep (y=76, x=119, store=566.6342163085938) before normal moving and eating
-->4-Sheep (y=77, x=118, store=576.6342163085938) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=93, x=75, store=412.1875) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=93, x=75, store=412.1875). Will move normally and eat
-->5-Sheep (y=93, x=75, store=412.1875) before normal moving and eating
-->5-Sheep (y=92, x=74, store=422.1875) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=93, x=83, store=557.8125) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=93, x=83, store=557.8125). Will move normally and eat
-->6-Sheep (y=93, x=83, store=557.8125) before normal moving and eating
-->6-Sheep (y=92, x=82, store=567.8125) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=85, x=116, store=331.2794494628906) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=85, x=116, store=331.2794494628906). Will move normally and eat
-->7-Sheep (y=85, x=116, store=331.2794494628906) before normal moving and eating
-->7-Sheep (y=86, x=117, store=341.2794494628906) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________


-> ------------ 8-Sheep initialised with (y=93, x=89, store=500) -----------
--> 8-Sheep looping with 0-Wolf.
--> 8-Sheep looping with 1-Wolf.
--> 8-Sheep looping with 2-Wolf.
--> 8-Sheep looping with 3-Wolf.
--> 8-Sheep looping with 4-Wolf.
--> 8-Sheep looping with 5-Wolf.
--> 8-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->8-Sheep has Store < Min_ernergy(600) (y=93, x=89, store=500). Will move normally and eat
-->8-Sheep (y=93, x=89, store=500) before normal moving and eating
-->8-Sheep (y=92, x=90, store=510) after normal moving and eating
___e2________ 8-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=235, x=40, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=235, x=40, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
---> 0-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=235, x=40, store=100) before normal moving
-->else1 ends: 0-Wolf (y=236, x=39, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=116, x=269, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=116, x=269, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
---> 1-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=116, x=269, store=300) before normal moving
-->else1 ends: 1-Wolf (y=115, x=270, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=214, x=112, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=214, x=112, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
---> 2-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=214, x=112, store=200) before normal moving
-->else1 ends: 2-Wolf (y=215, x=111, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=68, x=12, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=68, x=12, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
---> 3-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=68, x=12, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=67, x=13, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=42, x=2, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=42, x=2, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
---> 4-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=42, x=2, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=41, x=1, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=50, x=2, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=50, x=2, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
---> 5-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=50, x=2, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=51, x=1, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=42, x=10, store=836.0) --------
--> 6-Wolf has > 500 store (y=42, x=10, store=836.0) and Random >= 0.5. so will try to find CW to move closer or breed/fight if within AD(5).
-> No CW found. although store >500 and p>=0.5!
--->else2 begins: 6-Wolf (y=42, x=10, store=836.0) before normal moving.
--->else2 begins: 6-Wolf (y=43, x=9, store=836.0) after normal moving.
.... el2 _______  6-Wolf moved normally _______ 
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 117 ************

-> ------------ 0-Sheep initialised with (y=82, x=74, store=305.3125) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=82, x=74, store=305.3125). Will move normally and eat
-->0-Sheep (y=82, x=74, store=305.3125) before normal moving and eating
-->0-Sheep (y=83, x=73, store=315.3125) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=77, x=117, store=566.6342163085938) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=77, x=117, store=566.6342163085938). Will move normally and eat
-->1-Sheep (y=77, x=117, store=566.6342163085938) before normal moving and eating
-->1-Sheep (y=76, x=116, store=576.6342163085938) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=88, x=75, store=315.3125) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=88, x=75, store=315.3125). Will move normally and eat
-->2-Sheep (y=88, x=75, store=315.3125) before normal moving and eating
-->2-Sheep (y=89, x=76, store=325.3125) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=86, x=114, store=331.2794494628906) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=86, x=114, store=331.2794494628906). Will move normally and eat
-->3-Sheep (y=86, x=114, store=331.2794494628906) before normal moving and eating
-->3-Sheep (y=85, x=113, store=341.2794494628906) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=77, x=118, store=576.6342163085938) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=77, x=118, store=576.6342163085938). Will move normally and eat
-->4-Sheep (y=77, x=118, store=576.6342163085938) before normal moving and eating
-->4-Sheep (y=76, x=117, store=586.6342163085938) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=92, x=74, store=422.1875) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=92, x=74, store=422.1875). Will move normally and eat
-->5-Sheep (y=92, x=74, store=422.1875) before normal moving and eating
-->5-Sheep (y=93, x=73, store=432.1875) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=92, x=82, store=567.8125) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=92, x=82, store=567.8125). Will move normally and eat
-->6-Sheep (y=92, x=82, store=567.8125) before normal moving and eating
-->6-Sheep (y=93, x=83, store=577.8125) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=86, x=117, store=341.2794494628906) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=86, x=117, store=341.2794494628906). Will move normally and eat
-->7-Sheep (y=86, x=117, store=341.2794494628906) before normal moving and eating
-->7-Sheep (y=85, x=116, store=351.2794494628906) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________


-> ------------ 8-Sheep initialised with (y=92, x=90, store=510) -----------
--> 8-Sheep looping with 0-Wolf.
--> 8-Sheep looping with 1-Wolf.
--> 8-Sheep looping with 2-Wolf.
--> 8-Sheep looping with 3-Wolf.
--> 8-Sheep looping with 4-Wolf.
--> 8-Sheep looping with 5-Wolf.
--> 8-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->8-Sheep has Store < Min_ernergy(600) (y=92, x=90, store=510). Will move normally and eat
-->8-Sheep (y=92, x=90, store=510) before normal moving and eating
-->8-Sheep (y=91, x=89, store=520) after normal moving and eating
___e2________ 8-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=236, x=39, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=236, x=39, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
---> 0-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=236, x=39, store=100) before normal moving
-->else1 ends: 0-Wolf (y=237, x=38, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=115, x=270, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=115, x=270, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
---> 1-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=115, x=270, store=300) before normal moving
-->else1 ends: 1-Wolf (y=114, x=271, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=215, x=111, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=215, x=111, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
---> 2-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=215, x=111, store=200) before normal moving
-->else1 ends: 2-Wolf (y=216, x=110, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=67, x=13, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=67, x=13, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
---> 3-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=67, x=13, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=68, x=14, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=41, x=1, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=41, x=1, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
---> 4-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=41, x=1, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=42, x=2, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=51, x=1, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=51, x=1, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
---> 5-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=51, x=1, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=50, x=0, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=43, x=9, store=836.0) --------
--> 6-Wolf has >Min_energy(500) store (y=43, x=9, store=836.0) and 0.25 <= random.random() < 0.5. Tries to find food (sheep).
---> 6-Wolf looping with 0-Sheep
---> 6-Wolf looping with 1-Sheep
---> 6-Wolf looping with 2-Sheep
---> 6-Wolf looping with 3-Sheep
---> 6-Wolf looping with 4-Sheep
---> 6-Wolf looping with 5-Sheep
---> 6-Wolf looping with 6-Sheep
---> 6-Wolf looping with 7-Sheep
---> 6-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 6-Wolf (y=43, x=9, store=836.0) before normal moving
-->else1 ends: 6-Wolf (y=42, x=8, store=836.0) after normal moving
....el1___________ 6-Wolf moved normally___________
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 118 ************

-> ------------ 0-Sheep initialised with (y=83, x=73, store=315.3125) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=83, x=73, store=315.3125). Will move normally and eat
-->0-Sheep (y=83, x=73, store=315.3125) before normal moving and eating
-->0-Sheep (y=84, x=72, store=325.3125) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=76, x=116, store=576.6342163085938) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=76, x=116, store=576.6342163085938). Will move normally and eat
-->1-Sheep (y=76, x=116, store=576.6342163085938) before normal moving and eating
-->1-Sheep (y=77, x=115, store=586.6342163085938) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=89, x=76, store=325.3125) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=89, x=76, store=325.3125). Will move normally and eat
-->2-Sheep (y=89, x=76, store=325.3125) before normal moving and eating
-->2-Sheep (y=90, x=75, store=335.3125) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=85, x=113, store=341.2794494628906) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=85, x=113, store=341.2794494628906). Will move normally and eat
-->3-Sheep (y=85, x=113, store=341.2794494628906) before normal moving and eating
-->3-Sheep (y=86, x=114, store=351.2794494628906) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=76, x=117, store=586.6342163085938) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=76, x=117, store=586.6342163085938). Will move normally and eat
-->4-Sheep (y=76, x=117, store=586.6342163085938) before normal moving and eating
-->4-Sheep (y=75, x=116, store=596.6342163085938) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=93, x=73, store=432.1875) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=93, x=73, store=432.1875). Will move normally and eat
-->5-Sheep (y=93, x=73, store=432.1875) before normal moving and eating
-->5-Sheep (y=94, x=72, store=442.1875) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=93, x=83, store=577.8125) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=93, x=83, store=577.8125). Will move normally and eat
-->6-Sheep (y=93, x=83, store=577.8125) before normal moving and eating
-->6-Sheep (y=94, x=82, store=587.8125) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=85, x=116, store=351.2794494628906) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=85, x=116, store=351.2794494628906). Will move normally and eat
-->7-Sheep (y=85, x=116, store=351.2794494628906) before normal moving and eating
-->7-Sheep (y=84, x=117, store=361.2794494628906) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________


-> ------------ 8-Sheep initialised with (y=91, x=89, store=520) -----------
--> 8-Sheep looping with 0-Wolf.
--> 8-Sheep looping with 1-Wolf.
--> 8-Sheep looping with 2-Wolf.
--> 8-Sheep looping with 3-Wolf.
--> 8-Sheep looping with 4-Wolf.
--> 8-Sheep looping with 5-Wolf.
--> 8-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->8-Sheep has Store < Min_ernergy(600) (y=91, x=89, store=520). Will move normally and eat
-->8-Sheep (y=91, x=89, store=520) before normal moving and eating
-->8-Sheep (y=92, x=88, store=530) after normal moving and eating
___e2________ 8-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=237, x=38, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=237, x=38, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
---> 0-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=237, x=38, store=100) before normal moving
-->else1 ends: 0-Wolf (y=238, x=37, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=114, x=271, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=114, x=271, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
---> 1-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=114, x=271, store=300) before normal moving
-->else1 ends: 1-Wolf (y=113, x=270, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=216, x=110, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=216, x=110, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
---> 2-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=216, x=110, store=200) before normal moving
-->else1 ends: 2-Wolf (y=217, x=109, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=68, x=14, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=68, x=14, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
---> 3-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=68, x=14, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=69, x=13, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=42, x=2, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=42, x=2, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
---> 4-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=42, x=2, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=41, x=3, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=50, x=0, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=50, x=0, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
---> 5-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=50, x=0, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=51, x=0, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=42, x=8, store=836.0) --------
--> 6-Wolf has > 500 store (y=42, x=8, store=836.0) and Random >= 0.5. so will try to find CW to move closer or breed/fight if within AD(5).
-> No CW found. although store >500 and p>=0.5!
--->else2 begins: 6-Wolf (y=42, x=8, store=836.0) before normal moving.
--->else2 begins: 6-Wolf (y=43, x=7, store=836.0) after normal moving.
.... el2 _______  6-Wolf moved normally _______ 
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 119 ************

-> ------------ 0-Sheep initialised with (y=84, x=72, store=325.3125) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=84, x=72, store=325.3125). Will move normally and eat
-->0-Sheep (y=84, x=72, store=325.3125) before normal moving and eating
-->0-Sheep (y=83, x=73, store=335.3125) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=77, x=115, store=586.6342163085938) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=77, x=115, store=586.6342163085938). Will move normally and eat
-->1-Sheep (y=77, x=115, store=586.6342163085938) before normal moving and eating
-->1-Sheep (y=78, x=116, store=596.6342163085938) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=90, x=75, store=335.3125) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=90, x=75, store=335.3125). Will move normally and eat
-->2-Sheep (y=90, x=75, store=335.3125) before normal moving and eating
-->2-Sheep (y=91, x=74, store=345.3125) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=86, x=114, store=351.2794494628906) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=86, x=114, store=351.2794494628906). Will move normally and eat
-->3-Sheep (y=86, x=114, store=351.2794494628906) before normal moving and eating
-->3-Sheep (y=87, x=113, store=361.2794494628906) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=75, x=116, store=596.6342163085938) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=75, x=116, store=596.6342163085938). Will move normally and eat
-->4-Sheep (y=75, x=116, store=596.6342163085938) before normal moving and eating
-->4-Sheep (y=74, x=115, store=606.6342163085938) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=94, x=72, store=442.1875) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=94, x=72, store=442.1875). Will move normally and eat
-->5-Sheep (y=94, x=72, store=442.1875) before normal moving and eating
-->5-Sheep (y=95, x=73, store=452.1875) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=94, x=82, store=587.8125) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=94, x=82, store=587.8125). Will move normally and eat
-->6-Sheep (y=94, x=82, store=587.8125) before normal moving and eating
-->6-Sheep (y=93, x=81, store=597.8125) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=84, x=117, store=361.2794494628906) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=84, x=117, store=361.2794494628906). Will move normally and eat
-->7-Sheep (y=84, x=117, store=361.2794494628906) before normal moving and eating
-->7-Sheep (y=83, x=116, store=371.2794494628906) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________


-> ------------ 8-Sheep initialised with (y=92, x=88, store=530) -----------
--> 8-Sheep looping with 0-Wolf.
--> 8-Sheep looping with 1-Wolf.
--> 8-Sheep looping with 2-Wolf.
--> 8-Sheep looping with 3-Wolf.
--> 8-Sheep looping with 4-Wolf.
--> 8-Sheep looping with 5-Wolf.
--> 8-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->8-Sheep has Store < Min_ernergy(600) (y=92, x=88, store=530). Will move normally and eat
-->8-Sheep (y=92, x=88, store=530) before normal moving and eating
-->8-Sheep (y=91, x=89, store=540) after normal moving and eating
___e2________ 8-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=238, x=37, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=238, x=37, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
---> 0-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=238, x=37, store=100) before normal moving
-->else1 ends: 0-Wolf (y=239, x=36, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=113, x=270, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=113, x=270, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
---> 1-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=113, x=270, store=300) before normal moving
-->else1 ends: 1-Wolf (y=114, x=269, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=217, x=109, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=217, x=109, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
---> 2-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=217, x=109, store=200) before normal moving
-->else1 ends: 2-Wolf (y=218, x=108, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=69, x=13, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=69, x=13, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
---> 3-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=69, x=13, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=68, x=12, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=41, x=3, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=41, x=3, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
---> 4-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=41, x=3, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=42, x=2, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=51, x=0, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=51, x=0, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
---> 5-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=51, x=0, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=52, x=0, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=43, x=7, store=836.0) --------
--> if and elif not satisfied
--> 6-Wolf has > Min_energy(500) store (y=43, x=7, store=836.0) but Random < bf_e/2(0.25). So will move normally.
--->else3 begins: 6-Wolf (y=43, x=7, store=836.0) before normal moving.
--->else3 begins: 6-Wolf (y=44, x=8, store=836.0) after normal moving.
....e3_______ 6-Wolf moved normally_______
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 120 ************

-> ------------ 0-Sheep initialised with (y=83, x=73, store=335.3125) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=83, x=73, store=335.3125). Will move normally and eat
-->0-Sheep (y=83, x=73, store=335.3125) before normal moving and eating
-->0-Sheep (y=84, x=72, store=345.3125) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=78, x=116, store=596.6342163085938) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=78, x=116, store=596.6342163085938). Will move normally and eat
-->1-Sheep (y=78, x=116, store=596.6342163085938) before normal moving and eating
-->1-Sheep (y=79, x=115, store=606.6342163085938) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=91, x=74, store=345.3125) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=91, x=74, store=345.3125). Will move normally and eat
-->2-Sheep (y=91, x=74, store=345.3125) before normal moving and eating
-->2-Sheep (y=92, x=75, store=355.3125) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=87, x=113, store=361.2794494628906) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=87, x=113, store=361.2794494628906). Will move normally and eat
-->3-Sheep (y=87, x=113, store=361.2794494628906) before normal moving and eating
-->3-Sheep (y=88, x=112, store=371.2794494628906) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=74, x=115, store=606.6342163085938) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store > Min_ernergy(600) (y=74, x=115, store=606.6342163085938).
--> 4-Sheep looping with 0-Sheep.
--> 4-Sheep looping with 1-Sheep.
--> 4-Sheep looping with 2-Sheep.
----> ---- (AD < D < MD).
----> Min distance=9.055385138137417 for 4-Sheep (y=74, x=115, store=606.6342163085938) with 2-Sheep (y=83, x=116, store=371.2794494628906).
--> 4-Sheep looping with 3-Sheep.
->CS Found!
-> 4-Sheep (y=74, x=115, store=606.6342163085938) before moving closer (while eating) to CS-Sheep: (y=83, x=116, store=371.2794494628906).
-> 4-Wolf (y=78, x=115, store=616.6342163085938) after moving closer (while eating) to CS-Sheep: (y=83, x=116, store=371.2794494628906).
___________ 4-Sheep moved closer CS___________


-> ------------ 5-Sheep initialised with (y=95, x=73, store=452.1875) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=95, x=73, store=452.1875). Will move normally and eat
-->5-Sheep (y=95, x=73, store=452.1875) before normal moving and eating
-->5-Sheep (y=96, x=74, store=462.1875) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=93, x=81, store=597.8125) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=93, x=81, store=597.8125). Will move normally and eat
-->6-Sheep (y=93, x=81, store=597.8125) before normal moving and eating
-->6-Sheep (y=94, x=80, store=607.8125) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=83, x=116, store=371.2794494628906) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=83, x=116, store=371.2794494628906). Will move normally and eat
-->7-Sheep (y=83, x=116, store=371.2794494628906) before normal moving and eating
-->7-Sheep (y=82, x=117, store=381.2794494628906) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________


-> ------------ 8-Sheep initialised with (y=91, x=89, store=540) -----------
--> 8-Sheep looping with 0-Wolf.
--> 8-Sheep looping with 1-Wolf.
--> 8-Sheep looping with 2-Wolf.
--> 8-Sheep looping with 3-Wolf.
--> 8-Sheep looping with 4-Wolf.
--> 8-Sheep looping with 5-Wolf.
--> 8-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->8-Sheep has Store < Min_ernergy(600) (y=91, x=89, store=540). Will move normally and eat
-->8-Sheep (y=91, x=89, store=540) before normal moving and eating
-->8-Sheep (y=90, x=88, store=550) after normal moving and eating
___e2________ 8-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=239, x=36, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=239, x=36, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
---> 0-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=239, x=36, store=100) before normal moving
-->else1 ends: 0-Wolf (y=238, x=35, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=114, x=269, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=114, x=269, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
---> 1-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=114, x=269, store=300) before normal moving
-->else1 ends: 1-Wolf (y=115, x=268, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=218, x=108, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=218, x=108, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
---> 2-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=218, x=108, store=200) before normal moving
-->else1 ends: 2-Wolf (y=217, x=109, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=68, x=12, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=68, x=12, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
---> 3-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=68, x=12, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=67, x=11, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=42, x=2, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=42, x=2, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
---> 4-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=42, x=2, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=43, x=3, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=52, x=0, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=52, x=0, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
---> 5-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=52, x=0, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=51, x=0, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=44, x=8, store=836.0) --------
--> 6-Wolf has > 500 store (y=44, x=8, store=836.0) and Random >= 0.5. so will try to find CW to move closer or breed/fight if within AD(5).
-> No CW found. although store >500 and p>=0.5!
--->else2 begins: 6-Wolf (y=44, x=8, store=836.0) before normal moving.
--->else2 begins: 6-Wolf (y=45, x=7, store=836.0) after normal moving.
.... el2 _______  6-Wolf moved normally _______ 
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 121 ************

-> ------------ 0-Sheep initialised with (y=84, x=72, store=345.3125) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=84, x=72, store=345.3125). Will move normally and eat
-->0-Sheep (y=84, x=72, store=345.3125) before normal moving and eating
-->0-Sheep (y=85, x=71, store=355.3125) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=79, x=115, store=606.6342163085938) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store > Min_ernergy(600) (y=79, x=115, store=606.6342163085938).
--> 1-Sheep looping with 0-Sheep.
--> 1-Sheep looping with 1-Sheep.
----> ---- (AD < D < MD).
----> Min distance=9.486832980505138 for 1-Sheep (y=79, x=115, store=606.6342163085938) with 1-Sheep (y=88, x=112, store=371.2794494628906).
--> 1-Sheep looping with 2-Sheep.
----> D <=AD. Sheep Breeding/Sharing proximity of 1.0(<=5) entered by CS 1-Sheep (y=79, x=115, store=606.6342163085938) with CS 2-Sheep (y=78, x=115, store=616.6342163085938).
----->1-Sheep (y=79, x=115, store=606.6342163085938) and CS 2-Sheep (y=78, x=115, store=616.6342163085938 have > Min_energy (600) store. So they will try breeding if p>0.5
------>1.B Random <0.5. So the breeding will fail.
------> 1-Sheep (y=79, x=115, store=606.6342163085938) before failed breeding with CS 2-Sheep (y=78, x=115, store=616.6342163085938)
------> Failed Sheep Breeding = True
------> 1-Sheep (y=79, x=115, store=305.8171081542969) after failed breeding with CS 2-Sheep (y=78, x=115, store=305.8171081542969).
_____________ 1-Sheep Fail Mated with CS 2-Sheep ____________
_______ Breeding=False, Failed breeding=True, Share=False for 1-Sheep __________

-> ------------ 2-Sheep initialised with (y=92, x=75, store=355.3125) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=92, x=75, store=355.3125). Will move normally and eat
-->2-Sheep (y=92, x=75, store=355.3125) before normal moving and eating
-->2-Sheep (y=91, x=74, store=365.3125) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=88, x=112, store=371.2794494628906) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=88, x=112, store=371.2794494628906). Will move normally and eat
-->3-Sheep (y=88, x=112, store=371.2794494628906) before normal moving and eating
-->3-Sheep (y=87, x=111, store=381.2794494628906) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=78, x=115, store=305.8171081542969) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=78, x=115, store=305.8171081542969). Will move normally and eat
-->4-Sheep (y=78, x=115, store=305.8171081542969) before normal moving and eating
-->4-Sheep (y=77, x=116, store=315.8171081542969) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=96, x=74, store=462.1875) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=96, x=74, store=462.1875). Will move normally and eat
-->5-Sheep (y=96, x=74, store=462.1875) before normal moving and eating
-->5-Sheep (y=95, x=75, store=472.1875) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=94, x=80, store=607.8125) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store > Min_ernergy(600) (y=94, x=80, store=607.8125).
--> 6-Sheep looping with 0-Sheep.
--> 6-Sheep looping with 1-Sheep.
----> ---- (AD < D < MD).
----> Min distance=8.94427190999916 for 6-Sheep (y=94, x=80, store=607.8125) with 1-Sheep (y=90, x=88, store=550).
->CS Found!
-> 6-Sheep (y=94, x=80, store=607.8125) before moving closer (while eating) to CS-Sheep: (y=90, x=88, store=550).
-> 6-Wolf (y=92, x=84, store=617.8125) after moving closer (while eating) to CS-Sheep: (y=90, x=88, store=550).
___________ 6-Sheep moved closer CS___________


-> ------------ 7-Sheep initialised with (y=82, x=117, store=381.2794494628906) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=82, x=117, store=381.2794494628906). Will move normally and eat
-->7-Sheep (y=82, x=117, store=381.2794494628906) before normal moving and eating
-->7-Sheep (y=81, x=118, store=391.2794494628906) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________


-> ------------ 8-Sheep initialised with (y=90, x=88, store=550) -----------
--> 8-Sheep looping with 0-Wolf.
--> 8-Sheep looping with 1-Wolf.
--> 8-Sheep looping with 2-Wolf.
--> 8-Sheep looping with 3-Wolf.
--> 8-Sheep looping with 4-Wolf.
--> 8-Sheep looping with 5-Wolf.
--> 8-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->8-Sheep has Store < Min_ernergy(600) (y=90, x=88, store=550). Will move normally and eat
-->8-Sheep (y=90, x=88, store=550) before normal moving and eating
-->8-Sheep (y=89, x=87, store=560) after normal moving and eating
___e2________ 8-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=238, x=35, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=238, x=35, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
---> 0-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=238, x=35, store=100) before normal moving
-->else1 ends: 0-Wolf (y=239, x=36, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=115, x=268, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=115, x=268, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
---> 1-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=115, x=268, store=300) before normal moving
-->else1 ends: 1-Wolf (y=114, x=267, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=217, x=109, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=217, x=109, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
---> 2-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=217, x=109, store=200) before normal moving
-->else1 ends: 2-Wolf (y=218, x=110, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=67, x=11, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=67, x=11, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
---> 3-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=67, x=11, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=68, x=10, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=43, x=3, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=43, x=3, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
---> 4-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=43, x=3, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=42, x=4, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=51, x=0, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=51, x=0, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
---> 5-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=51, x=0, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=50, x=1, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=45, x=7, store=836.0) --------
--> 6-Wolf has > 500 store (y=45, x=7, store=836.0) and Random >= 0.5. so will try to find CW to move closer or breed/fight if within AD(5).
-> No CW found. although store >500 and p>=0.5!
--->else2 begins: 6-Wolf (y=45, x=7, store=836.0) before normal moving.
--->else2 begins: 6-Wolf (y=44, x=6, store=836.0) after normal moving.
.... el2 _______  6-Wolf moved normally _______ 
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 122 ************

-> ------------ 0-Sheep initialised with (y=85, x=71, store=355.3125) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=85, x=71, store=355.3125). Will move normally and eat
-->0-Sheep (y=85, x=71, store=355.3125) before normal moving and eating
-->0-Sheep (y=84, x=72, store=365.3125) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=79, x=115, store=305.8171081542969) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=79, x=115, store=305.8171081542969). Will move normally and eat
-->1-Sheep (y=79, x=115, store=305.8171081542969) before normal moving and eating
-->1-Sheep (y=78, x=116, store=315.8171081542969) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=91, x=74, store=365.3125) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=91, x=74, store=365.3125). Will move normally and eat
-->2-Sheep (y=91, x=74, store=365.3125) before normal moving and eating
-->2-Sheep (y=90, x=75, store=375.3125) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=87, x=111, store=381.2794494628906) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=87, x=111, store=381.2794494628906). Will move normally and eat
-->3-Sheep (y=87, x=111, store=381.2794494628906) before normal moving and eating
-->3-Sheep (y=88, x=110, store=391.2794494628906) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=77, x=116, store=315.8171081542969) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=77, x=116, store=315.8171081542969). Will move normally and eat
-->4-Sheep (y=77, x=116, store=315.8171081542969) before normal moving and eating
-->4-Sheep (y=78, x=115, store=325.8171081542969) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=95, x=75, store=472.1875) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=95, x=75, store=472.1875). Will move normally and eat
-->5-Sheep (y=95, x=75, store=472.1875) before normal moving and eating
-->5-Sheep (y=96, x=74, store=482.1875) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=92, x=84, store=617.8125) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store > Min_ernergy(600) (y=92, x=84, store=617.8125).
--> 6-Sheep looping with 0-Sheep.
--> 6-Sheep looping with 1-Sheep.
----> D <=AD. Sheep Breeding/Sharing proximity of 4.242640687119285(<=5) entered by CS 6-Sheep (y=92, x=84, store=617.8125) with CS 1-Sheep (y=89, x=87, store=560).
-----> 6-Sheep (y=92, x=84, store=617.8125) and CS 1-Sheep (y=89, x=87, store=560 will not mate as CS 1-Sheep store <600. They will share resource to become average.
-----> Shared resources = True
-----> 6-Sheep (y=92, x=84, store=588.90625) and CS 1-Sheep (y=89, x=87, store=588.90625) after sharing resources!
_____________ 6-Sheep and CS 1-Sheep shared resources ____________
_______ Breeding=False, Failed breeding=False, Share=True for 6-Sheep __________

-> ------------ 7-Sheep initialised with (y=81, x=118, store=391.2794494628906) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=81, x=118, store=391.2794494628906). Will move normally and eat
-->7-Sheep (y=81, x=118, store=391.2794494628906) before normal moving and eating
-->7-Sheep (y=82, x=117, store=401.2794494628906) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________


-> ------------ 8-Sheep initialised with (y=89, x=87, store=588.90625) -----------
--> 8-Sheep looping with 0-Wolf.
--> 8-Sheep looping with 1-Wolf.
--> 8-Sheep looping with 2-Wolf.
--> 8-Sheep looping with 3-Wolf.
--> 8-Sheep looping with 4-Wolf.
--> 8-Sheep looping with 5-Wolf.
--> 8-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->8-Sheep has Store < Min_ernergy(600) (y=89, x=87, store=588.90625). Will move normally and eat
-->8-Sheep (y=89, x=87, store=588.90625) before normal moving and eating
-->8-Sheep (y=90, x=88, store=598.90625) after normal moving and eating
___e2________ 8-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=239, x=36, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=239, x=36, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
---> 0-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=239, x=36, store=100) before normal moving
-->else1 ends: 0-Wolf (y=240, x=37, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=114, x=267, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=114, x=267, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
---> 1-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=114, x=267, store=300) before normal moving
-->else1 ends: 1-Wolf (y=113, x=266, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=218, x=110, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=218, x=110, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
---> 2-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=218, x=110, store=200) before normal moving
-->else1 ends: 2-Wolf (y=219, x=109, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=68, x=10, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=68, x=10, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
---> 3-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=68, x=10, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=69, x=11, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=42, x=4, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=42, x=4, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
---> 4-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=42, x=4, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=43, x=5, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=50, x=1, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=50, x=1, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
---> 5-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=50, x=1, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=49, x=2, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=44, x=6, store=836.0) --------
--> 6-Wolf has > 500 store (y=44, x=6, store=836.0) and Random >= 0.5. so will try to find CW to move closer or breed/fight if within AD(5).
-> No CW found. although store >500 and p>=0.5!
--->else2 begins: 6-Wolf (y=44, x=6, store=836.0) before normal moving.
--->else2 begins: 6-Wolf (y=45, x=5, store=836.0) after normal moving.
.... el2 _______  6-Wolf moved normally _______ 
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 123 ************

-> ------------ 0-Sheep initialised with (y=84, x=72, store=365.3125) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=84, x=72, store=365.3125). Will move normally and eat
-->0-Sheep (y=84, x=72, store=365.3125) before normal moving and eating
-->0-Sheep (y=85, x=71, store=375.3125) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=78, x=116, store=315.8171081542969) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=78, x=116, store=315.8171081542969). Will move normally and eat
-->1-Sheep (y=78, x=116, store=315.8171081542969) before normal moving and eating
-->1-Sheep (y=79, x=115, store=325.8171081542969) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=90, x=75, store=375.3125) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=90, x=75, store=375.3125). Will move normally and eat
-->2-Sheep (y=90, x=75, store=375.3125) before normal moving and eating
-->2-Sheep (y=91, x=76, store=385.3125) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=88, x=110, store=391.2794494628906) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=88, x=110, store=391.2794494628906). Will move normally and eat
-->3-Sheep (y=88, x=110, store=391.2794494628906) before normal moving and eating
-->3-Sheep (y=87, x=109, store=401.2794494628906) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=78, x=115, store=325.8171081542969) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=78, x=115, store=325.8171081542969). Will move normally and eat
-->4-Sheep (y=78, x=115, store=325.8171081542969) before normal moving and eating
-->4-Sheep (y=79, x=114, store=335.8171081542969) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=96, x=74, store=482.1875) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=96, x=74, store=482.1875). Will move normally and eat
-->5-Sheep (y=96, x=74, store=482.1875) before normal moving and eating
-->5-Sheep (y=95, x=75, store=492.1875) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=92, x=84, store=588.90625) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=92, x=84, store=588.90625). Will move normally and eat
-->6-Sheep (y=92, x=84, store=588.90625) before normal moving and eating
-->6-Sheep (y=93, x=85, store=598.90625) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=82, x=117, store=401.2794494628906) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=82, x=117, store=401.2794494628906). Will move normally and eat
-->7-Sheep (y=82, x=117, store=401.2794494628906) before normal moving and eating
-->7-Sheep (y=83, x=116, store=411.2794494628906) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________


-> ------------ 8-Sheep initialised with (y=90, x=88, store=598.90625) -----------
--> 8-Sheep looping with 0-Wolf.
--> 8-Sheep looping with 1-Wolf.
--> 8-Sheep looping with 2-Wolf.
--> 8-Sheep looping with 3-Wolf.
--> 8-Sheep looping with 4-Wolf.
--> 8-Sheep looping with 5-Wolf.
--> 8-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->8-Sheep has Store < Min_ernergy(600) (y=90, x=88, store=598.90625). Will move normally and eat
-->8-Sheep (y=90, x=88, store=598.90625) before normal moving and eating
-->8-Sheep (y=91, x=87, store=608.90625) after normal moving and eating
___e2________ 8-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=240, x=37, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=240, x=37, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
---> 0-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=240, x=37, store=100) before normal moving
-->else1 ends: 0-Wolf (y=241, x=38, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=113, x=266, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=113, x=266, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
---> 1-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=113, x=266, store=300) before normal moving
-->else1 ends: 1-Wolf (y=112, x=267, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=219, x=109, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=219, x=109, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
---> 2-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=219, x=109, store=200) before normal moving
-->else1 ends: 2-Wolf (y=220, x=110, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=69, x=11, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=69, x=11, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
---> 3-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=69, x=11, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=68, x=12, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=43, x=5, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=43, x=5, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
---> 4-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=43, x=5, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=42, x=4, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=49, x=2, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=49, x=2, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
---> 5-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=49, x=2, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=50, x=3, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=45, x=5, store=836.0) --------
--> 6-Wolf has >Min_energy(500) store (y=45, x=5, store=836.0) and 0.25 <= random.random() < 0.5. Tries to find food (sheep).
---> 6-Wolf looping with 0-Sheep
---> 6-Wolf looping with 1-Sheep
---> 6-Wolf looping with 2-Sheep
---> 6-Wolf looping with 3-Sheep
---> 6-Wolf looping with 4-Sheep
---> 6-Wolf looping with 5-Sheep
---> 6-Wolf looping with 6-Sheep
---> 6-Wolf looping with 7-Sheep
---> 6-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 6-Wolf (y=45, x=5, store=836.0) before normal moving
-->else1 ends: 6-Wolf (y=44, x=6, store=836.0) after normal moving
....el1___________ 6-Wolf moved normally___________
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 124 ************

-> ------------ 0-Sheep initialised with (y=85, x=71, store=375.3125) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=85, x=71, store=375.3125). Will move normally and eat
-->0-Sheep (y=85, x=71, store=375.3125) before normal moving and eating
-->0-Sheep (y=84, x=70, store=385.3125) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=79, x=115, store=325.8171081542969) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=79, x=115, store=325.8171081542969). Will move normally and eat
-->1-Sheep (y=79, x=115, store=325.8171081542969) before normal moving and eating
-->1-Sheep (y=80, x=116, store=335.8171081542969) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=91, x=76, store=385.3125) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=91, x=76, store=385.3125). Will move normally and eat
-->2-Sheep (y=91, x=76, store=385.3125) before normal moving and eating
-->2-Sheep (y=90, x=77, store=395.3125) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=87, x=109, store=401.2794494628906) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=87, x=109, store=401.2794494628906). Will move normally and eat
-->3-Sheep (y=87, x=109, store=401.2794494628906) before normal moving and eating
-->3-Sheep (y=88, x=108, store=411.2794494628906) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=79, x=114, store=335.8171081542969) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=79, x=114, store=335.8171081542969). Will move normally and eat
-->4-Sheep (y=79, x=114, store=335.8171081542969) before normal moving and eating
-->4-Sheep (y=78, x=113, store=345.8171081542969) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=95, x=75, store=492.1875) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=95, x=75, store=492.1875). Will move normally and eat
-->5-Sheep (y=95, x=75, store=492.1875) before normal moving and eating
-->5-Sheep (y=96, x=74, store=502.1875) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=93, x=85, store=598.90625) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=93, x=85, store=598.90625). Will move normally and eat
-->6-Sheep (y=93, x=85, store=598.90625) before normal moving and eating
-->6-Sheep (y=94, x=84, store=608.90625) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=83, x=116, store=411.2794494628906) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=83, x=116, store=411.2794494628906). Will move normally and eat
-->7-Sheep (y=83, x=116, store=411.2794494628906) before normal moving and eating
-->7-Sheep (y=84, x=117, store=421.2794494628906) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________


-> ------------ 8-Sheep initialised with (y=91, x=87, store=608.90625) -----------
--> 8-Sheep looping with 0-Wolf.
--> 8-Sheep looping with 1-Wolf.
--> 8-Sheep looping with 2-Wolf.
--> 8-Sheep looping with 3-Wolf.
--> 8-Sheep looping with 4-Wolf.
--> 8-Sheep looping with 5-Wolf.
--> 8-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->8-Sheep has Store > Min_ernergy(600) (y=91, x=87, store=608.90625).
-> NO CS Found.
-> 8-Sheep (y=91, x=87, store=608.90625) before normally moving and eating.
-> 8-Sheep (y=92, x=86, store=618.90625) after normally moving and eating.
___e1________ 8-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=241, x=38, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=241, x=38, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
---> 0-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=241, x=38, store=100) before normal moving
-->else1 ends: 0-Wolf (y=240, x=37, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=112, x=267, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=112, x=267, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
---> 1-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=112, x=267, store=300) before normal moving
-->else1 ends: 1-Wolf (y=111, x=266, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=220, x=110, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=220, x=110, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
---> 2-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=220, x=110, store=200) before normal moving
-->else1 ends: 2-Wolf (y=221, x=111, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=68, x=12, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=68, x=12, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
---> 3-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=68, x=12, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=69, x=13, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=42, x=4, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=42, x=4, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
---> 4-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=42, x=4, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=41, x=5, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=50, x=3, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=50, x=3, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
---> 5-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=50, x=3, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=51, x=4, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=44, x=6, store=836.0) --------
--> 6-Wolf has >Min_energy(500) store (y=44, x=6, store=836.0) and 0.25 <= random.random() < 0.5. Tries to find food (sheep).
---> 6-Wolf looping with 0-Sheep
---> 6-Wolf looping with 1-Sheep
---> 6-Wolf looping with 2-Sheep
---> 6-Wolf looping with 3-Sheep
---> 6-Wolf looping with 4-Sheep
---> 6-Wolf looping with 5-Sheep
---> 6-Wolf looping with 6-Sheep
---> 6-Wolf looping with 7-Sheep
---> 6-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 6-Wolf (y=44, x=6, store=836.0) before normal moving
-->else1 ends: 6-Wolf (y=45, x=7, store=836.0) after normal moving
....el1___________ 6-Wolf moved normally___________
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 125 ************

-> ------------ 0-Sheep initialised with (y=84, x=70, store=385.3125) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=84, x=70, store=385.3125). Will move normally and eat
-->0-Sheep (y=84, x=70, store=385.3125) before normal moving and eating
-->0-Sheep (y=85, x=71, store=395.3125) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=80, x=116, store=335.8171081542969) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=80, x=116, store=335.8171081542969). Will move normally and eat
-->1-Sheep (y=80, x=116, store=335.8171081542969) before normal moving and eating
-->1-Sheep (y=81, x=117, store=345.8171081542969) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=90, x=77, store=395.3125) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=90, x=77, store=395.3125). Will move normally and eat
-->2-Sheep (y=90, x=77, store=395.3125) before normal moving and eating
-->2-Sheep (y=89, x=78, store=405.3125) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=88, x=108, store=411.2794494628906) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=88, x=108, store=411.2794494628906). Will move normally and eat
-->3-Sheep (y=88, x=108, store=411.2794494628906) before normal moving and eating
-->3-Sheep (y=87, x=109, store=421.2794494628906) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=78, x=113, store=345.8171081542969) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=78, x=113, store=345.8171081542969). Will move normally and eat
-->4-Sheep (y=78, x=113, store=345.8171081542969) before normal moving and eating
-->4-Sheep (y=77, x=114, store=355.8171081542969) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=96, x=74, store=502.1875) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=96, x=74, store=502.1875). Will move normally and eat
-->5-Sheep (y=96, x=74, store=502.1875) before normal moving and eating
-->5-Sheep (y=95, x=73, store=512.1875) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=94, x=84, store=608.90625) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store > Min_ernergy(600) (y=94, x=84, store=608.90625).
--> 6-Sheep looping with 0-Sheep.
--> 6-Sheep looping with 1-Sheep.
----> D <=AD. Sheep Breeding/Sharing proximity of 2.8284271247461903(<=5) entered by CS 6-Sheep (y=94, x=84, store=608.90625) with CS 1-Sheep (y=92, x=86, store=618.90625).
----->6-Sheep (y=94, x=84, store=608.90625) and CS 1-Sheep (y=92, x=86, store=618.90625 have > Min_energy (600) store. So they will try breeding if p>0.5
------>1.B Random <0.5. So the breeding will fail.
------> 6-Sheep (y=94, x=84, store=608.90625) before failed breeding with CS 1-Sheep (y=92, x=86, store=618.90625)
------> Failed Sheep Breeding = True
------> 6-Sheep (y=94, x=84, store=306.953125) after failed breeding with CS 1-Sheep (y=92, x=86, store=306.953125).
_____________ 6-Sheep Fail Mated with CS 1-Sheep ____________
_______ Breeding=False, Failed breeding=True, Share=False for 6-Sheep __________

-> ------------ 7-Sheep initialised with (y=84, x=117, store=421.2794494628906) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=84, x=117, store=421.2794494628906). Will move normally and eat
-->7-Sheep (y=84, x=117, store=421.2794494628906) before normal moving and eating
-->7-Sheep (y=85, x=116, store=431.2794494628906) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________


-> ------------ 8-Sheep initialised with (y=92, x=86, store=306.953125) -----------
--> 8-Sheep looping with 0-Wolf.
--> 8-Sheep looping with 1-Wolf.
--> 8-Sheep looping with 2-Wolf.
--> 8-Sheep looping with 3-Wolf.
--> 8-Sheep looping with 4-Wolf.
--> 8-Sheep looping with 5-Wolf.
--> 8-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->8-Sheep has Store < Min_ernergy(600) (y=92, x=86, store=306.953125). Will move normally and eat
-->8-Sheep (y=92, x=86, store=306.953125) before normal moving and eating
-->8-Sheep (y=91, x=87, store=316.953125) after normal moving and eating
___e2________ 8-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=240, x=37, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=240, x=37, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
---> 0-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=240, x=37, store=100) before normal moving
-->else1 ends: 0-Wolf (y=241, x=38, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=111, x=266, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=111, x=266, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
---> 1-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=111, x=266, store=300) before normal moving
-->else1 ends: 1-Wolf (y=110, x=265, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=221, x=111, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=221, x=111, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
---> 2-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=221, x=111, store=200) before normal moving
-->else1 ends: 2-Wolf (y=220, x=112, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=69, x=13, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=69, x=13, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
---> 3-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=69, x=13, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=70, x=14, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=41, x=5, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=41, x=5, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
---> 4-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=41, x=5, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=42, x=6, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=51, x=4, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=51, x=4, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
---> 5-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=51, x=4, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=52, x=5, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=45, x=7, store=836.0) --------
--> if and elif not satisfied
--> 6-Wolf has > Min_energy(500) store (y=45, x=7, store=836.0) but Random < bf_e/2(0.25). So will move normally.
--->else3 begins: 6-Wolf (y=45, x=7, store=836.0) before normal moving.
--->else3 begins: 6-Wolf (y=44, x=8, store=836.0) after normal moving.
....e3_______ 6-Wolf moved normally_______
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 126 ************

-> ------------ 0-Sheep initialised with (y=85, x=71, store=395.3125) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=85, x=71, store=395.3125). Will move normally and eat
-->0-Sheep (y=85, x=71, store=395.3125) before normal moving and eating
-->0-Sheep (y=86, x=72, store=405.3125) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=81, x=117, store=345.8171081542969) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=81, x=117, store=345.8171081542969). Will move normally and eat
-->1-Sheep (y=81, x=117, store=345.8171081542969) before normal moving and eating
-->1-Sheep (y=82, x=118, store=355.8171081542969) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=89, x=78, store=405.3125) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=89, x=78, store=405.3125). Will move normally and eat
-->2-Sheep (y=89, x=78, store=405.3125) before normal moving and eating
-->2-Sheep (y=90, x=79, store=415.3125) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=87, x=109, store=421.2794494628906) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=87, x=109, store=421.2794494628906). Will move normally and eat
-->3-Sheep (y=87, x=109, store=421.2794494628906) before normal moving and eating
-->3-Sheep (y=86, x=110, store=431.2794494628906) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=77, x=114, store=355.8171081542969) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=77, x=114, store=355.8171081542969). Will move normally and eat
-->4-Sheep (y=77, x=114, store=355.8171081542969) before normal moving and eating
-->4-Sheep (y=78, x=113, store=365.8171081542969) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=95, x=73, store=512.1875) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=95, x=73, store=512.1875). Will move normally and eat
-->5-Sheep (y=95, x=73, store=512.1875) before normal moving and eating
-->5-Sheep (y=96, x=74, store=522.1875) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=94, x=84, store=306.953125) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=94, x=84, store=306.953125). Will move normally and eat
-->6-Sheep (y=94, x=84, store=306.953125) before normal moving and eating
-->6-Sheep (y=95, x=85, store=316.953125) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=85, x=116, store=431.2794494628906) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=85, x=116, store=431.2794494628906). Will move normally and eat
-->7-Sheep (y=85, x=116, store=431.2794494628906) before normal moving and eating
-->7-Sheep (y=86, x=117, store=441.2794494628906) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________


-> ------------ 8-Sheep initialised with (y=91, x=87, store=316.953125) -----------
--> 8-Sheep looping with 0-Wolf.
--> 8-Sheep looping with 1-Wolf.
--> 8-Sheep looping with 2-Wolf.
--> 8-Sheep looping with 3-Wolf.
--> 8-Sheep looping with 4-Wolf.
--> 8-Sheep looping with 5-Wolf.
--> 8-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->8-Sheep has Store < Min_ernergy(600) (y=91, x=87, store=316.953125). Will move normally and eat
-->8-Sheep (y=91, x=87, store=316.953125) before normal moving and eating
-->8-Sheep (y=92, x=86, store=326.953125) after normal moving and eating
___e2________ 8-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=241, x=38, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=241, x=38, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
---> 0-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=241, x=38, store=100) before normal moving
-->else1 ends: 0-Wolf (y=242, x=37, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=110, x=265, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=110, x=265, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
---> 1-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=110, x=265, store=300) before normal moving
-->else1 ends: 1-Wolf (y=111, x=264, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=220, x=112, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=220, x=112, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
---> 2-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=220, x=112, store=200) before normal moving
-->else1 ends: 2-Wolf (y=219, x=111, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=70, x=14, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=70, x=14, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
---> 3-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=70, x=14, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=69, x=13, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=42, x=6, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=42, x=6, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
---> 4-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=42, x=6, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=43, x=5, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=52, x=5, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=52, x=5, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
---> 5-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=52, x=5, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=53, x=4, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=44, x=8, store=836.0) --------
--> if and elif not satisfied
--> 6-Wolf has > Min_energy(500) store (y=44, x=8, store=836.0) but Random < bf_e/2(0.25). So will move normally.
--->else3 begins: 6-Wolf (y=44, x=8, store=836.0) before normal moving.
--->else3 begins: 6-Wolf (y=45, x=7, store=836.0) after normal moving.
....e3_______ 6-Wolf moved normally_______
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 127 ************

-> ------------ 0-Sheep initialised with (y=86, x=72, store=405.3125) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=86, x=72, store=405.3125). Will move normally and eat
-->0-Sheep (y=86, x=72, store=405.3125) before normal moving and eating
-->0-Sheep (y=85, x=73, store=415.3125) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=82, x=118, store=355.8171081542969) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=82, x=118, store=355.8171081542969). Will move normally and eat
-->1-Sheep (y=82, x=118, store=355.8171081542969) before normal moving and eating
-->1-Sheep (y=81, x=119, store=365.8171081542969) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=90, x=79, store=415.3125) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=90, x=79, store=415.3125). Will move normally and eat
-->2-Sheep (y=90, x=79, store=415.3125) before normal moving and eating
-->2-Sheep (y=91, x=78, store=425.3125) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=86, x=110, store=431.2794494628906) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=86, x=110, store=431.2794494628906). Will move normally and eat
-->3-Sheep (y=86, x=110, store=431.2794494628906) before normal moving and eating
-->3-Sheep (y=85, x=109, store=441.2794494628906) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=78, x=113, store=365.8171081542969) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=78, x=113, store=365.8171081542969). Will move normally and eat
-->4-Sheep (y=78, x=113, store=365.8171081542969) before normal moving and eating
-->4-Sheep (y=77, x=114, store=375.8171081542969) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=96, x=74, store=522.1875) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=96, x=74, store=522.1875). Will move normally and eat
-->5-Sheep (y=96, x=74, store=522.1875) before normal moving and eating
-->5-Sheep (y=95, x=73, store=532.1875) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=95, x=85, store=316.953125) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=95, x=85, store=316.953125). Will move normally and eat
-->6-Sheep (y=95, x=85, store=316.953125) before normal moving and eating
-->6-Sheep (y=94, x=86, store=326.953125) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=86, x=117, store=441.2794494628906) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=86, x=117, store=441.2794494628906). Will move normally and eat
-->7-Sheep (y=86, x=117, store=441.2794494628906) before normal moving and eating
-->7-Sheep (y=85, x=118, store=451.2794494628906) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________


-> ------------ 8-Sheep initialised with (y=92, x=86, store=326.953125) -----------
--> 8-Sheep looping with 0-Wolf.
--> 8-Sheep looping with 1-Wolf.
--> 8-Sheep looping with 2-Wolf.
--> 8-Sheep looping with 3-Wolf.
--> 8-Sheep looping with 4-Wolf.
--> 8-Sheep looping with 5-Wolf.
--> 8-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->8-Sheep has Store < Min_ernergy(600) (y=92, x=86, store=326.953125). Will move normally and eat
-->8-Sheep (y=92, x=86, store=326.953125) before normal moving and eating
-->8-Sheep (y=93, x=87, store=336.953125) after normal moving and eating
___e2________ 8-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=242, x=37, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=242, x=37, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
---> 0-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=242, x=37, store=100) before normal moving
-->else1 ends: 0-Wolf (y=241, x=36, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=111, x=264, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=111, x=264, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
---> 1-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=111, x=264, store=300) before normal moving
-->else1 ends: 1-Wolf (y=110, x=265, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=219, x=111, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=219, x=111, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
---> 2-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=219, x=111, store=200) before normal moving
-->else1 ends: 2-Wolf (y=220, x=110, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=69, x=13, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=69, x=13, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
---> 3-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=69, x=13, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=70, x=12, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=43, x=5, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=43, x=5, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
---> 4-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=43, x=5, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=44, x=6, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=53, x=4, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=53, x=4, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
---> 5-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=53, x=4, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=52, x=5, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=45, x=7, store=836.0) --------
--> if and elif not satisfied
--> 6-Wolf has > Min_energy(500) store (y=45, x=7, store=836.0) but Random < bf_e/2(0.25). So will move normally.
--->else3 begins: 6-Wolf (y=45, x=7, store=836.0) before normal moving.
--->else3 begins: 6-Wolf (y=44, x=6, store=836.0) after normal moving.
....e3_______ 6-Wolf moved normally_______
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 128 ************

-> ------------ 0-Sheep initialised with (y=85, x=73, store=415.3125) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=85, x=73, store=415.3125). Will move normally and eat
-->0-Sheep (y=85, x=73, store=415.3125) before normal moving and eating
-->0-Sheep (y=86, x=74, store=425.3125) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=81, x=119, store=365.8171081542969) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=81, x=119, store=365.8171081542969). Will move normally and eat
-->1-Sheep (y=81, x=119, store=365.8171081542969) before normal moving and eating
-->1-Sheep (y=80, x=118, store=375.8171081542969) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=91, x=78, store=425.3125) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=91, x=78, store=425.3125). Will move normally and eat
-->2-Sheep (y=91, x=78, store=425.3125) before normal moving and eating
-->2-Sheep (y=92, x=77, store=435.3125) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=85, x=109, store=441.2794494628906) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=85, x=109, store=441.2794494628906). Will move normally and eat
-->3-Sheep (y=85, x=109, store=441.2794494628906) before normal moving and eating
-->3-Sheep (y=84, x=108, store=451.2794494628906) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=77, x=114, store=375.8171081542969) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=77, x=114, store=375.8171081542969). Will move normally and eat
-->4-Sheep (y=77, x=114, store=375.8171081542969) before normal moving and eating
-->4-Sheep (y=78, x=115, store=385.8171081542969) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=95, x=73, store=532.1875) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=95, x=73, store=532.1875). Will move normally and eat
-->5-Sheep (y=95, x=73, store=532.1875) before normal moving and eating
-->5-Sheep (y=94, x=72, store=542.1875) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=94, x=86, store=326.953125) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=94, x=86, store=326.953125). Will move normally and eat
-->6-Sheep (y=94, x=86, store=326.953125) before normal moving and eating
-->6-Sheep (y=95, x=87, store=336.953125) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=85, x=118, store=451.2794494628906) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=85, x=118, store=451.2794494628906). Will move normally and eat
-->7-Sheep (y=85, x=118, store=451.2794494628906) before normal moving and eating
-->7-Sheep (y=86, x=117, store=461.2794494628906) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________


-> ------------ 8-Sheep initialised with (y=93, x=87, store=336.953125) -----------
--> 8-Sheep looping with 0-Wolf.
--> 8-Sheep looping with 1-Wolf.
--> 8-Sheep looping with 2-Wolf.
--> 8-Sheep looping with 3-Wolf.
--> 8-Sheep looping with 4-Wolf.
--> 8-Sheep looping with 5-Wolf.
--> 8-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->8-Sheep has Store < Min_ernergy(600) (y=93, x=87, store=336.953125). Will move normally and eat
-->8-Sheep (y=93, x=87, store=336.953125) before normal moving and eating
-->8-Sheep (y=92, x=88, store=346.953125) after normal moving and eating
___e2________ 8-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=241, x=36, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=241, x=36, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
---> 0-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=241, x=36, store=100) before normal moving
-->else1 ends: 0-Wolf (y=240, x=35, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=110, x=265, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=110, x=265, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
---> 1-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=110, x=265, store=300) before normal moving
-->else1 ends: 1-Wolf (y=111, x=266, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=220, x=110, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=220, x=110, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
---> 2-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=220, x=110, store=200) before normal moving
-->else1 ends: 2-Wolf (y=219, x=111, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=70, x=12, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=70, x=12, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
---> 3-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=70, x=12, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=71, x=13, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=44, x=6, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=44, x=6, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
---> 4-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=44, x=6, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=43, x=7, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=52, x=5, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=52, x=5, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
---> 5-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=52, x=5, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=51, x=6, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=44, x=6, store=836.0) --------
--> 6-Wolf has > 500 store (y=44, x=6, store=836.0) and Random >= 0.5. so will try to find CW to move closer or breed/fight if within AD(5).
-> No CW found. although store >500 and p>=0.5!
--->else2 begins: 6-Wolf (y=44, x=6, store=836.0) before normal moving.
--->else2 begins: 6-Wolf (y=43, x=7, store=836.0) after normal moving.
.... el2 _______  6-Wolf moved normally _______ 
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 129 ************

-> ------------ 0-Sheep initialised with (y=86, x=74, store=425.3125) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=86, x=74, store=425.3125). Will move normally and eat
-->0-Sheep (y=86, x=74, store=425.3125) before normal moving and eating
-->0-Sheep (y=87, x=75, store=435.3125) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=80, x=118, store=375.8171081542969) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=80, x=118, store=375.8171081542969). Will move normally and eat
-->1-Sheep (y=80, x=118, store=375.8171081542969) before normal moving and eating
-->1-Sheep (y=79, x=117, store=385.8171081542969) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=92, x=77, store=435.3125) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=92, x=77, store=435.3125). Will move normally and eat
-->2-Sheep (y=92, x=77, store=435.3125) before normal moving and eating
-->2-Sheep (y=93, x=78, store=445.3125) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=84, x=108, store=451.2794494628906) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=84, x=108, store=451.2794494628906). Will move normally and eat
-->3-Sheep (y=84, x=108, store=451.2794494628906) before normal moving and eating
-->3-Sheep (y=83, x=107, store=461.2794494628906) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=78, x=115, store=385.8171081542969) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=78, x=115, store=385.8171081542969). Will move normally and eat
-->4-Sheep (y=78, x=115, store=385.8171081542969) before normal moving and eating
-->4-Sheep (y=79, x=114, store=395.8171081542969) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=94, x=72, store=542.1875) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=94, x=72, store=542.1875). Will move normally and eat
-->5-Sheep (y=94, x=72, store=542.1875) before normal moving and eating
-->5-Sheep (y=93, x=73, store=552.1875) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=95, x=87, store=336.953125) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=95, x=87, store=336.953125). Will move normally and eat
-->6-Sheep (y=95, x=87, store=336.953125) before normal moving and eating
-->6-Sheep (y=94, x=88, store=346.953125) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=86, x=117, store=461.2794494628906) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=86, x=117, store=461.2794494628906). Will move normally and eat
-->7-Sheep (y=86, x=117, store=461.2794494628906) before normal moving and eating
-->7-Sheep (y=85, x=118, store=471.2794494628906) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________


-> ------------ 8-Sheep initialised with (y=92, x=88, store=346.953125) -----------
--> 8-Sheep looping with 0-Wolf.
--> 8-Sheep looping with 1-Wolf.
--> 8-Sheep looping with 2-Wolf.
--> 8-Sheep looping with 3-Wolf.
--> 8-Sheep looping with 4-Wolf.
--> 8-Sheep looping with 5-Wolf.
--> 8-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->8-Sheep has Store < Min_ernergy(600) (y=92, x=88, store=346.953125). Will move normally and eat
-->8-Sheep (y=92, x=88, store=346.953125) before normal moving and eating
-->8-Sheep (y=93, x=89, store=356.953125) after normal moving and eating
___e2________ 8-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=240, x=35, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=240, x=35, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
---> 0-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=240, x=35, store=100) before normal moving
-->else1 ends: 0-Wolf (y=241, x=34, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=111, x=266, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=111, x=266, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
---> 1-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=111, x=266, store=300) before normal moving
-->else1 ends: 1-Wolf (y=110, x=267, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=219, x=111, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=219, x=111, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
---> 2-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=219, x=111, store=200) before normal moving
-->else1 ends: 2-Wolf (y=218, x=112, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=71, x=13, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=71, x=13, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
---> 3-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=71, x=13, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=70, x=12, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=43, x=7, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=43, x=7, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
---> 4-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=43, x=7, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=42, x=6, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=51, x=6, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=51, x=6, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
---> 5-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=51, x=6, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=50, x=7, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=43, x=7, store=836.0) --------
--> 6-Wolf has > 500 store (y=43, x=7, store=836.0) and Random >= 0.5. so will try to find CW to move closer or breed/fight if within AD(5).
-> No CW found. although store >500 and p>=0.5!
--->else2 begins: 6-Wolf (y=43, x=7, store=836.0) before normal moving.
--->else2 begins: 6-Wolf (y=42, x=8, store=836.0) after normal moving.
.... el2 _______  6-Wolf moved normally _______ 
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 130 ************

-> ------------ 0-Sheep initialised with (y=87, x=75, store=435.3125) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=87, x=75, store=435.3125). Will move normally and eat
-->0-Sheep (y=87, x=75, store=435.3125) before normal moving and eating
-->0-Sheep (y=88, x=76, store=445.3125) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=79, x=117, store=385.8171081542969) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=79, x=117, store=385.8171081542969). Will move normally and eat
-->1-Sheep (y=79, x=117, store=385.8171081542969) before normal moving and eating
-->1-Sheep (y=78, x=118, store=395.8171081542969) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=93, x=78, store=445.3125) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=93, x=78, store=445.3125). Will move normally and eat
-->2-Sheep (y=93, x=78, store=445.3125) before normal moving and eating
-->2-Sheep (y=92, x=79, store=455.3125) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=83, x=107, store=461.2794494628906) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=83, x=107, store=461.2794494628906). Will move normally and eat
-->3-Sheep (y=83, x=107, store=461.2794494628906) before normal moving and eating
-->3-Sheep (y=82, x=108, store=471.2794494628906) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=79, x=114, store=395.8171081542969) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=79, x=114, store=395.8171081542969). Will move normally and eat
-->4-Sheep (y=79, x=114, store=395.8171081542969) before normal moving and eating
-->4-Sheep (y=78, x=113, store=405.8171081542969) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=93, x=73, store=552.1875) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=93, x=73, store=552.1875). Will move normally and eat
-->5-Sheep (y=93, x=73, store=552.1875) before normal moving and eating
-->5-Sheep (y=92, x=74, store=562.1875) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=94, x=88, store=346.953125) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=94, x=88, store=346.953125). Will move normally and eat
-->6-Sheep (y=94, x=88, store=346.953125) before normal moving and eating
-->6-Sheep (y=95, x=89, store=356.953125) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=85, x=118, store=471.2794494628906) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=85, x=118, store=471.2794494628906). Will move normally and eat
-->7-Sheep (y=85, x=118, store=471.2794494628906) before normal moving and eating
-->7-Sheep (y=84, x=117, store=481.2794494628906) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________


-> ------------ 8-Sheep initialised with (y=93, x=89, store=356.953125) -----------
--> 8-Sheep looping with 0-Wolf.
--> 8-Sheep looping with 1-Wolf.
--> 8-Sheep looping with 2-Wolf.
--> 8-Sheep looping with 3-Wolf.
--> 8-Sheep looping with 4-Wolf.
--> 8-Sheep looping with 5-Wolf.
--> 8-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->8-Sheep has Store < Min_ernergy(600) (y=93, x=89, store=356.953125). Will move normally and eat
-->8-Sheep (y=93, x=89, store=356.953125) before normal moving and eating
-->8-Sheep (y=92, x=88, store=366.953125) after normal moving and eating
___e2________ 8-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=241, x=34, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=241, x=34, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
---> 0-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=241, x=34, store=100) before normal moving
-->else1 ends: 0-Wolf (y=242, x=35, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=110, x=267, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=110, x=267, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
---> 1-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=110, x=267, store=300) before normal moving
-->else1 ends: 1-Wolf (y=111, x=268, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=218, x=112, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=218, x=112, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
---> 2-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=218, x=112, store=200) before normal moving
-->else1 ends: 2-Wolf (y=219, x=113, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=70, x=12, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=70, x=12, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
---> 3-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=70, x=12, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=71, x=11, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=42, x=6, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=42, x=6, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
---> 4-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=42, x=6, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=41, x=7, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=50, x=7, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=50, x=7, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
---> 5-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=50, x=7, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=51, x=6, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=42, x=8, store=836.0) --------
--> 6-Wolf has > 500 store (y=42, x=8, store=836.0) and Random >= 0.5. so will try to find CW to move closer or breed/fight if within AD(5).
-> No CW found. although store >500 and p>=0.5!
--->else2 begins: 6-Wolf (y=42, x=8, store=836.0) before normal moving.
--->else2 begins: 6-Wolf (y=43, x=9, store=836.0) after normal moving.
.... el2 _______  6-Wolf moved normally _______ 
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 131 ************

-> ------------ 0-Sheep initialised with (y=88, x=76, store=445.3125) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=88, x=76, store=445.3125). Will move normally and eat
-->0-Sheep (y=88, x=76, store=445.3125) before normal moving and eating
-->0-Sheep (y=89, x=75, store=455.3125) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=78, x=118, store=395.8171081542969) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=78, x=118, store=395.8171081542969). Will move normally and eat
-->1-Sheep (y=78, x=118, store=395.8171081542969) before normal moving and eating
-->1-Sheep (y=77, x=117, store=405.8171081542969) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=92, x=79, store=455.3125) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=92, x=79, store=455.3125). Will move normally and eat
-->2-Sheep (y=92, x=79, store=455.3125) before normal moving and eating
-->2-Sheep (y=91, x=80, store=465.3125) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=82, x=108, store=471.2794494628906) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=82, x=108, store=471.2794494628906). Will move normally and eat
-->3-Sheep (y=82, x=108, store=471.2794494628906) before normal moving and eating
-->3-Sheep (y=83, x=109, store=481.2794494628906) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=78, x=113, store=405.8171081542969) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=78, x=113, store=405.8171081542969). Will move normally and eat
-->4-Sheep (y=78, x=113, store=405.8171081542969) before normal moving and eating
-->4-Sheep (y=77, x=114, store=415.8171081542969) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=92, x=74, store=562.1875) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=92, x=74, store=562.1875). Will move normally and eat
-->5-Sheep (y=92, x=74, store=562.1875) before normal moving and eating
-->5-Sheep (y=91, x=75, store=572.1875) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=95, x=89, store=356.953125) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=95, x=89, store=356.953125). Will move normally and eat
-->6-Sheep (y=95, x=89, store=356.953125) before normal moving and eating
-->6-Sheep (y=96, x=90, store=366.953125) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=84, x=117, store=481.2794494628906) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=84, x=117, store=481.2794494628906). Will move normally and eat
-->7-Sheep (y=84, x=117, store=481.2794494628906) before normal moving and eating
-->7-Sheep (y=85, x=116, store=491.2794494628906) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________


-> ------------ 8-Sheep initialised with (y=92, x=88, store=366.953125) -----------
--> 8-Sheep looping with 0-Wolf.
--> 8-Sheep looping with 1-Wolf.
--> 8-Sheep looping with 2-Wolf.
--> 8-Sheep looping with 3-Wolf.
--> 8-Sheep looping with 4-Wolf.
--> 8-Sheep looping with 5-Wolf.
--> 8-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->8-Sheep has Store < Min_ernergy(600) (y=92, x=88, store=366.953125). Will move normally and eat
-->8-Sheep (y=92, x=88, store=366.953125) before normal moving and eating
-->8-Sheep (y=93, x=89, store=376.953125) after normal moving and eating
___e2________ 8-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=242, x=35, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=242, x=35, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
---> 0-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=242, x=35, store=100) before normal moving
-->else1 ends: 0-Wolf (y=241, x=36, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=111, x=268, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=111, x=268, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
---> 1-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=111, x=268, store=300) before normal moving
-->else1 ends: 1-Wolf (y=112, x=269, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=219, x=113, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=219, x=113, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
---> 2-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=219, x=113, store=200) before normal moving
-->else1 ends: 2-Wolf (y=218, x=114, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=71, x=11, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=71, x=11, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
---> 3-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=71, x=11, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=72, x=12, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=41, x=7, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=41, x=7, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
---> 4-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=41, x=7, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=40, x=6, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=51, x=6, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=51, x=6, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
---> 5-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=51, x=6, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=50, x=7, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=43, x=9, store=836.0) --------
--> 6-Wolf has > 500 store (y=43, x=9, store=836.0) and Random >= 0.5. so will try to find CW to move closer or breed/fight if within AD(5).
-> No CW found. although store >500 and p>=0.5!
--->else2 begins: 6-Wolf (y=43, x=9, store=836.0) before normal moving.
--->else2 begins: 6-Wolf (y=44, x=8, store=836.0) after normal moving.
.... el2 _______  6-Wolf moved normally _______ 
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 132 ************

-> ------------ 0-Sheep initialised with (y=89, x=75, store=455.3125) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=89, x=75, store=455.3125). Will move normally and eat
-->0-Sheep (y=89, x=75, store=455.3125) before normal moving and eating
-->0-Sheep (y=88, x=74, store=465.3125) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=77, x=117, store=405.8171081542969) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=77, x=117, store=405.8171081542969). Will move normally and eat
-->1-Sheep (y=77, x=117, store=405.8171081542969) before normal moving and eating
-->1-Sheep (y=76, x=116, store=415.8171081542969) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=91, x=80, store=465.3125) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=91, x=80, store=465.3125). Will move normally and eat
-->2-Sheep (y=91, x=80, store=465.3125) before normal moving and eating
-->2-Sheep (y=92, x=79, store=475.3125) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=83, x=109, store=481.2794494628906) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=83, x=109, store=481.2794494628906). Will move normally and eat
-->3-Sheep (y=83, x=109, store=481.2794494628906) before normal moving and eating
-->3-Sheep (y=82, x=110, store=491.2794494628906) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=77, x=114, store=415.8171081542969) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=77, x=114, store=415.8171081542969). Will move normally and eat
-->4-Sheep (y=77, x=114, store=415.8171081542969) before normal moving and eating
-->4-Sheep (y=76, x=113, store=425.8171081542969) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=91, x=75, store=572.1875) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=91, x=75, store=572.1875). Will move normally and eat
-->5-Sheep (y=91, x=75, store=572.1875) before normal moving and eating
-->5-Sheep (y=92, x=74, store=582.1875) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=96, x=90, store=366.953125) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=96, x=90, store=366.953125). Will move normally and eat
-->6-Sheep (y=96, x=90, store=366.953125) before normal moving and eating
-->6-Sheep (y=95, x=91, store=376.953125) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=85, x=116, store=491.2794494628906) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=85, x=116, store=491.2794494628906). Will move normally and eat
-->7-Sheep (y=85, x=116, store=491.2794494628906) before normal moving and eating
-->7-Sheep (y=84, x=117, store=501.2794494628906) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________


-> ------------ 8-Sheep initialised with (y=93, x=89, store=376.953125) -----------
--> 8-Sheep looping with 0-Wolf.
--> 8-Sheep looping with 1-Wolf.
--> 8-Sheep looping with 2-Wolf.
--> 8-Sheep looping with 3-Wolf.
--> 8-Sheep looping with 4-Wolf.
--> 8-Sheep looping with 5-Wolf.
--> 8-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->8-Sheep has Store < Min_ernergy(600) (y=93, x=89, store=376.953125). Will move normally and eat
-->8-Sheep (y=93, x=89, store=376.953125) before normal moving and eating
-->8-Sheep (y=94, x=88, store=386.953125) after normal moving and eating
___e2________ 8-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=241, x=36, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=241, x=36, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
---> 0-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=241, x=36, store=100) before normal moving
-->else1 ends: 0-Wolf (y=242, x=37, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=112, x=269, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=112, x=269, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
---> 1-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=112, x=269, store=300) before normal moving
-->else1 ends: 1-Wolf (y=111, x=270, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=218, x=114, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=218, x=114, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
---> 2-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=218, x=114, store=200) before normal moving
-->else1 ends: 2-Wolf (y=219, x=115, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=72, x=12, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=72, x=12, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
---> 3-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=72, x=12, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=71, x=13, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=40, x=6, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=40, x=6, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
---> 4-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=40, x=6, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=41, x=5, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=50, x=7, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=50, x=7, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
---> 5-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=50, x=7, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=49, x=6, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=44, x=8, store=836.0) --------
--> if and elif not satisfied
--> 6-Wolf has > Min_energy(500) store (y=44, x=8, store=836.0) but Random < bf_e/2(0.25). So will move normally.
--->else3 begins: 6-Wolf (y=44, x=8, store=836.0) before normal moving.
--->else3 begins: 6-Wolf (y=45, x=7, store=836.0) after normal moving.
....e3_______ 6-Wolf moved normally_______
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 133 ************

-> ------------ 0-Sheep initialised with (y=88, x=74, store=465.3125) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=88, x=74, store=465.3125). Will move normally and eat
-->0-Sheep (y=88, x=74, store=465.3125) before normal moving and eating
-->0-Sheep (y=89, x=73, store=475.3125) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=76, x=116, store=415.8171081542969) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=76, x=116, store=415.8171081542969). Will move normally and eat
-->1-Sheep (y=76, x=116, store=415.8171081542969) before normal moving and eating
-->1-Sheep (y=75, x=115, store=425.8171081542969) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=92, x=79, store=475.3125) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=92, x=79, store=475.3125). Will move normally and eat
-->2-Sheep (y=92, x=79, store=475.3125) before normal moving and eating
-->2-Sheep (y=91, x=78, store=485.3125) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=82, x=110, store=491.2794494628906) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=82, x=110, store=491.2794494628906). Will move normally and eat
-->3-Sheep (y=82, x=110, store=491.2794494628906) before normal moving and eating
-->3-Sheep (y=81, x=111, store=501.2794494628906) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=76, x=113, store=425.8171081542969) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=76, x=113, store=425.8171081542969). Will move normally and eat
-->4-Sheep (y=76, x=113, store=425.8171081542969) before normal moving and eating
-->4-Sheep (y=77, x=112, store=435.8171081542969) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=92, x=74, store=582.1875) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=92, x=74, store=582.1875). Will move normally and eat
-->5-Sheep (y=92, x=74, store=582.1875) before normal moving and eating
-->5-Sheep (y=91, x=75, store=592.1875) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=95, x=91, store=376.953125) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=95, x=91, store=376.953125). Will move normally and eat
-->6-Sheep (y=95, x=91, store=376.953125) before normal moving and eating
-->6-Sheep (y=94, x=90, store=386.953125) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=84, x=117, store=501.2794494628906) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=84, x=117, store=501.2794494628906). Will move normally and eat
-->7-Sheep (y=84, x=117, store=501.2794494628906) before normal moving and eating
-->7-Sheep (y=83, x=118, store=511.2794494628906) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________


-> ------------ 8-Sheep initialised with (y=94, x=88, store=386.953125) -----------
--> 8-Sheep looping with 0-Wolf.
--> 8-Sheep looping with 1-Wolf.
--> 8-Sheep looping with 2-Wolf.
--> 8-Sheep looping with 3-Wolf.
--> 8-Sheep looping with 4-Wolf.
--> 8-Sheep looping with 5-Wolf.
--> 8-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->8-Sheep has Store < Min_ernergy(600) (y=94, x=88, store=386.953125). Will move normally and eat
-->8-Sheep (y=94, x=88, store=386.953125) before normal moving and eating
-->8-Sheep (y=93, x=87, store=396.953125) after normal moving and eating
___e2________ 8-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=242, x=37, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=242, x=37, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
---> 0-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=242, x=37, store=100) before normal moving
-->else1 ends: 0-Wolf (y=243, x=38, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=111, x=270, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=111, x=270, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
---> 1-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=111, x=270, store=300) before normal moving
-->else1 ends: 1-Wolf (y=110, x=271, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=219, x=115, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=219, x=115, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
---> 2-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=219, x=115, store=200) before normal moving
-->else1 ends: 2-Wolf (y=220, x=116, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=71, x=13, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=71, x=13, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
---> 3-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=71, x=13, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=70, x=12, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=41, x=5, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=41, x=5, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
---> 4-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=41, x=5, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=42, x=6, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=49, x=6, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=49, x=6, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
---> 5-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=49, x=6, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=48, x=5, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=45, x=7, store=836.0) --------
--> 6-Wolf has >Min_energy(500) store (y=45, x=7, store=836.0) and 0.25 <= random.random() < 0.5. Tries to find food (sheep).
---> 6-Wolf looping with 0-Sheep
---> 6-Wolf looping with 1-Sheep
---> 6-Wolf looping with 2-Sheep
---> 6-Wolf looping with 3-Sheep
---> 6-Wolf looping with 4-Sheep
---> 6-Wolf looping with 5-Sheep
---> 6-Wolf looping with 6-Sheep
---> 6-Wolf looping with 7-Sheep
---> 6-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 6-Wolf (y=45, x=7, store=836.0) before normal moving
-->else1 ends: 6-Wolf (y=44, x=6, store=836.0) after normal moving
....el1___________ 6-Wolf moved normally___________
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 134 ************

-> ------------ 0-Sheep initialised with (y=89, x=73, store=475.3125) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=89, x=73, store=475.3125). Will move normally and eat
-->0-Sheep (y=89, x=73, store=475.3125) before normal moving and eating
-->0-Sheep (y=88, x=72, store=485.3125) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=75, x=115, store=425.8171081542969) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=75, x=115, store=425.8171081542969). Will move normally and eat
-->1-Sheep (y=75, x=115, store=425.8171081542969) before normal moving and eating
-->1-Sheep (y=74, x=114, store=435.8171081542969) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=91, x=78, store=485.3125) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=91, x=78, store=485.3125). Will move normally and eat
-->2-Sheep (y=91, x=78, store=485.3125) before normal moving and eating
-->2-Sheep (y=90, x=79, store=495.3125) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=81, x=111, store=501.2794494628906) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=81, x=111, store=501.2794494628906). Will move normally and eat
-->3-Sheep (y=81, x=111, store=501.2794494628906) before normal moving and eating
-->3-Sheep (y=80, x=112, store=511.2794494628906) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=77, x=112, store=435.8171081542969) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=77, x=112, store=435.8171081542969). Will move normally and eat
-->4-Sheep (y=77, x=112, store=435.8171081542969) before normal moving and eating
-->4-Sheep (y=76, x=111, store=445.8171081542969) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=91, x=75, store=592.1875) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=91, x=75, store=592.1875). Will move normally and eat
-->5-Sheep (y=91, x=75, store=592.1875) before normal moving and eating
-->5-Sheep (y=92, x=76, store=602.1875) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=94, x=90, store=386.953125) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=94, x=90, store=386.953125). Will move normally and eat
-->6-Sheep (y=94, x=90, store=386.953125) before normal moving and eating
-->6-Sheep (y=95, x=91, store=396.953125) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=83, x=118, store=511.2794494628906) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=83, x=118, store=511.2794494628906). Will move normally and eat
-->7-Sheep (y=83, x=118, store=511.2794494628906) before normal moving and eating
-->7-Sheep (y=84, x=117, store=521.2794494628906) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________


-> ------------ 8-Sheep initialised with (y=93, x=87, store=396.953125) -----------
--> 8-Sheep looping with 0-Wolf.
--> 8-Sheep looping with 1-Wolf.
--> 8-Sheep looping with 2-Wolf.
--> 8-Sheep looping with 3-Wolf.
--> 8-Sheep looping with 4-Wolf.
--> 8-Sheep looping with 5-Wolf.
--> 8-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->8-Sheep has Store < Min_ernergy(600) (y=93, x=87, store=396.953125). Will move normally and eat
-->8-Sheep (y=93, x=87, store=396.953125) before normal moving and eating
-->8-Sheep (y=94, x=88, store=406.953125) after normal moving and eating
___e2________ 8-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=243, x=38, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=243, x=38, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
---> 0-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=243, x=38, store=100) before normal moving
-->else1 ends: 0-Wolf (y=244, x=37, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=110, x=271, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=110, x=271, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
---> 1-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=110, x=271, store=300) before normal moving
-->else1 ends: 1-Wolf (y=109, x=272, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=220, x=116, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=220, x=116, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
---> 2-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=220, x=116, store=200) before normal moving
-->else1 ends: 2-Wolf (y=221, x=115, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=70, x=12, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=70, x=12, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
---> 3-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=70, x=12, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=71, x=13, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=42, x=6, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=42, x=6, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
---> 4-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=42, x=6, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=43, x=5, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=48, x=5, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=48, x=5, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
---> 5-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=48, x=5, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=49, x=6, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=44, x=6, store=836.0) --------
--> 6-Wolf has >Min_energy(500) store (y=44, x=6, store=836.0) and 0.25 <= random.random() < 0.5. Tries to find food (sheep).
---> 6-Wolf looping with 0-Sheep
---> 6-Wolf looping with 1-Sheep
---> 6-Wolf looping with 2-Sheep
---> 6-Wolf looping with 3-Sheep
---> 6-Wolf looping with 4-Sheep
---> 6-Wolf looping with 5-Sheep
---> 6-Wolf looping with 6-Sheep
---> 6-Wolf looping with 7-Sheep
---> 6-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 6-Wolf (y=44, x=6, store=836.0) before normal moving
-->else1 ends: 6-Wolf (y=43, x=5, store=836.0) after normal moving
....el1___________ 6-Wolf moved normally___________
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 135 ************

-> ------------ 0-Sheep initialised with (y=88, x=72, store=485.3125) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=88, x=72, store=485.3125). Will move normally and eat
-->0-Sheep (y=88, x=72, store=485.3125) before normal moving and eating
-->0-Sheep (y=89, x=73, store=495.3125) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=74, x=114, store=435.8171081542969) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=74, x=114, store=435.8171081542969). Will move normally and eat
-->1-Sheep (y=74, x=114, store=435.8171081542969) before normal moving and eating
-->1-Sheep (y=75, x=115, store=445.8171081542969) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=90, x=79, store=495.3125) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=90, x=79, store=495.3125). Will move normally and eat
-->2-Sheep (y=90, x=79, store=495.3125) before normal moving and eating
-->2-Sheep (y=91, x=80, store=505.3125) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=80, x=112, store=511.2794494628906) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=80, x=112, store=511.2794494628906). Will move normally and eat
-->3-Sheep (y=80, x=112, store=511.2794494628906) before normal moving and eating
-->3-Sheep (y=79, x=113, store=521.2794494628906) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=76, x=111, store=445.8171081542969) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=76, x=111, store=445.8171081542969). Will move normally and eat
-->4-Sheep (y=76, x=111, store=445.8171081542969) before normal moving and eating
-->4-Sheep (y=75, x=112, store=455.8171081542969) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=92, x=76, store=602.1875) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store > Min_ernergy(600) (y=92, x=76, store=602.1875).
--> 5-Sheep looping with 0-Sheep.
----> ---- (AD < D < MD).
----> Min distance=15.297058540778355 for 5-Sheep (y=92, x=76, store=602.1875) with 0-Sheep (y=95, x=91, store=396.953125).
--> 5-Sheep looping with 1-Sheep.
--> 5-Sheep looping with 2-Sheep.
----> ---- (AD < D < MD).
----> Min distance=12.165525060596439 for 5-Sheep (y=92, x=76, store=602.1875) with 2-Sheep (y=94, x=88, store=406.953125).
->CS Found!
-> 5-Sheep (y=92, x=76, store=602.1875) before moving closer (while eating) to CS-Sheep: (y=94, x=88, store=406.953125).
-> 5-Wolf (y=93, x=82, store=612.1875) after moving closer (while eating) to CS-Sheep: (y=94, x=88, store=406.953125).
___________ 5-Sheep moved closer CS___________


-> ------------ 6-Sheep initialised with (y=95, x=91, store=396.953125) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=95, x=91, store=396.953125). Will move normally and eat
-->6-Sheep (y=95, x=91, store=396.953125) before normal moving and eating
-->6-Sheep (y=94, x=92, store=406.953125) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=84, x=117, store=521.2794494628906) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=84, x=117, store=521.2794494628906). Will move normally and eat
-->7-Sheep (y=84, x=117, store=521.2794494628906) before normal moving and eating
-->7-Sheep (y=85, x=118, store=531.2794494628906) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________


-> ------------ 8-Sheep initialised with (y=94, x=88, store=406.953125) -----------
--> 8-Sheep looping with 0-Wolf.
--> 8-Sheep looping with 1-Wolf.
--> 8-Sheep looping with 2-Wolf.
--> 8-Sheep looping with 3-Wolf.
--> 8-Sheep looping with 4-Wolf.
--> 8-Sheep looping with 5-Wolf.
--> 8-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->8-Sheep has Store < Min_ernergy(600) (y=94, x=88, store=406.953125). Will move normally and eat
-->8-Sheep (y=94, x=88, store=406.953125) before normal moving and eating
-->8-Sheep (y=95, x=87, store=416.953125) after normal moving and eating
___e2________ 8-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=244, x=37, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=244, x=37, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
---> 0-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=244, x=37, store=100) before normal moving
-->else1 ends: 0-Wolf (y=243, x=38, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=109, x=272, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=109, x=272, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
---> 1-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=109, x=272, store=300) before normal moving
-->else1 ends: 1-Wolf (y=110, x=271, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=221, x=115, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=221, x=115, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
---> 2-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=221, x=115, store=200) before normal moving
-->else1 ends: 2-Wolf (y=222, x=114, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=71, x=13, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=71, x=13, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
---> 3-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=71, x=13, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=72, x=12, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=43, x=5, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=43, x=5, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
---> 4-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=43, x=5, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=44, x=6, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=49, x=6, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=49, x=6, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
---> 5-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=49, x=6, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=48, x=7, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=43, x=5, store=836.0) --------
--> 6-Wolf has > 500 store (y=43, x=5, store=836.0) and Random >= 0.5. so will try to find CW to move closer or breed/fight if within AD(5).
-> No CW found. although store >500 and p>=0.5!
--->else2 begins: 6-Wolf (y=43, x=5, store=836.0) before normal moving.
--->else2 begins: 6-Wolf (y=44, x=6, store=836.0) after normal moving.
.... el2 _______  6-Wolf moved normally _______ 
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 136 ************

-> ------------ 0-Sheep initialised with (y=89, x=73, store=495.3125) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=89, x=73, store=495.3125). Will move normally and eat
-->0-Sheep (y=89, x=73, store=495.3125) before normal moving and eating
-->0-Sheep (y=88, x=72, store=505.3125) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=75, x=115, store=445.8171081542969) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=75, x=115, store=445.8171081542969). Will move normally and eat
-->1-Sheep (y=75, x=115, store=445.8171081542969) before normal moving and eating
-->1-Sheep (y=74, x=116, store=455.8171081542969) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=91, x=80, store=505.3125) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=91, x=80, store=505.3125). Will move normally and eat
-->2-Sheep (y=91, x=80, store=505.3125) before normal moving and eating
-->2-Sheep (y=92, x=79, store=515.3125) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=79, x=113, store=521.2794494628906) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=79, x=113, store=521.2794494628906). Will move normally and eat
-->3-Sheep (y=79, x=113, store=521.2794494628906) before normal moving and eating
-->3-Sheep (y=80, x=112, store=531.2794494628906) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=75, x=112, store=455.8171081542969) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=75, x=112, store=455.8171081542969). Will move normally and eat
-->4-Sheep (y=75, x=112, store=455.8171081542969) before normal moving and eating
-->4-Sheep (y=74, x=111, store=465.8171081542969) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=93, x=82, store=612.1875) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store > Min_ernergy(600) (y=93, x=82, store=612.1875).
--> 5-Sheep looping with 0-Sheep.
----> ---- (AD < D < MD).
----> Min distance=10.04987562112089 for 5-Sheep (y=93, x=82, store=612.1875) with 0-Sheep (y=94, x=92, store=406.953125).
--> 5-Sheep looping with 1-Sheep.
--> 5-Sheep looping with 2-Sheep.
----> ---- (AD < D < MD).
----> Min distance=5.385164807134504 for 5-Sheep (y=93, x=82, store=612.1875) with 2-Sheep (y=95, x=87, store=416.953125).
->CS Found!
-> 5-Sheep (y=93, x=82, store=612.1875) before moving closer (while eating) to CS-Sheep: (y=95, x=87, store=416.953125).
-> 5-Wolf (y=94, x=84, store=622.1875) after moving closer (while eating) to CS-Sheep: (y=95, x=87, store=416.953125).
___________ 5-Sheep moved closer CS___________


-> ------------ 6-Sheep initialised with (y=94, x=92, store=406.953125) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=94, x=92, store=406.953125). Will move normally and eat
-->6-Sheep (y=94, x=92, store=406.953125) before normal moving and eating
-->6-Sheep (y=93, x=93, store=416.953125) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=85, x=118, store=531.2794494628906) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=85, x=118, store=531.2794494628906). Will move normally and eat
-->7-Sheep (y=85, x=118, store=531.2794494628906) before normal moving and eating
-->7-Sheep (y=84, x=119, store=541.2794494628906) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________


-> ------------ 8-Sheep initialised with (y=95, x=87, store=416.953125) -----------
--> 8-Sheep looping with 0-Wolf.
--> 8-Sheep looping with 1-Wolf.
--> 8-Sheep looping with 2-Wolf.
--> 8-Sheep looping with 3-Wolf.
--> 8-Sheep looping with 4-Wolf.
--> 8-Sheep looping with 5-Wolf.
--> 8-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->8-Sheep has Store < Min_ernergy(600) (y=95, x=87, store=416.953125). Will move normally and eat
-->8-Sheep (y=95, x=87, store=416.953125) before normal moving and eating
-->8-Sheep (y=94, x=86, store=426.953125) after normal moving and eating
___e2________ 8-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=243, x=38, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=243, x=38, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
---> 0-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=243, x=38, store=100) before normal moving
-->else1 ends: 0-Wolf (y=244, x=39, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=110, x=271, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=110, x=271, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
---> 1-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=110, x=271, store=300) before normal moving
-->else1 ends: 1-Wolf (y=111, x=272, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=222, x=114, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=222, x=114, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
---> 2-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=222, x=114, store=200) before normal moving
-->else1 ends: 2-Wolf (y=221, x=113, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=72, x=12, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=72, x=12, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
---> 3-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=72, x=12, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=71, x=11, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=44, x=6, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=44, x=6, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
---> 4-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=44, x=6, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=43, x=7, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=48, x=7, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=48, x=7, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
---> 5-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=48, x=7, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=47, x=6, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=44, x=6, store=836.0) --------
--> if and elif not satisfied
--> 6-Wolf has > Min_energy(500) store (y=44, x=6, store=836.0) but Random < bf_e/2(0.25). So will move normally.
--->else3 begins: 6-Wolf (y=44, x=6, store=836.0) before normal moving.
--->else3 begins: 6-Wolf (y=45, x=5, store=836.0) after normal moving.
....e3_______ 6-Wolf moved normally_______
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 137 ************

-> ------------ 0-Sheep initialised with (y=88, x=72, store=505.3125) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=88, x=72, store=505.3125). Will move normally and eat
-->0-Sheep (y=88, x=72, store=505.3125) before normal moving and eating
-->0-Sheep (y=89, x=71, store=515.3125) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=74, x=116, store=455.8171081542969) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=74, x=116, store=455.8171081542969). Will move normally and eat
-->1-Sheep (y=74, x=116, store=455.8171081542969) before normal moving and eating
-->1-Sheep (y=75, x=115, store=465.8171081542969) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=92, x=79, store=515.3125) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=92, x=79, store=515.3125). Will move normally and eat
-->2-Sheep (y=92, x=79, store=515.3125) before normal moving and eating
-->2-Sheep (y=91, x=80, store=525.3125) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=80, x=112, store=531.2794494628906) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=80, x=112, store=531.2794494628906). Will move normally and eat
-->3-Sheep (y=80, x=112, store=531.2794494628906) before normal moving and eating
-->3-Sheep (y=79, x=113, store=541.2794494628906) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=74, x=111, store=465.8171081542969) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=74, x=111, store=465.8171081542969). Will move normally and eat
-->4-Sheep (y=74, x=111, store=465.8171081542969) before normal moving and eating
-->4-Sheep (y=75, x=112, store=475.8171081542969) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=94, x=84, store=622.1875) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store > Min_ernergy(600) (y=94, x=84, store=622.1875).
--> 5-Sheep looping with 0-Sheep.
----> ---- (AD < D < MD).
----> Min distance=9.055385138137417 for 5-Sheep (y=94, x=84, store=622.1875) with 0-Sheep (y=93, x=93, store=416.953125).
--> 5-Sheep looping with 1-Sheep.
--> 5-Sheep looping with 2-Sheep.
----> D <=AD. Sheep Breeding/Sharing proximity of 2.0(<=5) entered by CS 5-Sheep (y=94, x=84, store=622.1875) with CS 2-Sheep (y=94, x=86, store=426.953125).
-----> 5-Sheep (y=94, x=84, store=622.1875) and CS 2-Sheep (y=94, x=86, store=426.953125 will not mate as CS 2-Sheep store <600. They will share resource to become average.
-----> Shared resources = True
-----> 5-Sheep (y=94, x=84, store=524.5703125) and CS 2-Sheep (y=94, x=86, store=524.5703125) after sharing resources!
_____________ 5-Sheep and CS 2-Sheep shared resources ____________
_______ Breeding=False, Failed breeding=False, Share=True for 5-Sheep __________

-> ------------ 6-Sheep initialised with (y=93, x=93, store=416.953125) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=93, x=93, store=416.953125). Will move normally and eat
-->6-Sheep (y=93, x=93, store=416.953125) before normal moving and eating
-->6-Sheep (y=94, x=92, store=426.953125) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=84, x=119, store=541.2794494628906) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=84, x=119, store=541.2794494628906). Will move normally and eat
-->7-Sheep (y=84, x=119, store=541.2794494628906) before normal moving and eating
-->7-Sheep (y=83, x=118, store=551.2794494628906) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________


-> ------------ 8-Sheep initialised with (y=94, x=86, store=524.5703125) -----------
--> 8-Sheep looping with 0-Wolf.
--> 8-Sheep looping with 1-Wolf.
--> 8-Sheep looping with 2-Wolf.
--> 8-Sheep looping with 3-Wolf.
--> 8-Sheep looping with 4-Wolf.
--> 8-Sheep looping with 5-Wolf.
--> 8-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->8-Sheep has Store < Min_ernergy(600) (y=94, x=86, store=524.5703125). Will move normally and eat
-->8-Sheep (y=94, x=86, store=524.5703125) before normal moving and eating
-->8-Sheep (y=93, x=87, store=534.5703125) after normal moving and eating
___e2________ 8-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=244, x=39, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=244, x=39, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
---> 0-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=244, x=39, store=100) before normal moving
-->else1 ends: 0-Wolf (y=243, x=40, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=111, x=272, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=111, x=272, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
---> 1-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=111, x=272, store=300) before normal moving
-->else1 ends: 1-Wolf (y=110, x=273, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=221, x=113, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=221, x=113, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
---> 2-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=221, x=113, store=200) before normal moving
-->else1 ends: 2-Wolf (y=220, x=114, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=71, x=11, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=71, x=11, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
---> 3-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=71, x=11, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=72, x=10, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=43, x=7, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=43, x=7, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
---> 4-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=43, x=7, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=44, x=8, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=47, x=6, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=47, x=6, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
---> 5-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=47, x=6, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=46, x=5, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=45, x=5, store=836.0) --------
--> 6-Wolf has > 500 store (y=45, x=5, store=836.0) and Random >= 0.5. so will try to find CW to move closer or breed/fight if within AD(5).
-> No CW found. although store >500 and p>=0.5!
--->else2 begins: 6-Wolf (y=45, x=5, store=836.0) before normal moving.
--->else2 begins: 6-Wolf (y=46, x=4, store=836.0) after normal moving.
.... el2 _______  6-Wolf moved normally _______ 
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 138 ************

-> ------------ 0-Sheep initialised with (y=89, x=71, store=515.3125) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=89, x=71, store=515.3125). Will move normally and eat
-->0-Sheep (y=89, x=71, store=515.3125) before normal moving and eating
-->0-Sheep (y=88, x=70, store=525.3125) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=75, x=115, store=465.8171081542969) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=75, x=115, store=465.8171081542969). Will move normally and eat
-->1-Sheep (y=75, x=115, store=465.8171081542969) before normal moving and eating
-->1-Sheep (y=76, x=114, store=475.8171081542969) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=91, x=80, store=525.3125) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=91, x=80, store=525.3125). Will move normally and eat
-->2-Sheep (y=91, x=80, store=525.3125) before normal moving and eating
-->2-Sheep (y=90, x=79, store=535.3125) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=79, x=113, store=541.2794494628906) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=79, x=113, store=541.2794494628906). Will move normally and eat
-->3-Sheep (y=79, x=113, store=541.2794494628906) before normal moving and eating
-->3-Sheep (y=78, x=112, store=551.2794494628906) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=75, x=112, store=475.8171081542969) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=75, x=112, store=475.8171081542969). Will move normally and eat
-->4-Sheep (y=75, x=112, store=475.8171081542969) before normal moving and eating
-->4-Sheep (y=76, x=113, store=485.8171081542969) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=94, x=84, store=524.5703125) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=94, x=84, store=524.5703125). Will move normally and eat
-->5-Sheep (y=94, x=84, store=524.5703125) before normal moving and eating
-->5-Sheep (y=93, x=83, store=534.5703125) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=94, x=92, store=426.953125) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=94, x=92, store=426.953125). Will move normally and eat
-->6-Sheep (y=94, x=92, store=426.953125) before normal moving and eating
-->6-Sheep (y=95, x=91, store=436.953125) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=83, x=118, store=551.2794494628906) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=83, x=118, store=551.2794494628906). Will move normally and eat
-->7-Sheep (y=83, x=118, store=551.2794494628906) before normal moving and eating
-->7-Sheep (y=82, x=119, store=561.2794494628906) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________


-> ------------ 8-Sheep initialised with (y=93, x=87, store=534.5703125) -----------
--> 8-Sheep looping with 0-Wolf.
--> 8-Sheep looping with 1-Wolf.
--> 8-Sheep looping with 2-Wolf.
--> 8-Sheep looping with 3-Wolf.
--> 8-Sheep looping with 4-Wolf.
--> 8-Sheep looping with 5-Wolf.
--> 8-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->8-Sheep has Store < Min_ernergy(600) (y=93, x=87, store=534.5703125). Will move normally and eat
-->8-Sheep (y=93, x=87, store=534.5703125) before normal moving and eating
-->8-Sheep (y=94, x=88, store=544.5703125) after normal moving and eating
___e2________ 8-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=243, x=40, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=243, x=40, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
---> 0-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=243, x=40, store=100) before normal moving
-->else1 ends: 0-Wolf (y=242, x=41, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=110, x=273, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=110, x=273, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
---> 1-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=110, x=273, store=300) before normal moving
-->else1 ends: 1-Wolf (y=111, x=272, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=220, x=114, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=220, x=114, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
---> 2-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=220, x=114, store=200) before normal moving
-->else1 ends: 2-Wolf (y=221, x=115, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=72, x=10, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=72, x=10, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
---> 3-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=72, x=10, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=71, x=9, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=44, x=8, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=44, x=8, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
---> 4-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=44, x=8, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=43, x=9, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=46, x=5, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=46, x=5, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
---> 5-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=46, x=5, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=45, x=4, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=46, x=4, store=836.0) --------
--> if and elif not satisfied
--> 6-Wolf has > Min_energy(500) store (y=46, x=4, store=836.0) but Random < bf_e/2(0.25). So will move normally.
--->else3 begins: 6-Wolf (y=46, x=4, store=836.0) before normal moving.
--->else3 begins: 6-Wolf (y=45, x=3, store=836.0) after normal moving.
....e3_______ 6-Wolf moved normally_______
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 139 ************

-> ------------ 0-Sheep initialised with (y=88, x=70, store=525.3125) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=88, x=70, store=525.3125). Will move normally and eat
-->0-Sheep (y=88, x=70, store=525.3125) before normal moving and eating
-->0-Sheep (y=89, x=71, store=535.3125) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=76, x=114, store=475.8171081542969) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=76, x=114, store=475.8171081542969). Will move normally and eat
-->1-Sheep (y=76, x=114, store=475.8171081542969) before normal moving and eating
-->1-Sheep (y=75, x=115, store=485.8171081542969) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=90, x=79, store=535.3125) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=90, x=79, store=535.3125). Will move normally and eat
-->2-Sheep (y=90, x=79, store=535.3125) before normal moving and eating
-->2-Sheep (y=91, x=80, store=545.3125) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=78, x=112, store=551.2794494628906) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=78, x=112, store=551.2794494628906). Will move normally and eat
-->3-Sheep (y=78, x=112, store=551.2794494628906) before normal moving and eating
-->3-Sheep (y=79, x=111, store=561.2794494628906) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=76, x=113, store=485.8171081542969) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=76, x=113, store=485.8171081542969). Will move normally and eat
-->4-Sheep (y=76, x=113, store=485.8171081542969) before normal moving and eating
-->4-Sheep (y=77, x=112, store=495.8171081542969) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=93, x=83, store=534.5703125) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=93, x=83, store=534.5703125). Will move normally and eat
-->5-Sheep (y=93, x=83, store=534.5703125) before normal moving and eating
-->5-Sheep (y=94, x=82, store=544.5703125) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=95, x=91, store=436.953125) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=95, x=91, store=436.953125). Will move normally and eat
-->6-Sheep (y=95, x=91, store=436.953125) before normal moving and eating
-->6-Sheep (y=94, x=92, store=446.953125) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=82, x=119, store=561.2794494628906) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=82, x=119, store=561.2794494628906). Will move normally and eat
-->7-Sheep (y=82, x=119, store=561.2794494628906) before normal moving and eating
-->7-Sheep (y=81, x=118, store=571.2794494628906) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________


-> ------------ 8-Sheep initialised with (y=94, x=88, store=544.5703125) -----------
--> 8-Sheep looping with 0-Wolf.
--> 8-Sheep looping with 1-Wolf.
--> 8-Sheep looping with 2-Wolf.
--> 8-Sheep looping with 3-Wolf.
--> 8-Sheep looping with 4-Wolf.
--> 8-Sheep looping with 5-Wolf.
--> 8-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->8-Sheep has Store < Min_ernergy(600) (y=94, x=88, store=544.5703125). Will move normally and eat
-->8-Sheep (y=94, x=88, store=544.5703125) before normal moving and eating
-->8-Sheep (y=93, x=89, store=554.5703125) after normal moving and eating
___e2________ 8-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=242, x=41, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=242, x=41, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
---> 0-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=242, x=41, store=100) before normal moving
-->else1 ends: 0-Wolf (y=241, x=42, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=111, x=272, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=111, x=272, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
---> 1-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=111, x=272, store=300) before normal moving
-->else1 ends: 1-Wolf (y=112, x=273, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=221, x=115, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=221, x=115, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
---> 2-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=221, x=115, store=200) before normal moving
-->else1 ends: 2-Wolf (y=220, x=114, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=71, x=9, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=71, x=9, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
---> 3-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=71, x=9, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=70, x=10, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=43, x=9, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=43, x=9, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
---> 4-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=43, x=9, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=44, x=10, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=45, x=4, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=45, x=4, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
---> 5-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=45, x=4, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=46, x=3, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=45, x=3, store=836.0) --------
--> 6-Wolf has > 500 store (y=45, x=3, store=836.0) and Random >= 0.5. so will try to find CW to move closer or breed/fight if within AD(5).
-> No CW found. although store >500 and p>=0.5!
--->else2 begins: 6-Wolf (y=45, x=3, store=836.0) before normal moving.
--->else2 begins: 6-Wolf (y=46, x=4, store=836.0) after normal moving.
.... el2 _______  6-Wolf moved normally _______ 
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 140 ************

-> ------------ 0-Sheep initialised with (y=89, x=71, store=535.3125) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=89, x=71, store=535.3125). Will move normally and eat
-->0-Sheep (y=89, x=71, store=535.3125) before normal moving and eating
-->0-Sheep (y=88, x=72, store=545.3125) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=75, x=115, store=485.8171081542969) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=75, x=115, store=485.8171081542969). Will move normally and eat
-->1-Sheep (y=75, x=115, store=485.8171081542969) before normal moving and eating
-->1-Sheep (y=74, x=114, store=495.8171081542969) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=91, x=80, store=545.3125) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=91, x=80, store=545.3125). Will move normally and eat
-->2-Sheep (y=91, x=80, store=545.3125) before normal moving and eating
-->2-Sheep (y=90, x=81, store=555.3125) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=79, x=111, store=561.2794494628906) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=79, x=111, store=561.2794494628906). Will move normally and eat
-->3-Sheep (y=79, x=111, store=561.2794494628906) before normal moving and eating
-->3-Sheep (y=78, x=110, store=571.2794494628906) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=77, x=112, store=495.8171081542969) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=77, x=112, store=495.8171081542969). Will move normally and eat
-->4-Sheep (y=77, x=112, store=495.8171081542969) before normal moving and eating
-->4-Sheep (y=76, x=113, store=505.8171081542969) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=94, x=82, store=544.5703125) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=94, x=82, store=544.5703125). Will move normally and eat
-->5-Sheep (y=94, x=82, store=544.5703125) before normal moving and eating
-->5-Sheep (y=93, x=83, store=554.5703125) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=94, x=92, store=446.953125) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=94, x=92, store=446.953125). Will move normally and eat
-->6-Sheep (y=94, x=92, store=446.953125) before normal moving and eating
-->6-Sheep (y=95, x=91, store=456.953125) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=81, x=118, store=571.2794494628906) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=81, x=118, store=571.2794494628906). Will move normally and eat
-->7-Sheep (y=81, x=118, store=571.2794494628906) before normal moving and eating
-->7-Sheep (y=80, x=119, store=581.2794494628906) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________


-> ------------ 8-Sheep initialised with (y=93, x=89, store=554.5703125) -----------
--> 8-Sheep looping with 0-Wolf.
--> 8-Sheep looping with 1-Wolf.
--> 8-Sheep looping with 2-Wolf.
--> 8-Sheep looping with 3-Wolf.
--> 8-Sheep looping with 4-Wolf.
--> 8-Sheep looping with 5-Wolf.
--> 8-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->8-Sheep has Store < Min_ernergy(600) (y=93, x=89, store=554.5703125). Will move normally and eat
-->8-Sheep (y=93, x=89, store=554.5703125) before normal moving and eating
-->8-Sheep (y=92, x=90, store=564.5703125) after normal moving and eating
___e2________ 8-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=241, x=42, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=241, x=42, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
---> 0-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=241, x=42, store=100) before normal moving
-->else1 ends: 0-Wolf (y=240, x=41, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=112, x=273, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=112, x=273, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
---> 1-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=112, x=273, store=300) before normal moving
-->else1 ends: 1-Wolf (y=113, x=272, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=220, x=114, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=220, x=114, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
---> 2-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=220, x=114, store=200) before normal moving
-->else1 ends: 2-Wolf (y=219, x=113, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=70, x=10, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=70, x=10, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
---> 3-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=70, x=10, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=71, x=9, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=44, x=10, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=44, x=10, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
---> 4-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=44, x=10, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=43, x=9, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=46, x=3, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=46, x=3, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
---> 5-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=46, x=3, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=45, x=4, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=46, x=4, store=836.0) --------
--> 6-Wolf has > 500 store (y=46, x=4, store=836.0) and Random >= 0.5. so will try to find CW to move closer or breed/fight if within AD(5).
-> No CW found. although store >500 and p>=0.5!
--->else2 begins: 6-Wolf (y=46, x=4, store=836.0) before normal moving.
--->else2 begins: 6-Wolf (y=47, x=3, store=836.0) after normal moving.
.... el2 _______  6-Wolf moved normally _______ 
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 141 ************

-> ------------ 0-Sheep initialised with (y=88, x=72, store=545.3125) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=88, x=72, store=545.3125). Will move normally and eat
-->0-Sheep (y=88, x=72, store=545.3125) before normal moving and eating
-->0-Sheep (y=89, x=71, store=555.3125) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=74, x=114, store=495.8171081542969) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=74, x=114, store=495.8171081542969). Will move normally and eat
-->1-Sheep (y=74, x=114, store=495.8171081542969) before normal moving and eating
-->1-Sheep (y=73, x=115, store=505.8171081542969) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=90, x=81, store=555.3125) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=90, x=81, store=555.3125). Will move normally and eat
-->2-Sheep (y=90, x=81, store=555.3125) before normal moving and eating
-->2-Sheep (y=89, x=82, store=565.3125) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=78, x=110, store=571.2794494628906) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=78, x=110, store=571.2794494628906). Will move normally and eat
-->3-Sheep (y=78, x=110, store=571.2794494628906) before normal moving and eating
-->3-Sheep (y=77, x=109, store=581.2794494628906) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=76, x=113, store=505.8171081542969) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=76, x=113, store=505.8171081542969). Will move normally and eat
-->4-Sheep (y=76, x=113, store=505.8171081542969) before normal moving and eating
-->4-Sheep (y=77, x=112, store=515.8171081542969) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=93, x=83, store=554.5703125) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=93, x=83, store=554.5703125). Will move normally and eat
-->5-Sheep (y=93, x=83, store=554.5703125) before normal moving and eating
-->5-Sheep (y=92, x=84, store=564.5703125) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=95, x=91, store=456.953125) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=95, x=91, store=456.953125). Will move normally and eat
-->6-Sheep (y=95, x=91, store=456.953125) before normal moving and eating
-->6-Sheep (y=96, x=92, store=466.953125) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=80, x=119, store=581.2794494628906) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=80, x=119, store=581.2794494628906). Will move normally and eat
-->7-Sheep (y=80, x=119, store=581.2794494628906) before normal moving and eating
-->7-Sheep (y=79, x=118, store=591.2794494628906) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________


-> ------------ 8-Sheep initialised with (y=92, x=90, store=564.5703125) -----------
--> 8-Sheep looping with 0-Wolf.
--> 8-Sheep looping with 1-Wolf.
--> 8-Sheep looping with 2-Wolf.
--> 8-Sheep looping with 3-Wolf.
--> 8-Sheep looping with 4-Wolf.
--> 8-Sheep looping with 5-Wolf.
--> 8-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->8-Sheep has Store < Min_ernergy(600) (y=92, x=90, store=564.5703125). Will move normally and eat
-->8-Sheep (y=92, x=90, store=564.5703125) before normal moving and eating
-->8-Sheep (y=93, x=89, store=574.5703125) after normal moving and eating
___e2________ 8-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=240, x=41, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=240, x=41, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
---> 0-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=240, x=41, store=100) before normal moving
-->else1 ends: 0-Wolf (y=241, x=42, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=113, x=272, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=113, x=272, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
---> 1-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=113, x=272, store=300) before normal moving
-->else1 ends: 1-Wolf (y=114, x=271, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=219, x=113, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=219, x=113, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
---> 2-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=219, x=113, store=200) before normal moving
-->else1 ends: 2-Wolf (y=218, x=112, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=71, x=9, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=71, x=9, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
---> 3-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=71, x=9, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=72, x=10, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=43, x=9, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=43, x=9, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
---> 4-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=43, x=9, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=42, x=10, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=45, x=4, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=45, x=4, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
---> 5-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=45, x=4, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=46, x=5, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=47, x=3, store=836.0) --------
--> 6-Wolf has >Min_energy(500) store (y=47, x=3, store=836.0) and 0.25 <= random.random() < 0.5. Tries to find food (sheep).
---> 6-Wolf looping with 0-Sheep
---> 6-Wolf looping with 1-Sheep
---> 6-Wolf looping with 2-Sheep
---> 6-Wolf looping with 3-Sheep
---> 6-Wolf looping with 4-Sheep
---> 6-Wolf looping with 5-Sheep
---> 6-Wolf looping with 6-Sheep
---> 6-Wolf looping with 7-Sheep
---> 6-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 6-Wolf (y=47, x=3, store=836.0) before normal moving
-->else1 ends: 6-Wolf (y=48, x=4, store=836.0) after normal moving
....el1___________ 6-Wolf moved normally___________
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 142 ************

-> ------------ 0-Sheep initialised with (y=89, x=71, store=555.3125) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=89, x=71, store=555.3125). Will move normally and eat
-->0-Sheep (y=89, x=71, store=555.3125) before normal moving and eating
-->0-Sheep (y=88, x=70, store=565.3125) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=73, x=115, store=505.8171081542969) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=73, x=115, store=505.8171081542969). Will move normally and eat
-->1-Sheep (y=73, x=115, store=505.8171081542969) before normal moving and eating
-->1-Sheep (y=72, x=114, store=515.8171081542969) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=89, x=82, store=565.3125) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=89, x=82, store=565.3125). Will move normally and eat
-->2-Sheep (y=89, x=82, store=565.3125) before normal moving and eating
-->2-Sheep (y=88, x=83, store=575.3125) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=77, x=109, store=581.2794494628906) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=77, x=109, store=581.2794494628906). Will move normally and eat
-->3-Sheep (y=77, x=109, store=581.2794494628906) before normal moving and eating
-->3-Sheep (y=78, x=110, store=591.2794494628906) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=77, x=112, store=515.8171081542969) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=77, x=112, store=515.8171081542969). Will move normally and eat
-->4-Sheep (y=77, x=112, store=515.8171081542969) before normal moving and eating
-->4-Sheep (y=76, x=113, store=525.8171081542969) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=92, x=84, store=564.5703125) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=92, x=84, store=564.5703125). Will move normally and eat
-->5-Sheep (y=92, x=84, store=564.5703125) before normal moving and eating
-->5-Sheep (y=91, x=85, store=574.5703125) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=96, x=92, store=466.953125) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=96, x=92, store=466.953125). Will move normally and eat
-->6-Sheep (y=96, x=92, store=466.953125) before normal moving and eating
-->6-Sheep (y=97, x=91, store=476.953125) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=79, x=118, store=591.2794494628906) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=79, x=118, store=591.2794494628906). Will move normally and eat
-->7-Sheep (y=79, x=118, store=591.2794494628906) before normal moving and eating
-->7-Sheep (y=78, x=117, store=601.2794494628906) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________


-> ------------ 8-Sheep initialised with (y=93, x=89, store=574.5703125) -----------
--> 8-Sheep looping with 0-Wolf.
--> 8-Sheep looping with 1-Wolf.
--> 8-Sheep looping with 2-Wolf.
--> 8-Sheep looping with 3-Wolf.
--> 8-Sheep looping with 4-Wolf.
--> 8-Sheep looping with 5-Wolf.
--> 8-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->8-Sheep has Store < Min_ernergy(600) (y=93, x=89, store=574.5703125). Will move normally and eat
-->8-Sheep (y=93, x=89, store=574.5703125) before normal moving and eating
-->8-Sheep (y=92, x=90, store=584.5703125) after normal moving and eating
___e2________ 8-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=241, x=42, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=241, x=42, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
---> 0-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=241, x=42, store=100) before normal moving
-->else1 ends: 0-Wolf (y=240, x=41, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=114, x=271, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=114, x=271, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
---> 1-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=114, x=271, store=300) before normal moving
-->else1 ends: 1-Wolf (y=113, x=272, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=218, x=112, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=218, x=112, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
---> 2-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=218, x=112, store=200) before normal moving
-->else1 ends: 2-Wolf (y=219, x=113, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=72, x=10, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=72, x=10, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
---> 3-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=72, x=10, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=73, x=9, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=42, x=10, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=42, x=10, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
---> 4-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=42, x=10, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=41, x=11, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=46, x=5, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=46, x=5, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
---> 5-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=46, x=5, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=45, x=4, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=48, x=4, store=836.0) --------
--> 6-Wolf has > 500 store (y=48, x=4, store=836.0) and Random >= 0.5. so will try to find CW to move closer or breed/fight if within AD(5).
-> No CW found. although store >500 and p>=0.5!
--->else2 begins: 6-Wolf (y=48, x=4, store=836.0) before normal moving.
--->else2 begins: 6-Wolf (y=49, x=5, store=836.0) after normal moving.
.... el2 _______  6-Wolf moved normally _______ 
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 143 ************

-> ------------ 0-Sheep initialised with (y=88, x=70, store=565.3125) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=88, x=70, store=565.3125). Will move normally and eat
-->0-Sheep (y=88, x=70, store=565.3125) before normal moving and eating
-->0-Sheep (y=87, x=71, store=575.3125) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=72, x=114, store=515.8171081542969) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=72, x=114, store=515.8171081542969). Will move normally and eat
-->1-Sheep (y=72, x=114, store=515.8171081542969) before normal moving and eating
-->1-Sheep (y=73, x=113, store=525.8171081542969) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=88, x=83, store=575.3125) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=88, x=83, store=575.3125). Will move normally and eat
-->2-Sheep (y=88, x=83, store=575.3125) before normal moving and eating
-->2-Sheep (y=87, x=84, store=585.3125) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=78, x=110, store=591.2794494628906) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=78, x=110, store=591.2794494628906). Will move normally and eat
-->3-Sheep (y=78, x=110, store=591.2794494628906) before normal moving and eating
-->3-Sheep (y=77, x=111, store=601.2794494628906) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=76, x=113, store=525.8171081542969) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=76, x=113, store=525.8171081542969). Will move normally and eat
-->4-Sheep (y=76, x=113, store=525.8171081542969) before normal moving and eating
-->4-Sheep (y=75, x=114, store=535.8171081542969) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=91, x=85, store=574.5703125) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=91, x=85, store=574.5703125). Will move normally and eat
-->5-Sheep (y=91, x=85, store=574.5703125) before normal moving and eating
-->5-Sheep (y=92, x=86, store=584.5703125) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=97, x=91, store=476.953125) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=97, x=91, store=476.953125). Will move normally and eat
-->6-Sheep (y=97, x=91, store=476.953125) before normal moving and eating
-->6-Sheep (y=98, x=92, store=486.953125) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=78, x=117, store=601.2794494628906) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store > Min_ernergy(600) (y=78, x=117, store=601.2794494628906).
--> 7-Sheep looping with 0-Sheep.
-> NO CS Found.
-> 7-Sheep (y=78, x=117, store=601.2794494628906) before normally moving and eating.
-> 7-Sheep (y=77, x=116, store=611.2794494628906) after normally moving and eating.
___e1________ 7-Sheep moved normally and ate ___________


-> ------------ 8-Sheep initialised with (y=92, x=90, store=584.5703125) -----------
--> 8-Sheep looping with 0-Wolf.
--> 8-Sheep looping with 1-Wolf.
--> 8-Sheep looping with 2-Wolf.
--> 8-Sheep looping with 3-Wolf.
--> 8-Sheep looping with 4-Wolf.
--> 8-Sheep looping with 5-Wolf.
--> 8-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->8-Sheep has Store < Min_ernergy(600) (y=92, x=90, store=584.5703125). Will move normally and eat
-->8-Sheep (y=92, x=90, store=584.5703125) before normal moving and eating
-->8-Sheep (y=93, x=89, store=594.5703125) after normal moving and eating
___e2________ 8-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=240, x=41, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=240, x=41, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
---> 0-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=240, x=41, store=100) before normal moving
-->else1 ends: 0-Wolf (y=241, x=40, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=113, x=272, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=113, x=272, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
---> 1-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=113, x=272, store=300) before normal moving
-->else1 ends: 1-Wolf (y=112, x=271, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=219, x=113, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=219, x=113, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
---> 2-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=219, x=113, store=200) before normal moving
-->else1 ends: 2-Wolf (y=218, x=112, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=73, x=9, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=73, x=9, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
---> 3-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=73, x=9, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=72, x=8, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=41, x=11, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=41, x=11, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
---> 4-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=41, x=11, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=42, x=12, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=45, x=4, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=45, x=4, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
---> 5-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=45, x=4, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=46, x=5, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=49, x=5, store=836.0) --------
--> 6-Wolf has > 500 store (y=49, x=5, store=836.0) and Random >= 0.5. so will try to find CW to move closer or breed/fight if within AD(5).
-> No CW found. although store >500 and p>=0.5!
--->else2 begins: 6-Wolf (y=49, x=5, store=836.0) before normal moving.
--->else2 begins: 6-Wolf (y=50, x=6, store=836.0) after normal moving.
.... el2 _______  6-Wolf moved normally _______ 
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 144 ************

-> ------------ 0-Sheep initialised with (y=87, x=71, store=575.3125) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=87, x=71, store=575.3125). Will move normally and eat
-->0-Sheep (y=87, x=71, store=575.3125) before normal moving and eating
-->0-Sheep (y=88, x=72, store=585.3125) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=73, x=113, store=525.8171081542969) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=73, x=113, store=525.8171081542969). Will move normally and eat
-->1-Sheep (y=73, x=113, store=525.8171081542969) before normal moving and eating
-->1-Sheep (y=74, x=112, store=535.8171081542969) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=87, x=84, store=585.3125) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=87, x=84, store=585.3125). Will move normally and eat
-->2-Sheep (y=87, x=84, store=585.3125) before normal moving and eating
-->2-Sheep (y=86, x=83, store=595.3125) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=77, x=111, store=601.2794494628906) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store > Min_ernergy(600) (y=77, x=111, store=601.2794494628906).
--> 3-Sheep looping with 0-Sheep.
----> D <=AD. Sheep Breeding/Sharing proximity of 3.605551275463989(<=5) entered by CS 3-Sheep (y=77, x=111, store=601.2794494628906) with CS 0-Sheep (y=75, x=114, store=535.8171081542969).
-----> 3-Sheep (y=77, x=111, store=601.2794494628906) and CS 0-Sheep (y=75, x=114, store=535.8171081542969 will not mate as CS 0-Sheep store <600. They will share resource to become average.
-----> Shared resources = True
-----> 3-Sheep (y=77, x=111, store=568.5482788085938) and CS 0-Sheep (y=75, x=114, store=568.5482788085938) after sharing resources!
_____________ 3-Sheep and CS 0-Sheep shared resources ____________
_______ Breeding=False, Failed breeding=False, Share=True for 3-Sheep __________

-> ------------ 4-Sheep initialised with (y=75, x=114, store=568.5482788085938) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=75, x=114, store=568.5482788085938). Will move normally and eat
-->4-Sheep (y=75, x=114, store=568.5482788085938) before normal moving and eating
-->4-Sheep (y=74, x=113, store=578.5482788085938) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=92, x=86, store=584.5703125) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=92, x=86, store=584.5703125). Will move normally and eat
-->5-Sheep (y=92, x=86, store=584.5703125) before normal moving and eating
-->5-Sheep (y=91, x=85, store=594.5703125) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=98, x=92, store=486.953125) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=98, x=92, store=486.953125). Will move normally and eat
-->6-Sheep (y=98, x=92, store=486.953125) before normal moving and eating
-->6-Sheep (y=97, x=93, store=496.953125) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=77, x=116, store=611.2794494628906) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store > Min_ernergy(600) (y=77, x=116, store=611.2794494628906).
--> 7-Sheep looping with 0-Sheep.
-> NO CS Found.
-> 7-Sheep (y=77, x=116, store=611.2794494628906) before normally moving and eating.
-> 7-Sheep (y=76, x=115, store=621.2794494628906) after normally moving and eating.
___e1________ 7-Sheep moved normally and ate ___________


-> ------------ 8-Sheep initialised with (y=93, x=89, store=594.5703125) -----------
--> 8-Sheep looping with 0-Wolf.
--> 8-Sheep looping with 1-Wolf.
--> 8-Sheep looping with 2-Wolf.
--> 8-Sheep looping with 3-Wolf.
--> 8-Sheep looping with 4-Wolf.
--> 8-Sheep looping with 5-Wolf.
--> 8-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->8-Sheep has Store < Min_ernergy(600) (y=93, x=89, store=594.5703125). Will move normally and eat
-->8-Sheep (y=93, x=89, store=594.5703125) before normal moving and eating
-->8-Sheep (y=94, x=88, store=604.5703125) after normal moving and eating
___e2________ 8-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=241, x=40, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=241, x=40, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
---> 0-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=241, x=40, store=100) before normal moving
-->else1 ends: 0-Wolf (y=242, x=41, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=112, x=271, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=112, x=271, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
---> 1-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=112, x=271, store=300) before normal moving
-->else1 ends: 1-Wolf (y=111, x=272, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=218, x=112, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=218, x=112, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
---> 2-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=218, x=112, store=200) before normal moving
-->else1 ends: 2-Wolf (y=219, x=113, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=72, x=8, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=72, x=8, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
---> 3-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=72, x=8, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=73, x=7, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=42, x=12, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=42, x=12, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
---> 4-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=42, x=12, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=41, x=11, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=46, x=5, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=46, x=5, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
---> 5-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=46, x=5, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=47, x=4, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=50, x=6, store=836.0) --------
--> 6-Wolf has > 500 store (y=50, x=6, store=836.0) and Random >= 0.5. so will try to find CW to move closer or breed/fight if within AD(5).
-> No CW found. although store >500 and p>=0.5!
--->else2 begins: 6-Wolf (y=50, x=6, store=836.0) before normal moving.
--->else2 begins: 6-Wolf (y=51, x=7, store=836.0) after normal moving.
.... el2 _______  6-Wolf moved normally _______ 
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 145 ************

-> ------------ 0-Sheep initialised with (y=88, x=72, store=585.3125) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=88, x=72, store=585.3125). Will move normally and eat
-->0-Sheep (y=88, x=72, store=585.3125) before normal moving and eating
-->0-Sheep (y=87, x=73, store=595.3125) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=74, x=112, store=535.8171081542969) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=74, x=112, store=535.8171081542969). Will move normally and eat
-->1-Sheep (y=74, x=112, store=535.8171081542969) before normal moving and eating
-->1-Sheep (y=75, x=113, store=545.8171081542969) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=86, x=83, store=595.3125) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=86, x=83, store=595.3125). Will move normally and eat
-->2-Sheep (y=86, x=83, store=595.3125) before normal moving and eating
-->2-Sheep (y=85, x=82, store=605.3125) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=77, x=111, store=568.5482788085938) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=77, x=111, store=568.5482788085938). Will move normally and eat
-->3-Sheep (y=77, x=111, store=568.5482788085938) before normal moving and eating
-->3-Sheep (y=78, x=112, store=578.5482788085938) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=74, x=113, store=578.5482788085938) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=74, x=113, store=578.5482788085938). Will move normally and eat
-->4-Sheep (y=74, x=113, store=578.5482788085938) before normal moving and eating
-->4-Sheep (y=75, x=112, store=588.5482788085938) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=91, x=85, store=594.5703125) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=91, x=85, store=594.5703125). Will move normally and eat
-->5-Sheep (y=91, x=85, store=594.5703125) before normal moving and eating
-->5-Sheep (y=90, x=86, store=604.5703125) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=97, x=93, store=496.953125) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=97, x=93, store=496.953125). Will move normally and eat
-->6-Sheep (y=97, x=93, store=496.953125) before normal moving and eating
-->6-Sheep (y=96, x=92, store=506.953125) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=76, x=115, store=621.2794494628906) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store > Min_ernergy(600) (y=76, x=115, store=621.2794494628906).
--> 7-Sheep looping with 0-Sheep.
-> NO CS Found.
-> 7-Sheep (y=76, x=115, store=621.2794494628906) before normally moving and eating.
-> 7-Sheep (y=77, x=116, store=631.2794494628906) after normally moving and eating.
___e1________ 7-Sheep moved normally and ate ___________


-> ------------ 8-Sheep initialised with (y=94, x=88, store=604.5703125) -----------
--> 8-Sheep looping with 0-Wolf.
--> 8-Sheep looping with 1-Wolf.
--> 8-Sheep looping with 2-Wolf.
--> 8-Sheep looping with 3-Wolf.
--> 8-Sheep looping with 4-Wolf.
--> 8-Sheep looping with 5-Wolf.
--> 8-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->8-Sheep has Store > Min_ernergy(600) (y=94, x=88, store=604.5703125).
-> NO CS Found.
-> 8-Sheep (y=94, x=88, store=604.5703125) before normally moving and eating.
-> 8-Sheep (y=93, x=89, store=614.5703125) after normally moving and eating.
___e1________ 8-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=242, x=41, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=242, x=41, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
---> 0-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=242, x=41, store=100) before normal moving
-->else1 ends: 0-Wolf (y=243, x=42, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=111, x=272, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=111, x=272, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
---> 1-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=111, x=272, store=300) before normal moving
-->else1 ends: 1-Wolf (y=112, x=273, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=219, x=113, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=219, x=113, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
---> 2-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=219, x=113, store=200) before normal moving
-->else1 ends: 2-Wolf (y=218, x=114, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=73, x=7, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=73, x=7, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
---> 3-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=73, x=7, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=74, x=6, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=41, x=11, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=41, x=11, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
---> 4-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=41, x=11, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=42, x=12, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=47, x=4, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=47, x=4, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
---> 5-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=47, x=4, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=48, x=5, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=51, x=7, store=836.0) --------
--> 6-Wolf has > 500 store (y=51, x=7, store=836.0) and Random >= 0.5. so will try to find CW to move closer or breed/fight if within AD(5).
-> No CW found. although store >500 and p>=0.5!
--->else2 begins: 6-Wolf (y=51, x=7, store=836.0) before normal moving.
--->else2 begins: 6-Wolf (y=52, x=8, store=836.0) after normal moving.
.... el2 _______  6-Wolf moved normally _______ 
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 146 ************

-> ------------ 0-Sheep initialised with (y=87, x=73, store=595.3125) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=87, x=73, store=595.3125). Will move normally and eat
-->0-Sheep (y=87, x=73, store=595.3125) before normal moving and eating
-->0-Sheep (y=86, x=74, store=605.3125) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=75, x=113, store=545.8171081542969) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=75, x=113, store=545.8171081542969). Will move normally and eat
-->1-Sheep (y=75, x=113, store=545.8171081542969) before normal moving and eating
-->1-Sheep (y=74, x=114, store=555.8171081542969) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=85, x=82, store=605.3125) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store > Min_ernergy(600) (y=85, x=82, store=605.3125).
--> 2-Sheep looping with 0-Sheep.
--> 2-Sheep looping with 1-Sheep.
--> 2-Sheep looping with 2-Sheep.
----> ---- (AD < D < MD).
----> Min distance=6.4031242374328485 for 2-Sheep (y=85, x=82, store=605.3125) with 2-Sheep (y=90, x=86, store=604.5703125).
--> 2-Sheep looping with 3-Sheep.
--> 2-Sheep looping with 4-Sheep.
--> 2-Sheep looping with 5-Sheep.
->CS Found!
-> 2-Sheep (y=85, x=82, store=605.3125) before moving closer (while eating) to CS-Sheep: (y=90, x=86, store=604.5703125).
-> 2-Wolf (y=87, x=84, store=615.3125) after moving closer (while eating) to CS-Sheep: (y=90, x=86, store=604.5703125).
___________ 2-Sheep moved closer CS___________


-> ------------ 3-Sheep initialised with (y=78, x=112, store=578.5482788085938) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=78, x=112, store=578.5482788085938). Will move normally and eat
-->3-Sheep (y=78, x=112, store=578.5482788085938) before normal moving and eating
-->3-Sheep (y=77, x=111, store=588.5482788085938) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=75, x=112, store=588.5482788085938) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=75, x=112, store=588.5482788085938). Will move normally and eat
-->4-Sheep (y=75, x=112, store=588.5482788085938) before normal moving and eating
-->4-Sheep (y=76, x=111, store=598.5482788085938) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=90, x=86, store=604.5703125) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store > Min_ernergy(600) (y=90, x=86, store=604.5703125).
--> 5-Sheep looping with 0-Sheep.
----> ---- (AD < D < MD).
----> Min distance=8.48528137423857 for 5-Sheep (y=90, x=86, store=604.5703125) with 0-Sheep (y=96, x=92, store=506.953125).
--> 5-Sheep looping with 1-Sheep.
--> 5-Sheep looping with 2-Sheep.
----> D <=AD. Sheep Breeding/Sharing proximity of 4.242640687119285(<=5) entered by CS 5-Sheep (y=90, x=86, store=604.5703125) with CS 2-Sheep (y=93, x=89, store=614.5703125).
----->5-Sheep (y=90, x=86, store=604.5703125) and CS 2-Sheep (y=93, x=89, store=614.5703125 have > Min_energy (600) store. So they will try breeding if p>0.5
------>1.B Random <0.5. So the breeding will fail.
------> 5-Sheep (y=90, x=86, store=604.5703125) before failed breeding with CS 2-Sheep (y=93, x=89, store=614.5703125)
------> Failed Sheep Breeding = True
------> 5-Sheep (y=90, x=86, store=304.78515625) after failed breeding with CS 2-Sheep (y=93, x=89, store=304.78515625).
_____________ 5-Sheep Fail Mated with CS 2-Sheep ____________
_______ Breeding=False, Failed breeding=True, Share=False for 5-Sheep __________

-> ------------ 6-Sheep initialised with (y=96, x=92, store=506.953125) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=96, x=92, store=506.953125). Will move normally and eat
-->6-Sheep (y=96, x=92, store=506.953125) before normal moving and eating
-->6-Sheep (y=97, x=91, store=516.953125) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=77, x=116, store=631.2794494628906) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store > Min_ernergy(600) (y=77, x=116, store=631.2794494628906).
--> 7-Sheep looping with 0-Sheep.
-> NO CS Found.
-> 7-Sheep (y=77, x=116, store=631.2794494628906) before normally moving and eating.
-> 7-Sheep (y=76, x=117, store=641.2794494628906) after normally moving and eating.
___e1________ 7-Sheep moved normally and ate ___________


-> ------------ 8-Sheep initialised with (y=93, x=89, store=304.78515625) -----------
--> 8-Sheep looping with 0-Wolf.
--> 8-Sheep looping with 1-Wolf.
--> 8-Sheep looping with 2-Wolf.
--> 8-Sheep looping with 3-Wolf.
--> 8-Sheep looping with 4-Wolf.
--> 8-Sheep looping with 5-Wolf.
--> 8-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->8-Sheep has Store < Min_ernergy(600) (y=93, x=89, store=304.78515625). Will move normally and eat
-->8-Sheep (y=93, x=89, store=304.78515625) before normal moving and eating
-->8-Sheep (y=94, x=88, store=314.78515625) after normal moving and eating
___e2________ 8-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=243, x=42, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=243, x=42, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
---> 0-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=243, x=42, store=100) before normal moving
-->else1 ends: 0-Wolf (y=244, x=41, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=112, x=273, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=112, x=273, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
---> 1-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=112, x=273, store=300) before normal moving
-->else1 ends: 1-Wolf (y=113, x=274, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=218, x=114, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=218, x=114, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
---> 2-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=218, x=114, store=200) before normal moving
-->else1 ends: 2-Wolf (y=217, x=113, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=74, x=6, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=74, x=6, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
---> 3-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=74, x=6, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=73, x=5, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=42, x=12, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=42, x=12, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
---> 4-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=42, x=12, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=43, x=11, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=48, x=5, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=48, x=5, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
---> 5-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=48, x=5, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=47, x=4, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=52, x=8, store=836.0) --------
--> 6-Wolf has >Min_energy(500) store (y=52, x=8, store=836.0) and 0.25 <= random.random() < 0.5. Tries to find food (sheep).
---> 6-Wolf looping with 0-Sheep
---> 6-Wolf looping with 1-Sheep
---> 6-Wolf looping with 2-Sheep
---> 6-Wolf looping with 3-Sheep
---> 6-Wolf looping with 4-Sheep
---> 6-Wolf looping with 5-Sheep
---> 6-Wolf looping with 6-Sheep
---> 6-Wolf looping with 7-Sheep
---> 6-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 6-Wolf (y=52, x=8, store=836.0) before normal moving
-->else1 ends: 6-Wolf (y=51, x=7, store=836.0) after normal moving
....el1___________ 6-Wolf moved normally___________
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 147 ************

-> ------------ 0-Sheep initialised with (y=86, x=74, store=605.3125) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store > Min_ernergy(600) (y=86, x=74, store=605.3125).
--> 0-Sheep looping with 0-Sheep.
--> 0-Sheep looping with 1-Sheep.
----> ---- (AD < D < MD).
----> Min distance=10.04987562112089 for 0-Sheep (y=86, x=74, store=605.3125) with 1-Sheep (y=87, x=84, store=615.3125).
--> 0-Sheep looping with 2-Sheep.
--> 0-Sheep looping with 3-Sheep.
--> 0-Sheep looping with 4-Sheep.
--> 0-Sheep looping with 5-Sheep.
--> 0-Sheep looping with 6-Sheep.
--> 0-Sheep looping with 7-Sheep.
->CS Found!
-> 0-Sheep (y=86, x=74, store=605.3125) before moving closer (while eating) to CS-Sheep: (y=87, x=84, store=615.3125).
-> 0-Wolf (y=86, x=79, store=615.3125) after moving closer (while eating) to CS-Sheep: (y=87, x=84, store=615.3125).
___________ 0-Sheep moved closer CS___________


-> ------------ 1-Sheep initialised with (y=74, x=114, store=555.8171081542969) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=74, x=114, store=555.8171081542969). Will move normally and eat
-->1-Sheep (y=74, x=114, store=555.8171081542969) before normal moving and eating
-->1-Sheep (y=75, x=115, store=565.8171081542969) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=87, x=84, store=615.3125) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store > Min_ernergy(600) (y=87, x=84, store=615.3125).
--> 2-Sheep looping with 0-Sheep.
--> 2-Sheep looping with 1-Sheep.
--> 2-Sheep looping with 2-Sheep.
----> D <=AD. Sheep Breeding/Sharing proximity of 3.605551275463989(<=5) entered by CS 2-Sheep (y=87, x=84, store=615.3125) with CS 2-Sheep (y=90, x=86, store=304.78515625).
-----> 2-Sheep (y=87, x=84, store=615.3125) and CS 2-Sheep (y=90, x=86, store=304.78515625 will not mate as CS 2-Sheep store <600. They will share resource to become average.
-----> Shared resources = True
-----> 2-Sheep (y=87, x=84, store=460.048828125) and CS 2-Sheep (y=90, x=86, store=460.048828125) after sharing resources!
_____________ 2-Sheep and CS 2-Sheep shared resources ____________
_______ Breeding=False, Failed breeding=False, Share=True for 2-Sheep __________

-> ------------ 3-Sheep initialised with (y=77, x=111, store=588.5482788085938) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=77, x=111, store=588.5482788085938). Will move normally and eat
-->3-Sheep (y=77, x=111, store=588.5482788085938) before normal moving and eating
-->3-Sheep (y=78, x=112, store=598.5482788085938) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=76, x=111, store=598.5482788085938) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=76, x=111, store=598.5482788085938). Will move normally and eat
-->4-Sheep (y=76, x=111, store=598.5482788085938) before normal moving and eating
-->4-Sheep (y=75, x=110, store=608.5482788085938) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=90, x=86, store=460.048828125) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=90, x=86, store=460.048828125). Will move normally and eat
-->5-Sheep (y=90, x=86, store=460.048828125) before normal moving and eating
-->5-Sheep (y=89, x=85, store=470.048828125) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=97, x=91, store=516.953125) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=97, x=91, store=516.953125). Will move normally and eat
-->6-Sheep (y=97, x=91, store=516.953125) before normal moving and eating
-->6-Sheep (y=98, x=92, store=526.953125) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=76, x=117, store=641.2794494628906) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store > Min_ernergy(600) (y=76, x=117, store=641.2794494628906).
--> 7-Sheep looping with 0-Sheep.
-> NO CS Found.
-> 7-Sheep (y=76, x=117, store=641.2794494628906) before normally moving and eating.
-> 7-Sheep (y=75, x=118, store=651.2794494628906) after normally moving and eating.
___e1________ 7-Sheep moved normally and ate ___________


-> ------------ 8-Sheep initialised with (y=94, x=88, store=314.78515625) -----------
--> 8-Sheep looping with 0-Wolf.
--> 8-Sheep looping with 1-Wolf.
--> 8-Sheep looping with 2-Wolf.
--> 8-Sheep looping with 3-Wolf.
--> 8-Sheep looping with 4-Wolf.
--> 8-Sheep looping with 5-Wolf.
--> 8-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->8-Sheep has Store < Min_ernergy(600) (y=94, x=88, store=314.78515625). Will move normally and eat
-->8-Sheep (y=94, x=88, store=314.78515625) before normal moving and eating
-->8-Sheep (y=93, x=87, store=324.78515625) after normal moving and eating
___e2________ 8-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=244, x=41, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=244, x=41, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
---> 0-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=244, x=41, store=100) before normal moving
-->else1 ends: 0-Wolf (y=245, x=40, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=113, x=274, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=113, x=274, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
---> 1-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=113, x=274, store=300) before normal moving
-->else1 ends: 1-Wolf (y=112, x=275, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=217, x=113, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=217, x=113, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
---> 2-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=217, x=113, store=200) before normal moving
-->else1 ends: 2-Wolf (y=218, x=112, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=73, x=5, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=73, x=5, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
---> 3-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=73, x=5, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=74, x=4, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=43, x=11, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=43, x=11, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
---> 4-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=43, x=11, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=44, x=12, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=47, x=4, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=47, x=4, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
---> 5-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=47, x=4, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=46, x=5, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=51, x=7, store=836.0) --------
--> 6-Wolf has > 500 store (y=51, x=7, store=836.0) and Random >= 0.5. so will try to find CW to move closer or breed/fight if within AD(5).
-> No CW found. although store >500 and p>=0.5!
--->else2 begins: 6-Wolf (y=51, x=7, store=836.0) before normal moving.
--->else2 begins: 6-Wolf (y=52, x=8, store=836.0) after normal moving.
.... el2 _______  6-Wolf moved normally _______ 
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 148 ************

-> ------------ 0-Sheep initialised with (y=86, x=79, store=615.3125) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store > Min_ernergy(600) (y=86, x=79, store=615.3125).
--> 0-Sheep looping with 0-Sheep.
--> 0-Sheep looping with 1-Sheep.
----> ---- (AD < D < MD).
----> Min distance=5.0990195135927845 for 0-Sheep (y=86, x=79, store=615.3125) with 1-Sheep (y=87, x=84, store=460.048828125).
--> 0-Sheep looping with 2-Sheep.
--> 0-Sheep looping with 3-Sheep.
--> 0-Sheep looping with 4-Sheep.
--> 0-Sheep looping with 5-Sheep.
--> 0-Sheep looping with 6-Sheep.
--> 0-Sheep looping with 7-Sheep.
->CS Found!
-> 0-Sheep (y=86, x=79, store=615.3125) before moving closer (while eating) to CS-Sheep: (y=87, x=84, store=460.048828125).
-> 0-Wolf (y=86, x=81, store=625.3125) after moving closer (while eating) to CS-Sheep: (y=87, x=84, store=460.048828125).
___________ 0-Sheep moved closer CS___________


-> ------------ 1-Sheep initialised with (y=75, x=115, store=565.8171081542969) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=75, x=115, store=565.8171081542969). Will move normally and eat
-->1-Sheep (y=75, x=115, store=565.8171081542969) before normal moving and eating
-->1-Sheep (y=74, x=114, store=575.8171081542969) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=87, x=84, store=460.048828125) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=87, x=84, store=460.048828125). Will move normally and eat
-->2-Sheep (y=87, x=84, store=460.048828125) before normal moving and eating
-->2-Sheep (y=88, x=83, store=470.048828125) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=78, x=112, store=598.5482788085938) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=78, x=112, store=598.5482788085938). Will move normally and eat
-->3-Sheep (y=78, x=112, store=598.5482788085938) before normal moving and eating
-->3-Sheep (y=79, x=111, store=608.5482788085938) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=75, x=110, store=608.5482788085938) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store > Min_ernergy(600) (y=75, x=110, store=608.5482788085938).
--> 4-Sheep looping with 0-Sheep.
--> 4-Sheep looping with 1-Sheep.
--> 4-Sheep looping with 2-Sheep.
----> ---- (AD < D < MD).
----> Min distance=8.0 for 4-Sheep (y=75, x=110, store=608.5482788085938) with 2-Sheep (y=75, x=118, store=651.2794494628906).
--> 4-Sheep looping with 3-Sheep.
->CS Found!
-> 4-Sheep (y=75, x=110, store=608.5482788085938) before moving closer (while eating) to CS-Sheep: (y=75, x=118, store=651.2794494628906).
-> 4-Wolf (y=75, x=114, store=618.5482788085938) after moving closer (while eating) to CS-Sheep: (y=75, x=118, store=651.2794494628906).
___________ 4-Sheep moved closer CS___________


-> ------------ 5-Sheep initialised with (y=89, x=85, store=470.048828125) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=89, x=85, store=470.048828125). Will move normally and eat
-->5-Sheep (y=89, x=85, store=470.048828125) before normal moving and eating
-->5-Sheep (y=90, x=84, store=480.048828125) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=98, x=92, store=526.953125) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=98, x=92, store=526.953125). Will move normally and eat
-->6-Sheep (y=98, x=92, store=526.953125) before normal moving and eating
-->6-Sheep (y=97, x=93, store=536.953125) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=75, x=118, store=651.2794494628906) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store > Min_ernergy(600) (y=75, x=118, store=651.2794494628906).
--> 7-Sheep looping with 0-Sheep.
-> NO CS Found.
-> 7-Sheep (y=75, x=118, store=651.2794494628906) before normally moving and eating.
-> 7-Sheep (y=76, x=117, store=661.2794494628906) after normally moving and eating.
___e1________ 7-Sheep moved normally and ate ___________


-> ------------ 8-Sheep initialised with (y=93, x=87, store=324.78515625) -----------
--> 8-Sheep looping with 0-Wolf.
--> 8-Sheep looping with 1-Wolf.
--> 8-Sheep looping with 2-Wolf.
--> 8-Sheep looping with 3-Wolf.
--> 8-Sheep looping with 4-Wolf.
--> 8-Sheep looping with 5-Wolf.
--> 8-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->8-Sheep has Store < Min_ernergy(600) (y=93, x=87, store=324.78515625). Will move normally and eat
-->8-Sheep (y=93, x=87, store=324.78515625) before normal moving and eating
-->8-Sheep (y=94, x=86, store=334.78515625) after normal moving and eating
___e2________ 8-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=245, x=40, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=245, x=40, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
---> 0-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=245, x=40, store=100) before normal moving
-->else1 ends: 0-Wolf (y=246, x=41, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=112, x=275, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=112, x=275, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
---> 1-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=112, x=275, store=300) before normal moving
-->else1 ends: 1-Wolf (y=113, x=276, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=218, x=112, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=218, x=112, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
---> 2-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=218, x=112, store=200) before normal moving
-->else1 ends: 2-Wolf (y=219, x=113, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=74, x=4, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=74, x=4, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
---> 3-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=74, x=4, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=73, x=3, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=44, x=12, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=44, x=12, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
---> 4-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=44, x=12, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=45, x=11, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=46, x=5, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=46, x=5, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
---> 5-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=46, x=5, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=47, x=6, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=52, x=8, store=836.0) --------
--> 6-Wolf has >Min_energy(500) store (y=52, x=8, store=836.0) and 0.25 <= random.random() < 0.5. Tries to find food (sheep).
---> 6-Wolf looping with 0-Sheep
---> 6-Wolf looping with 1-Sheep
---> 6-Wolf looping with 2-Sheep
---> 6-Wolf looping with 3-Sheep
---> 6-Wolf looping with 4-Sheep
---> 6-Wolf looping with 5-Sheep
---> 6-Wolf looping with 6-Sheep
---> 6-Wolf looping with 7-Sheep
---> 6-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 6-Wolf (y=52, x=8, store=836.0) before normal moving
-->else1 ends: 6-Wolf (y=51, x=9, store=836.0) after normal moving
....el1___________ 6-Wolf moved normally___________
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 149 ************

-> ------------ 0-Sheep initialised with (y=86, x=81, store=625.3125) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store > Min_ernergy(600) (y=86, x=81, store=625.3125).
--> 0-Sheep looping with 0-Sheep.
--> 0-Sheep looping with 1-Sheep.
----> D <=AD. Sheep Breeding/Sharing proximity of 2.8284271247461903(<=5) entered by CS 0-Sheep (y=86, x=81, store=625.3125) with CS 1-Sheep (y=88, x=83, store=470.048828125).
-----> 0-Sheep (y=86, x=81, store=625.3125) and CS 1-Sheep (y=88, x=83, store=470.048828125 will not mate as CS 1-Sheep store <600. They will share resource to become average.
-----> Shared resources = True
-----> 0-Sheep (y=86, x=81, store=547.6806640625) and CS 1-Sheep (y=88, x=83, store=547.6806640625) after sharing resources!
_____________ 0-Sheep and CS 1-Sheep shared resources ____________
_______ Breeding=False, Failed breeding=False, Share=True for 0-Sheep __________

-> ------------ 1-Sheep initialised with (y=74, x=114, store=575.8171081542969) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=74, x=114, store=575.8171081542969). Will move normally and eat
-->1-Sheep (y=74, x=114, store=575.8171081542969) before normal moving and eating
-->1-Sheep (y=73, x=115, store=585.8171081542969) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=88, x=83, store=547.6806640625) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=88, x=83, store=547.6806640625). Will move normally and eat
-->2-Sheep (y=88, x=83, store=547.6806640625) before normal moving and eating
-->2-Sheep (y=87, x=82, store=557.6806640625) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=79, x=111, store=608.5482788085938) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store > Min_ernergy(600) (y=79, x=111, store=608.5482788085938).
--> 3-Sheep looping with 0-Sheep.
----> D <=AD. Sheep Breeding/Sharing proximity of 5.0(<=5) entered by CS 3-Sheep (y=79, x=111, store=608.5482788085938) with CS 0-Sheep (y=75, x=114, store=618.5482788085938).
----->3-Sheep (y=79, x=111, store=608.5482788085938) and CS 0-Sheep (y=75, x=114, store=618.5482788085938 have > Min_energy (600) store. So they will try breeding if p>0.5
------>1.B Random <0.5. So the breeding will fail.
------> 3-Sheep (y=79, x=111, store=608.5482788085938) before failed breeding with CS 0-Sheep (y=75, x=114, store=618.5482788085938)
------> Failed Sheep Breeding = True
------> 3-Sheep (y=79, x=111, store=306.7741394042969) after failed breeding with CS 0-Sheep (y=75, x=114, store=306.7741394042969).
_____________ 3-Sheep Fail Mated with CS 0-Sheep ____________
_______ Breeding=False, Failed breeding=True, Share=False for 3-Sheep __________

-> ------------ 4-Sheep initialised with (y=75, x=114, store=306.7741394042969) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=75, x=114, store=306.7741394042969). Will move normally and eat
-->4-Sheep (y=75, x=114, store=306.7741394042969) before normal moving and eating
-->4-Sheep (y=74, x=115, store=316.7741394042969) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=90, x=84, store=480.048828125) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=90, x=84, store=480.048828125). Will move normally and eat
-->5-Sheep (y=90, x=84, store=480.048828125) before normal moving and eating
-->5-Sheep (y=91, x=83, store=490.048828125) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=97, x=93, store=536.953125) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=97, x=93, store=536.953125). Will move normally and eat
-->6-Sheep (y=97, x=93, store=536.953125) before normal moving and eating
-->6-Sheep (y=98, x=94, store=546.953125) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=76, x=117, store=661.2794494628906) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store > Min_ernergy(600) (y=76, x=117, store=661.2794494628906).
--> 7-Sheep looping with 0-Sheep.
-> NO CS Found.
-> 7-Sheep (y=76, x=117, store=661.2794494628906) before normally moving and eating.
-> 7-Sheep (y=77, x=116, store=671.2794494628906) after normally moving and eating.
___e1________ 7-Sheep moved normally and ate ___________


-> ------------ 8-Sheep initialised with (y=94, x=86, store=334.78515625) -----------
--> 8-Sheep looping with 0-Wolf.
--> 8-Sheep looping with 1-Wolf.
--> 8-Sheep looping with 2-Wolf.
--> 8-Sheep looping with 3-Wolf.
--> 8-Sheep looping with 4-Wolf.
--> 8-Sheep looping with 5-Wolf.
--> 8-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->8-Sheep has Store < Min_ernergy(600) (y=94, x=86, store=334.78515625). Will move normally and eat
-->8-Sheep (y=94, x=86, store=334.78515625) before normal moving and eating
-->8-Sheep (y=95, x=85, store=344.78515625) after normal moving and eating
___e2________ 8-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=246, x=41, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=246, x=41, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
---> 0-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=246, x=41, store=100) before normal moving
-->else1 ends: 0-Wolf (y=245, x=40, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=113, x=276, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=113, x=276, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
---> 1-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=113, x=276, store=300) before normal moving
-->else1 ends: 1-Wolf (y=112, x=275, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=219, x=113, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=219, x=113, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
---> 2-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=219, x=113, store=200) before normal moving
-->else1 ends: 2-Wolf (y=220, x=114, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=73, x=3, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=73, x=3, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
---> 3-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=73, x=3, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=72, x=2, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=45, x=11, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=45, x=11, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
---> 4-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=45, x=11, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=46, x=12, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=47, x=6, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=47, x=6, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
---> 5-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=47, x=6, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=46, x=7, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=51, x=9, store=836.0) --------
--> 6-Wolf has > 500 store (y=51, x=9, store=836.0) and Random >= 0.5. so will try to find CW to move closer or breed/fight if within AD(5).
-> No CW found. although store >500 and p>=0.5!
--->else2 begins: 6-Wolf (y=51, x=9, store=836.0) before normal moving.
--->else2 begins: 6-Wolf (y=52, x=10, store=836.0) after normal moving.
.... el2 _______  6-Wolf moved normally _______ 
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 150 ************

-> ------------ 0-Sheep initialised with (y=86, x=81, store=547.6806640625) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=86, x=81, store=547.6806640625). Will move normally and eat
-->0-Sheep (y=86, x=81, store=547.6806640625) before normal moving and eating
-->0-Sheep (y=85, x=80, store=557.6806640625) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=73, x=115, store=585.8171081542969) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=73, x=115, store=585.8171081542969). Will move normally and eat
-->1-Sheep (y=73, x=115, store=585.8171081542969) before normal moving and eating
-->1-Sheep (y=74, x=114, store=595.8171081542969) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=87, x=82, store=557.6806640625) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=87, x=82, store=557.6806640625). Will move normally and eat
-->2-Sheep (y=87, x=82, store=557.6806640625) before normal moving and eating
-->2-Sheep (y=86, x=81, store=567.6806640625) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=79, x=111, store=306.7741394042969) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=79, x=111, store=306.7741394042969). Will move normally and eat
-->3-Sheep (y=79, x=111, store=306.7741394042969) before normal moving and eating
-->3-Sheep (y=80, x=112, store=316.7741394042969) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=74, x=115, store=316.7741394042969) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=74, x=115, store=316.7741394042969). Will move normally and eat
-->4-Sheep (y=74, x=115, store=316.7741394042969) before normal moving and eating
-->4-Sheep (y=73, x=114, store=326.7741394042969) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=91, x=83, store=490.048828125) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=91, x=83, store=490.048828125). Will move normally and eat
-->5-Sheep (y=91, x=83, store=490.048828125) before normal moving and eating
-->5-Sheep (y=92, x=84, store=500.048828125) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=98, x=94, store=546.953125) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=98, x=94, store=546.953125). Will move normally and eat
-->6-Sheep (y=98, x=94, store=546.953125) before normal moving and eating
-->6-Sheep (y=97, x=93, store=556.953125) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=77, x=116, store=671.2794494628906) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store > Min_ernergy(600) (y=77, x=116, store=671.2794494628906).
--> 7-Sheep looping with 0-Sheep.
-> NO CS Found.
-> 7-Sheep (y=77, x=116, store=671.2794494628906) before normally moving and eating.
-> 7-Sheep (y=76, x=117, store=681.2794494628906) after normally moving and eating.
___e1________ 7-Sheep moved normally and ate ___________


-> ------------ 8-Sheep initialised with (y=95, x=85, store=344.78515625) -----------
--> 8-Sheep looping with 0-Wolf.
--> 8-Sheep looping with 1-Wolf.
--> 8-Sheep looping with 2-Wolf.
--> 8-Sheep looping with 3-Wolf.
--> 8-Sheep looping with 4-Wolf.
--> 8-Sheep looping with 5-Wolf.
--> 8-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->8-Sheep has Store < Min_ernergy(600) (y=95, x=85, store=344.78515625). Will move normally and eat
-->8-Sheep (y=95, x=85, store=344.78515625) before normal moving and eating
-->8-Sheep (y=96, x=84, store=354.78515625) after normal moving and eating
___e2________ 8-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=245, x=40, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=245, x=40, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
---> 0-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=245, x=40, store=100) before normal moving
-->else1 ends: 0-Wolf (y=246, x=39, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=112, x=275, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=112, x=275, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
---> 1-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=112, x=275, store=300) before normal moving
-->else1 ends: 1-Wolf (y=111, x=274, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=220, x=114, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=220, x=114, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
---> 2-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=220, x=114, store=200) before normal moving
-->else1 ends: 2-Wolf (y=219, x=115, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=72, x=2, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=72, x=2, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
---> 3-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=72, x=2, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=73, x=1, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=46, x=12, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=46, x=12, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
---> 4-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=46, x=12, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=45, x=13, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=46, x=7, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=46, x=7, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
---> 5-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=46, x=7, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=47, x=6, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=52, x=10, store=836.0) --------
--> 6-Wolf has >Min_energy(500) store (y=52, x=10, store=836.0) and 0.25 <= random.random() < 0.5. Tries to find food (sheep).
---> 6-Wolf looping with 0-Sheep
---> 6-Wolf looping with 1-Sheep
---> 6-Wolf looping with 2-Sheep
---> 6-Wolf looping with 3-Sheep
---> 6-Wolf looping with 4-Sheep
---> 6-Wolf looping with 5-Sheep
---> 6-Wolf looping with 6-Sheep
---> 6-Wolf looping with 7-Sheep
---> 6-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 6-Wolf (y=52, x=10, store=836.0) before normal moving
-->else1 ends: 6-Wolf (y=51, x=9, store=836.0) after normal moving
....el1___________ 6-Wolf moved normally___________
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 151 ************

-> ------------ 0-Sheep initialised with (y=85, x=80, store=557.6806640625) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=85, x=80, store=557.6806640625). Will move normally and eat
-->0-Sheep (y=85, x=80, store=557.6806640625) before normal moving and eating
-->0-Sheep (y=86, x=79, store=567.6806640625) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=74, x=114, store=595.8171081542969) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=74, x=114, store=595.8171081542969). Will move normally and eat
-->1-Sheep (y=74, x=114, store=595.8171081542969) before normal moving and eating
-->1-Sheep (y=73, x=115, store=605.8171081542969) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=86, x=81, store=567.6806640625) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=86, x=81, store=567.6806640625). Will move normally and eat
-->2-Sheep (y=86, x=81, store=567.6806640625) before normal moving and eating
-->2-Sheep (y=87, x=82, store=577.6806640625) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=80, x=112, store=316.7741394042969) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=80, x=112, store=316.7741394042969). Will move normally and eat
-->3-Sheep (y=80, x=112, store=316.7741394042969) before normal moving and eating
-->3-Sheep (y=81, x=113, store=326.7741394042969) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=73, x=114, store=326.7741394042969) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=73, x=114, store=326.7741394042969). Will move normally and eat
-->4-Sheep (y=73, x=114, store=326.7741394042969) before normal moving and eating
-->4-Sheep (y=72, x=115, store=336.7741394042969) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=92, x=84, store=500.048828125) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=92, x=84, store=500.048828125). Will move normally and eat
-->5-Sheep (y=92, x=84, store=500.048828125) before normal moving and eating
-->5-Sheep (y=93, x=85, store=510.048828125) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=97, x=93, store=556.953125) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=97, x=93, store=556.953125). Will move normally and eat
-->6-Sheep (y=97, x=93, store=556.953125) before normal moving and eating
-->6-Sheep (y=98, x=92, store=566.953125) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=76, x=117, store=681.2794494628906) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store > Min_ernergy(600) (y=76, x=117, store=681.2794494628906).
--> 7-Sheep looping with 0-Sheep.
-> NO CS Found.
-> 7-Sheep (y=76, x=117, store=681.2794494628906) before normally moving and eating.
-> 7-Sheep (y=77, x=116, store=691.2794494628906) after normally moving and eating.
___e1________ 7-Sheep moved normally and ate ___________


-> ------------ 8-Sheep initialised with (y=96, x=84, store=354.78515625) -----------
--> 8-Sheep looping with 0-Wolf.
--> 8-Sheep looping with 1-Wolf.
--> 8-Sheep looping with 2-Wolf.
--> 8-Sheep looping with 3-Wolf.
--> 8-Sheep looping with 4-Wolf.
--> 8-Sheep looping with 5-Wolf.
--> 8-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->8-Sheep has Store < Min_ernergy(600) (y=96, x=84, store=354.78515625). Will move normally and eat
-->8-Sheep (y=96, x=84, store=354.78515625) before normal moving and eating
-->8-Sheep (y=97, x=85, store=364.78515625) after normal moving and eating
___e2________ 8-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=246, x=39, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=246, x=39, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
---> 0-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=246, x=39, store=100) before normal moving
-->else1 ends: 0-Wolf (y=247, x=38, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=111, x=274, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=111, x=274, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
---> 1-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=111, x=274, store=300) before normal moving
-->else1 ends: 1-Wolf (y=110, x=273, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=219, x=115, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=219, x=115, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
---> 2-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=219, x=115, store=200) before normal moving
-->else1 ends: 2-Wolf (y=218, x=114, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=73, x=1, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=73, x=1, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
---> 3-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=73, x=1, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=74, x=2, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=45, x=13, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=45, x=13, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
---> 4-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=45, x=13, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=46, x=14, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=47, x=6, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=47, x=6, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
---> 5-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=47, x=6, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=46, x=7, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=51, x=9, store=836.0) --------
--> 6-Wolf has >Min_energy(500) store (y=51, x=9, store=836.0) and 0.25 <= random.random() < 0.5. Tries to find food (sheep).
---> 6-Wolf looping with 0-Sheep
---> 6-Wolf looping with 1-Sheep
---> 6-Wolf looping with 2-Sheep
---> 6-Wolf looping with 3-Sheep
---> 6-Wolf looping with 4-Sheep
---> 6-Wolf looping with 5-Sheep
---> 6-Wolf looping with 6-Sheep
---> 6-Wolf looping with 7-Sheep
---> 6-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 6-Wolf (y=51, x=9, store=836.0) before normal moving
-->else1 ends: 6-Wolf (y=50, x=10, store=836.0) after normal moving
....el1___________ 6-Wolf moved normally___________
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 152 ************

-> ------------ 0-Sheep initialised with (y=86, x=79, store=567.6806640625) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=86, x=79, store=567.6806640625). Will move normally and eat
-->0-Sheep (y=86, x=79, store=567.6806640625) before normal moving and eating
-->0-Sheep (y=85, x=80, store=577.6806640625) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=73, x=115, store=605.8171081542969) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store > Min_ernergy(600) (y=73, x=115, store=605.8171081542969).
--> 1-Sheep looping with 0-Sheep.
--> 1-Sheep looping with 1-Sheep.
----> ---- (AD < D < MD).
----> Min distance=8.246211251235321 for 1-Sheep (y=73, x=115, store=605.8171081542969) with 1-Sheep (y=81, x=113, store=326.7741394042969).
--> 1-Sheep looping with 2-Sheep.
----> D <=AD. Sheep Breeding/Sharing proximity of 1.0(<=5) entered by CS 1-Sheep (y=73, x=115, store=605.8171081542969) with CS 2-Sheep (y=72, x=115, store=336.7741394042969).
-----> 1-Sheep (y=73, x=115, store=605.8171081542969) and CS 2-Sheep (y=72, x=115, store=336.7741394042969 will not mate as CS 2-Sheep store <600. They will share resource to become average.
-----> Shared resources = True
-----> 1-Sheep (y=73, x=115, store=471.2956237792969) and CS 2-Sheep (y=72, x=115, store=471.2956237792969) after sharing resources!
_____________ 1-Sheep and CS 2-Sheep shared resources ____________
_______ Breeding=False, Failed breeding=False, Share=True for 1-Sheep __________

-> ------------ 2-Sheep initialised with (y=87, x=82, store=577.6806640625) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=87, x=82, store=577.6806640625). Will move normally and eat
-->2-Sheep (y=87, x=82, store=577.6806640625) before normal moving and eating
-->2-Sheep (y=86, x=83, store=587.6806640625) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=81, x=113, store=326.7741394042969) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=81, x=113, store=326.7741394042969). Will move normally and eat
-->3-Sheep (y=81, x=113, store=326.7741394042969) before normal moving and eating
-->3-Sheep (y=80, x=114, store=336.7741394042969) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=72, x=115, store=471.2956237792969) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=72, x=115, store=471.2956237792969). Will move normally and eat
-->4-Sheep (y=72, x=115, store=471.2956237792969) before normal moving and eating
-->4-Sheep (y=71, x=114, store=481.2956237792969) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=93, x=85, store=510.048828125) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=93, x=85, store=510.048828125). Will move normally and eat
-->5-Sheep (y=93, x=85, store=510.048828125) before normal moving and eating
-->5-Sheep (y=94, x=84, store=520.048828125) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=98, x=92, store=566.953125) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=98, x=92, store=566.953125). Will move normally and eat
-->6-Sheep (y=98, x=92, store=566.953125) before normal moving and eating
-->6-Sheep (y=97, x=93, store=576.953125) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=77, x=116, store=691.2794494628906) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store > Min_ernergy(600) (y=77, x=116, store=691.2794494628906).
--> 7-Sheep looping with 0-Sheep.
-> NO CS Found.
-> 7-Sheep (y=77, x=116, store=691.2794494628906) before normally moving and eating.
-> 7-Sheep (y=76, x=117, store=701.2794494628906) after normally moving and eating.
___e1________ 7-Sheep moved normally and ate ___________


-> ------------ 8-Sheep initialised with (y=97, x=85, store=364.78515625) -----------
--> 8-Sheep looping with 0-Wolf.
--> 8-Sheep looping with 1-Wolf.
--> 8-Sheep looping with 2-Wolf.
--> 8-Sheep looping with 3-Wolf.
--> 8-Sheep looping with 4-Wolf.
--> 8-Sheep looping with 5-Wolf.
--> 8-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->8-Sheep has Store < Min_ernergy(600) (y=97, x=85, store=364.78515625). Will move normally and eat
-->8-Sheep (y=97, x=85, store=364.78515625) before normal moving and eating
-->8-Sheep (y=98, x=86, store=374.78515625) after normal moving and eating
___e2________ 8-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=247, x=38, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=247, x=38, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
---> 0-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=247, x=38, store=100) before normal moving
-->else1 ends: 0-Wolf (y=246, x=37, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=110, x=273, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=110, x=273, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
---> 1-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=110, x=273, store=300) before normal moving
-->else1 ends: 1-Wolf (y=109, x=272, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=218, x=114, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=218, x=114, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
---> 2-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=218, x=114, store=200) before normal moving
-->else1 ends: 2-Wolf (y=219, x=115, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=74, x=2, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=74, x=2, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
---> 3-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=74, x=2, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=73, x=3, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=46, x=14, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=46, x=14, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
---> 4-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=46, x=14, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=45, x=13, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=46, x=7, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=46, x=7, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
---> 5-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=46, x=7, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=47, x=6, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=50, x=10, store=836.0) --------
--> 6-Wolf has > 500 store (y=50, x=10, store=836.0) and Random >= 0.5. so will try to find CW to move closer or breed/fight if within AD(5).
-> No CW found. although store >500 and p>=0.5!
--->else2 begins: 6-Wolf (y=50, x=10, store=836.0) before normal moving.
--->else2 begins: 6-Wolf (y=51, x=9, store=836.0) after normal moving.
.... el2 _______  6-Wolf moved normally _______ 
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 153 ************

-> ------------ 0-Sheep initialised with (y=85, x=80, store=577.6806640625) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=85, x=80, store=577.6806640625). Will move normally and eat
-->0-Sheep (y=85, x=80, store=577.6806640625) before normal moving and eating
-->0-Sheep (y=84, x=79, store=587.6806640625) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=73, x=115, store=471.2956237792969) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=73, x=115, store=471.2956237792969). Will move normally and eat
-->1-Sheep (y=73, x=115, store=471.2956237792969) before normal moving and eating
-->1-Sheep (y=72, x=114, store=481.2956237792969) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=86, x=83, store=587.6806640625) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=86, x=83, store=587.6806640625). Will move normally and eat
-->2-Sheep (y=86, x=83, store=587.6806640625) before normal moving and eating
-->2-Sheep (y=85, x=84, store=597.6806640625) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=80, x=114, store=336.7741394042969) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=80, x=114, store=336.7741394042969). Will move normally and eat
-->3-Sheep (y=80, x=114, store=336.7741394042969) before normal moving and eating
-->3-Sheep (y=79, x=115, store=346.7741394042969) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=71, x=114, store=481.2956237792969) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=71, x=114, store=481.2956237792969). Will move normally and eat
-->4-Sheep (y=71, x=114, store=481.2956237792969) before normal moving and eating
-->4-Sheep (y=70, x=115, store=491.2956237792969) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=94, x=84, store=520.048828125) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=94, x=84, store=520.048828125). Will move normally and eat
-->5-Sheep (y=94, x=84, store=520.048828125) before normal moving and eating
-->5-Sheep (y=93, x=83, store=530.048828125) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=97, x=93, store=576.953125) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=97, x=93, store=576.953125). Will move normally and eat
-->6-Sheep (y=97, x=93, store=576.953125) before normal moving and eating
-->6-Sheep (y=98, x=94, store=586.953125) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=76, x=117, store=701.2794494628906) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store > Min_ernergy(600) (y=76, x=117, store=701.2794494628906).
--> 7-Sheep looping with 0-Sheep.
-> NO CS Found.
-> 7-Sheep (y=76, x=117, store=701.2794494628906) before normally moving and eating.
-> 7-Sheep (y=75, x=116, store=711.2794494628906) after normally moving and eating.
___e1________ 7-Sheep moved normally and ate ___________


-> ------------ 8-Sheep initialised with (y=98, x=86, store=374.78515625) -----------
--> 8-Sheep looping with 0-Wolf.
--> 8-Sheep looping with 1-Wolf.
--> 8-Sheep looping with 2-Wolf.
--> 8-Sheep looping with 3-Wolf.
--> 8-Sheep looping with 4-Wolf.
--> 8-Sheep looping with 5-Wolf.
--> 8-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->8-Sheep has Store < Min_ernergy(600) (y=98, x=86, store=374.78515625). Will move normally and eat
-->8-Sheep (y=98, x=86, store=374.78515625) before normal moving and eating
-->8-Sheep (y=97, x=87, store=384.78515625) after normal moving and eating
___e2________ 8-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=246, x=37, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=246, x=37, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
---> 0-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=246, x=37, store=100) before normal moving
-->else1 ends: 0-Wolf (y=247, x=38, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=109, x=272, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=109, x=272, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
---> 1-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=109, x=272, store=300) before normal moving
-->else1 ends: 1-Wolf (y=108, x=271, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=219, x=115, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=219, x=115, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
---> 2-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=219, x=115, store=200) before normal moving
-->else1 ends: 2-Wolf (y=220, x=114, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=73, x=3, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=73, x=3, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
---> 3-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=73, x=3, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=72, x=2, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=45, x=13, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=45, x=13, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
---> 4-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=45, x=13, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=44, x=14, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=47, x=6, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=47, x=6, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
---> 5-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=47, x=6, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=46, x=5, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=51, x=9, store=836.0) --------
--> if and elif not satisfied
--> 6-Wolf has > Min_energy(500) store (y=51, x=9, store=836.0) but Random < bf_e/2(0.25). So will move normally.
--->else3 begins: 6-Wolf (y=51, x=9, store=836.0) before normal moving.
--->else3 begins: 6-Wolf (y=52, x=8, store=836.0) after normal moving.
....e3_______ 6-Wolf moved normally_______
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 154 ************

-> ------------ 0-Sheep initialised with (y=84, x=79, store=587.6806640625) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=84, x=79, store=587.6806640625). Will move normally and eat
-->0-Sheep (y=84, x=79, store=587.6806640625) before normal moving and eating
-->0-Sheep (y=85, x=80, store=597.6806640625) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=72, x=114, store=481.2956237792969) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=72, x=114, store=481.2956237792969). Will move normally and eat
-->1-Sheep (y=72, x=114, store=481.2956237792969) before normal moving and eating
-->1-Sheep (y=71, x=115, store=491.2956237792969) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=85, x=84, store=597.6806640625) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=85, x=84, store=597.6806640625). Will move normally and eat
-->2-Sheep (y=85, x=84, store=597.6806640625) before normal moving and eating
-->2-Sheep (y=84, x=85, store=607.6806640625) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=79, x=115, store=346.7741394042969) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=79, x=115, store=346.7741394042969). Will move normally and eat
-->3-Sheep (y=79, x=115, store=346.7741394042969) before normal moving and eating
-->3-Sheep (y=80, x=114, store=356.7741394042969) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=70, x=115, store=491.2956237792969) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=70, x=115, store=491.2956237792969). Will move normally and eat
-->4-Sheep (y=70, x=115, store=491.2956237792969) before normal moving and eating
-->4-Sheep (y=69, x=116, store=501.2956237792969) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=93, x=83, store=530.048828125) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=93, x=83, store=530.048828125). Will move normally and eat
-->5-Sheep (y=93, x=83, store=530.048828125) before normal moving and eating
-->5-Sheep (y=94, x=82, store=540.048828125) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=98, x=94, store=586.953125) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=98, x=94, store=586.953125). Will move normally and eat
-->6-Sheep (y=98, x=94, store=586.953125) before normal moving and eating
-->6-Sheep (y=99, x=95, store=596.953125) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=75, x=116, store=711.2794494628906) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store > Min_ernergy(600) (y=75, x=116, store=711.2794494628906).
--> 7-Sheep looping with 0-Sheep.
-> NO CS Found.
-> 7-Sheep (y=75, x=116, store=711.2794494628906) before normally moving and eating.
-> 7-Sheep (y=74, x=117, store=721.2794494628906) after normally moving and eating.
___e1________ 7-Sheep moved normally and ate ___________


-> ------------ 8-Sheep initialised with (y=97, x=87, store=384.78515625) -----------
--> 8-Sheep looping with 0-Wolf.
--> 8-Sheep looping with 1-Wolf.
--> 8-Sheep looping with 2-Wolf.
--> 8-Sheep looping with 3-Wolf.
--> 8-Sheep looping with 4-Wolf.
--> 8-Sheep looping with 5-Wolf.
--> 8-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->8-Sheep has Store < Min_ernergy(600) (y=97, x=87, store=384.78515625). Will move normally and eat
-->8-Sheep (y=97, x=87, store=384.78515625) before normal moving and eating
-->8-Sheep (y=98, x=86, store=394.78515625) after normal moving and eating
___e2________ 8-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=247, x=38, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=247, x=38, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
---> 0-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=247, x=38, store=100) before normal moving
-->else1 ends: 0-Wolf (y=246, x=37, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=108, x=271, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=108, x=271, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
---> 1-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=108, x=271, store=300) before normal moving
-->else1 ends: 1-Wolf (y=107, x=272, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=220, x=114, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=220, x=114, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
---> 2-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=220, x=114, store=200) before normal moving
-->else1 ends: 2-Wolf (y=221, x=113, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=72, x=2, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=72, x=2, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
---> 3-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=72, x=2, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=71, x=1, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=44, x=14, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=44, x=14, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
---> 4-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=44, x=14, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=43, x=15, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=46, x=5, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=46, x=5, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
---> 5-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=46, x=5, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=47, x=6, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=52, x=8, store=836.0) --------
--> 6-Wolf has > 500 store (y=52, x=8, store=836.0) and Random >= 0.5. so will try to find CW to move closer or breed/fight if within AD(5).
-> No CW found. although store >500 and p>=0.5!
--->else2 begins: 6-Wolf (y=52, x=8, store=836.0) before normal moving.
--->else2 begins: 6-Wolf (y=51, x=9, store=836.0) after normal moving.
.... el2 _______  6-Wolf moved normally _______ 
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 155 ************

-> ------------ 0-Sheep initialised with (y=85, x=80, store=597.6806640625) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=85, x=80, store=597.6806640625). Will move normally and eat
-->0-Sheep (y=85, x=80, store=597.6806640625) before normal moving and eating
-->0-Sheep (y=84, x=81, store=607.6806640625) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=71, x=115, store=491.2956237792969) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=71, x=115, store=491.2956237792969). Will move normally and eat
-->1-Sheep (y=71, x=115, store=491.2956237792969) before normal moving and eating
-->1-Sheep (y=72, x=114, store=501.2956237792969) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=84, x=85, store=607.6806640625) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store > Min_ernergy(600) (y=84, x=85, store=607.6806640625).
--> 2-Sheep looping with 0-Sheep.
--> 2-Sheep looping with 1-Sheep.
--> 2-Sheep looping with 2-Sheep.
----> ---- (AD < D < MD).
----> Min distance=10.44030650891055 for 2-Sheep (y=84, x=85, store=607.6806640625) with 2-Sheep (y=94, x=82, store=540.048828125).
--> 2-Sheep looping with 3-Sheep.
--> 2-Sheep looping with 4-Sheep.
--> 2-Sheep looping with 5-Sheep.
->CS Found!
-> 2-Sheep (y=84, x=85, store=607.6806640625) before moving closer (while eating) to CS-Sheep: (y=94, x=82, store=540.048828125).
-> 2-Wolf (y=89, x=83, store=617.6806640625) after moving closer (while eating) to CS-Sheep: (y=94, x=82, store=540.048828125).
___________ 2-Sheep moved closer CS___________


-> ------------ 3-Sheep initialised with (y=80, x=114, store=356.7741394042969) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=80, x=114, store=356.7741394042969). Will move normally and eat
-->3-Sheep (y=80, x=114, store=356.7741394042969) before normal moving and eating
-->3-Sheep (y=79, x=113, store=366.7741394042969) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=69, x=116, store=501.2956237792969) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=69, x=116, store=501.2956237792969). Will move normally and eat
-->4-Sheep (y=69, x=116, store=501.2956237792969) before normal moving and eating
-->4-Sheep (y=70, x=117, store=511.2956237792969) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=94, x=82, store=540.048828125) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=94, x=82, store=540.048828125). Will move normally and eat
-->5-Sheep (y=94, x=82, store=540.048828125) before normal moving and eating
-->5-Sheep (y=95, x=81, store=550.048828125) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=99, x=95, store=596.953125) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=99, x=95, store=596.953125). Will move normally and eat
-->6-Sheep (y=99, x=95, store=596.953125) before normal moving and eating
-->6-Sheep (y=100, x=94, store=606.953125) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=74, x=117, store=721.2794494628906) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store > Min_ernergy(600) (y=74, x=117, store=721.2794494628906).
--> 7-Sheep looping with 0-Sheep.
-> NO CS Found.
-> 7-Sheep (y=74, x=117, store=721.2794494628906) before normally moving and eating.
-> 7-Sheep (y=73, x=118, store=731.2794494628906) after normally moving and eating.
___e1________ 7-Sheep moved normally and ate ___________


-> ------------ 8-Sheep initialised with (y=98, x=86, store=394.78515625) -----------
--> 8-Sheep looping with 0-Wolf.
--> 8-Sheep looping with 1-Wolf.
--> 8-Sheep looping with 2-Wolf.
--> 8-Sheep looping with 3-Wolf.
--> 8-Sheep looping with 4-Wolf.
--> 8-Sheep looping with 5-Wolf.
--> 8-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->8-Sheep has Store < Min_ernergy(600) (y=98, x=86, store=394.78515625). Will move normally and eat
-->8-Sheep (y=98, x=86, store=394.78515625) before normal moving and eating
-->8-Sheep (y=99, x=87, store=404.78515625) after normal moving and eating
___e2________ 8-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=246, x=37, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=246, x=37, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
---> 0-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=246, x=37, store=100) before normal moving
-->else1 ends: 0-Wolf (y=247, x=38, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=107, x=272, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=107, x=272, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
---> 1-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=107, x=272, store=300) before normal moving
-->else1 ends: 1-Wolf (y=108, x=271, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=221, x=113, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=221, x=113, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
---> 2-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=221, x=113, store=200) before normal moving
-->else1 ends: 2-Wolf (y=222, x=114, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=71, x=1, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=71, x=1, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
---> 3-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=71, x=1, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=70, x=2, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=43, x=15, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=43, x=15, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
---> 4-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=43, x=15, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=44, x=16, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=47, x=6, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=47, x=6, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
---> 5-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=47, x=6, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=46, x=5, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=51, x=9, store=836.0) --------
--> if and elif not satisfied
--> 6-Wolf has > Min_energy(500) store (y=51, x=9, store=836.0) but Random < bf_e/2(0.25). So will move normally.
--->else3 begins: 6-Wolf (y=51, x=9, store=836.0) before normal moving.
--->else3 begins: 6-Wolf (y=52, x=8, store=836.0) after normal moving.
....e3_______ 6-Wolf moved normally_______
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 156 ************

-> ------------ 0-Sheep initialised with (y=84, x=81, store=607.6806640625) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store > Min_ernergy(600) (y=84, x=81, store=607.6806640625).
--> 0-Sheep looping with 0-Sheep.
--> 0-Sheep looping with 1-Sheep.
----> ---- (AD < D < MD).
----> Min distance=5.385164807134504 for 0-Sheep (y=84, x=81, store=607.6806640625) with 1-Sheep (y=89, x=83, store=617.6806640625).
--> 0-Sheep looping with 2-Sheep.
--> 0-Sheep looping with 3-Sheep.
--> 0-Sheep looping with 4-Sheep.
--> 0-Sheep looping with 5-Sheep.
--> 0-Sheep looping with 6-Sheep.
--> 0-Sheep looping with 7-Sheep.
->CS Found!
-> 0-Sheep (y=84, x=81, store=607.6806640625) before moving closer (while eating) to CS-Sheep: (y=89, x=83, store=617.6806640625).
-> 0-Wolf (y=86, x=82, store=617.6806640625) after moving closer (while eating) to CS-Sheep: (y=89, x=83, store=617.6806640625).
___________ 0-Sheep moved closer CS___________


-> ------------ 1-Sheep initialised with (y=72, x=114, store=501.2956237792969) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=72, x=114, store=501.2956237792969). Will move normally and eat
-->1-Sheep (y=72, x=114, store=501.2956237792969) before normal moving and eating
-->1-Sheep (y=73, x=115, store=511.2956237792969) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=89, x=83, store=617.6806640625) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store > Min_ernergy(600) (y=89, x=83, store=617.6806640625).
--> 2-Sheep looping with 0-Sheep.
--> 2-Sheep looping with 1-Sheep.
--> 2-Sheep looping with 2-Sheep.
----> ---- (AD < D < MD).
----> Min distance=6.324555320336759 for 2-Sheep (y=89, x=83, store=617.6806640625) with 2-Sheep (y=95, x=81, store=550.048828125).
--> 2-Sheep looping with 3-Sheep.
--> 2-Sheep looping with 4-Sheep.
--> 2-Sheep looping with 5-Sheep.
->CS Found!
-> 2-Sheep (y=89, x=83, store=617.6806640625) before moving closer (while eating) to CS-Sheep: (y=95, x=81, store=550.048828125).
-> 2-Wolf (y=92, x=82, store=627.6806640625) after moving closer (while eating) to CS-Sheep: (y=95, x=81, store=550.048828125).
___________ 2-Sheep moved closer CS___________


-> ------------ 3-Sheep initialised with (y=79, x=113, store=366.7741394042969) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=79, x=113, store=366.7741394042969). Will move normally and eat
-->3-Sheep (y=79, x=113, store=366.7741394042969) before normal moving and eating
-->3-Sheep (y=80, x=112, store=376.7741394042969) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=70, x=117, store=511.2956237792969) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=70, x=117, store=511.2956237792969). Will move normally and eat
-->4-Sheep (y=70, x=117, store=511.2956237792969) before normal moving and eating
-->4-Sheep (y=69, x=118, store=521.2956237792969) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=95, x=81, store=550.048828125) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=95, x=81, store=550.048828125). Will move normally and eat
-->5-Sheep (y=95, x=81, store=550.048828125) before normal moving and eating
-->5-Sheep (y=94, x=82, store=560.048828125) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=100, x=94, store=606.953125) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store > Min_ernergy(600) (y=100, x=94, store=606.953125).
--> 6-Sheep looping with 0-Sheep.
--> 6-Sheep looping with 1-Sheep.
----> ---- (AD < D < MD).
----> Min distance=7.0710678118654755 for 6-Sheep (y=100, x=94, store=606.953125) with 1-Sheep (y=99, x=87, store=404.78515625).
->CS Found!
-> 6-Sheep (y=100, x=94, store=606.953125) before moving closer (while eating) to CS-Sheep: (y=99, x=87, store=404.78515625).
-> 6-Wolf (y=99, x=90, store=616.953125) after moving closer (while eating) to CS-Sheep: (y=99, x=87, store=404.78515625).
___________ 6-Sheep moved closer CS___________


-> ------------ 7-Sheep initialised with (y=73, x=118, store=731.2794494628906) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store > Min_ernergy(600) (y=73, x=118, store=731.2794494628906).
--> 7-Sheep looping with 0-Sheep.
-> NO CS Found.
-> 7-Sheep (y=73, x=118, store=731.2794494628906) before normally moving and eating.
-> 7-Sheep (y=72, x=117, store=741.2794494628906) after normally moving and eating.
___e1________ 7-Sheep moved normally and ate ___________


-> ------------ 8-Sheep initialised with (y=99, x=87, store=404.78515625) -----------
--> 8-Sheep looping with 0-Wolf.
--> 8-Sheep looping with 1-Wolf.
--> 8-Sheep looping with 2-Wolf.
--> 8-Sheep looping with 3-Wolf.
--> 8-Sheep looping with 4-Wolf.
--> 8-Sheep looping with 5-Wolf.
--> 8-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->8-Sheep has Store < Min_ernergy(600) (y=99, x=87, store=404.78515625). Will move normally and eat
-->8-Sheep (y=99, x=87, store=404.78515625) before normal moving and eating
-->8-Sheep (y=98, x=86, store=414.78515625) after normal moving and eating
___e2________ 8-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=247, x=38, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=247, x=38, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
---> 0-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=247, x=38, store=100) before normal moving
-->else1 ends: 0-Wolf (y=246, x=39, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=108, x=271, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=108, x=271, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
---> 1-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=108, x=271, store=300) before normal moving
-->else1 ends: 1-Wolf (y=107, x=272, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=222, x=114, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=222, x=114, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
---> 2-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=222, x=114, store=200) before normal moving
-->else1 ends: 2-Wolf (y=223, x=115, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=70, x=2, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=70, x=2, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
---> 3-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=70, x=2, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=69, x=3, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=44, x=16, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=44, x=16, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
---> 4-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=44, x=16, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=45, x=17, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=46, x=5, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=46, x=5, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
---> 5-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=46, x=5, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=47, x=4, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=52, x=8, store=836.0) --------
--> 6-Wolf has >Min_energy(500) store (y=52, x=8, store=836.0) and 0.25 <= random.random() < 0.5. Tries to find food (sheep).
---> 6-Wolf looping with 0-Sheep
---> 6-Wolf looping with 1-Sheep
---> 6-Wolf looping with 2-Sheep
---> 6-Wolf looping with 3-Sheep
---> 6-Wolf looping with 4-Sheep
---> 6-Wolf looping with 5-Sheep
---> 6-Wolf looping with 6-Sheep
---> 6-Wolf looping with 7-Sheep
---> 6-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 6-Wolf (y=52, x=8, store=836.0) before normal moving
-->else1 ends: 6-Wolf (y=53, x=9, store=836.0) after normal moving
....el1___________ 6-Wolf moved normally___________
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 157 ************

-> ------------ 0-Sheep initialised with (y=86, x=82, store=617.6806640625) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store > Min_ernergy(600) (y=86, x=82, store=617.6806640625).
--> 0-Sheep looping with 0-Sheep.
--> 0-Sheep looping with 1-Sheep.
----> ---- (AD < D < MD).
----> Min distance=6.0 for 0-Sheep (y=86, x=82, store=617.6806640625) with 1-Sheep (y=92, x=82, store=627.6806640625).
--> 0-Sheep looping with 2-Sheep.
--> 0-Sheep looping with 3-Sheep.
--> 0-Sheep looping with 4-Sheep.
--> 0-Sheep looping with 5-Sheep.
--> 0-Sheep looping with 6-Sheep.
--> 0-Sheep looping with 7-Sheep.
->CS Found!
-> 0-Sheep (y=86, x=82, store=617.6806640625) before moving closer (while eating) to CS-Sheep: (y=92, x=82, store=627.6806640625).
-> 0-Wolf (y=89, x=82, store=627.6806640625) after moving closer (while eating) to CS-Sheep: (y=92, x=82, store=627.6806640625).
___________ 0-Sheep moved closer CS___________


-> ------------ 1-Sheep initialised with (y=73, x=115, store=511.2956237792969) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=73, x=115, store=511.2956237792969). Will move normally and eat
-->1-Sheep (y=73, x=115, store=511.2956237792969) before normal moving and eating
-->1-Sheep (y=72, x=116, store=521.2956237792969) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=92, x=82, store=627.6806640625) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store > Min_ernergy(600) (y=92, x=82, store=627.6806640625).
--> 2-Sheep looping with 0-Sheep.
--> 2-Sheep looping with 1-Sheep.
--> 2-Sheep looping with 2-Sheep.
----> D <=AD. Sheep Breeding/Sharing proximity of 2.0(<=5) entered by CS 2-Sheep (y=92, x=82, store=627.6806640625) with CS 2-Sheep (y=94, x=82, store=560.048828125).
-----> 2-Sheep (y=92, x=82, store=627.6806640625) and CS 2-Sheep (y=94, x=82, store=560.048828125 will not mate as CS 2-Sheep store <600. They will share resource to become average.
-----> Shared resources = True
-----> 2-Sheep (y=92, x=82, store=593.86474609375) and CS 2-Sheep (y=94, x=82, store=593.86474609375) after sharing resources!
_____________ 2-Sheep and CS 2-Sheep shared resources ____________
_______ Breeding=False, Failed breeding=False, Share=True for 2-Sheep __________

-> ------------ 3-Sheep initialised with (y=80, x=112, store=376.7741394042969) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=80, x=112, store=376.7741394042969). Will move normally and eat
-->3-Sheep (y=80, x=112, store=376.7741394042969) before normal moving and eating
-->3-Sheep (y=79, x=113, store=386.7741394042969) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=69, x=118, store=521.2956237792969) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=69, x=118, store=521.2956237792969). Will move normally and eat
-->4-Sheep (y=69, x=118, store=521.2956237792969) before normal moving and eating
-->4-Sheep (y=70, x=119, store=531.2956237792969) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=94, x=82, store=593.86474609375) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=94, x=82, store=593.86474609375). Will move normally and eat
-->5-Sheep (y=94, x=82, store=593.86474609375) before normal moving and eating
-->5-Sheep (y=95, x=83, store=603.86474609375) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=99, x=90, store=616.953125) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store > Min_ernergy(600) (y=99, x=90, store=616.953125).
--> 6-Sheep looping with 0-Sheep.
--> 6-Sheep looping with 1-Sheep.
----> D <=AD. Sheep Breeding/Sharing proximity of 4.123105625617661(<=5) entered by CS 6-Sheep (y=99, x=90, store=616.953125) with CS 1-Sheep (y=98, x=86, store=414.78515625).
-----> 6-Sheep (y=99, x=90, store=616.953125) and CS 1-Sheep (y=98, x=86, store=414.78515625 will not mate as CS 1-Sheep store <600. They will share resource to become average.
-----> Shared resources = True
-----> 6-Sheep (y=99, x=90, store=515.869140625) and CS 1-Sheep (y=98, x=86, store=515.869140625) after sharing resources!
_____________ 6-Sheep and CS 1-Sheep shared resources ____________
_______ Breeding=False, Failed breeding=False, Share=True for 6-Sheep __________

-> ------------ 7-Sheep initialised with (y=72, x=117, store=741.2794494628906) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store > Min_ernergy(600) (y=72, x=117, store=741.2794494628906).
--> 7-Sheep looping with 0-Sheep.
-> NO CS Found.
-> 7-Sheep (y=72, x=117, store=741.2794494628906) before normally moving and eating.
-> 7-Sheep (y=71, x=116, store=751.2794494628906) after normally moving and eating.
___e1________ 7-Sheep moved normally and ate ___________


-> ------------ 8-Sheep initialised with (y=98, x=86, store=515.869140625) -----------
--> 8-Sheep looping with 0-Wolf.
--> 8-Sheep looping with 1-Wolf.
--> 8-Sheep looping with 2-Wolf.
--> 8-Sheep looping with 3-Wolf.
--> 8-Sheep looping with 4-Wolf.
--> 8-Sheep looping with 5-Wolf.
--> 8-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->8-Sheep has Store < Min_ernergy(600) (y=98, x=86, store=515.869140625). Will move normally and eat
-->8-Sheep (y=98, x=86, store=515.869140625) before normal moving and eating
-->8-Sheep (y=99, x=87, store=525.869140625) after normal moving and eating
___e2________ 8-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=246, x=39, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=246, x=39, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
---> 0-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=246, x=39, store=100) before normal moving
-->else1 ends: 0-Wolf (y=247, x=40, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=107, x=272, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=107, x=272, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
---> 1-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=107, x=272, store=300) before normal moving
-->else1 ends: 1-Wolf (y=108, x=273, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=223, x=115, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=223, x=115, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
---> 2-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=223, x=115, store=200) before normal moving
-->else1 ends: 2-Wolf (y=224, x=114, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=69, x=3, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=69, x=3, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
---> 3-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=69, x=3, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=70, x=2, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=45, x=17, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=45, x=17, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
---> 4-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=45, x=17, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=44, x=18, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=47, x=4, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=47, x=4, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
---> 5-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=47, x=4, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=48, x=3, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=53, x=9, store=836.0) --------
--> if and elif not satisfied
--> 6-Wolf has > Min_energy(500) store (y=53, x=9, store=836.0) but Random < bf_e/2(0.25). So will move normally.
--->else3 begins: 6-Wolf (y=53, x=9, store=836.0) before normal moving.
--->else3 begins: 6-Wolf (y=52, x=10, store=836.0) after normal moving.
....e3_______ 6-Wolf moved normally_______
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 158 ************

-> ------------ 0-Sheep initialised with (y=89, x=82, store=627.6806640625) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store > Min_ernergy(600) (y=89, x=82, store=627.6806640625).
--> 0-Sheep looping with 0-Sheep.
--> 0-Sheep looping with 1-Sheep.
----> D <=AD. Sheep Breeding/Sharing proximity of 3.0(<=5) entered by CS 0-Sheep (y=89, x=82, store=627.6806640625) with CS 1-Sheep (y=92, x=82, store=593.86474609375).
-----> 0-Sheep (y=89, x=82, store=627.6806640625) and CS 1-Sheep (y=92, x=82, store=593.86474609375 will not mate as CS 1-Sheep store <600. They will share resource to become average.
-----> Shared resources = True
-----> 0-Sheep (y=89, x=82, store=610.772705078125) and CS 1-Sheep (y=92, x=82, store=610.772705078125) after sharing resources!
_____________ 0-Sheep and CS 1-Sheep shared resources ____________
_______ Breeding=False, Failed breeding=False, Share=True for 0-Sheep __________

-> ------------ 1-Sheep initialised with (y=72, x=116, store=521.2956237792969) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=72, x=116, store=521.2956237792969). Will move normally and eat
-->1-Sheep (y=72, x=116, store=521.2956237792969) before normal moving and eating
-->1-Sheep (y=73, x=115, store=531.2956237792969) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=92, x=82, store=610.772705078125) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store > Min_ernergy(600) (y=92, x=82, store=610.772705078125).
--> 2-Sheep looping with 0-Sheep.
--> 2-Sheep looping with 1-Sheep.
--> 2-Sheep looping with 2-Sheep.
----> D <=AD. Sheep Breeding/Sharing proximity of 3.1622776601683795(<=5) entered by CS 2-Sheep (y=92, x=82, store=610.772705078125) with CS 2-Sheep (y=95, x=83, store=603.86474609375).
----->2-Sheep (y=92, x=82, store=610.772705078125) and CS 2-Sheep (y=95, x=83, store=603.86474609375 have > Min_energy (600) store. So they will try breeding if p>0.5
------>1.B Random <0.5. So the breeding will fail.
------> 2-Sheep (y=92, x=82, store=610.772705078125) before failed breeding with CS 2-Sheep (y=95, x=83, store=603.86474609375)
------> Failed Sheep Breeding = True
------> 2-Sheep (y=92, x=82, store=303.65936279296875) after failed breeding with CS 2-Sheep (y=95, x=83, store=303.65936279296875).
_____________ 2-Sheep Fail Mated with CS 2-Sheep ____________
_______ Breeding=False, Failed breeding=True, Share=False for 2-Sheep __________

-> ------------ 3-Sheep initialised with (y=79, x=113, store=386.7741394042969) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=79, x=113, store=386.7741394042969). Will move normally and eat
-->3-Sheep (y=79, x=113, store=386.7741394042969) before normal moving and eating
-->3-Sheep (y=78, x=114, store=396.7741394042969) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=70, x=119, store=531.2956237792969) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=70, x=119, store=531.2956237792969). Will move normally and eat
-->4-Sheep (y=70, x=119, store=531.2956237792969) before normal moving and eating
-->4-Sheep (y=69, x=118, store=541.2956237792969) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=95, x=83, store=303.65936279296875) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=95, x=83, store=303.65936279296875). Will move normally and eat
-->5-Sheep (y=95, x=83, store=303.65936279296875) before normal moving and eating
-->5-Sheep (y=94, x=84, store=313.65936279296875) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=99, x=90, store=515.869140625) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=99, x=90, store=515.869140625). Will move normally and eat
-->6-Sheep (y=99, x=90, store=515.869140625) before normal moving and eating
-->6-Sheep (y=98, x=91, store=525.869140625) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=71, x=116, store=751.2794494628906) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store > Min_ernergy(600) (y=71, x=116, store=751.2794494628906).
--> 7-Sheep looping with 0-Sheep.
-> NO CS Found.
-> 7-Sheep (y=71, x=116, store=751.2794494628906) before normally moving and eating.
-> 7-Sheep (y=70, x=115, store=761.2794494628906) after normally moving and eating.
___e1________ 7-Sheep moved normally and ate ___________


-> ------------ 8-Sheep initialised with (y=99, x=87, store=525.869140625) -----------
--> 8-Sheep looping with 0-Wolf.
--> 8-Sheep looping with 1-Wolf.
--> 8-Sheep looping with 2-Wolf.
--> 8-Sheep looping with 3-Wolf.
--> 8-Sheep looping with 4-Wolf.
--> 8-Sheep looping with 5-Wolf.
--> 8-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->8-Sheep has Store < Min_ernergy(600) (y=99, x=87, store=525.869140625). Will move normally and eat
-->8-Sheep (y=99, x=87, store=525.869140625) before normal moving and eating
-->8-Sheep (y=98, x=86, store=535.869140625) after normal moving and eating
___e2________ 8-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=247, x=40, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=247, x=40, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
---> 0-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=247, x=40, store=100) before normal moving
-->else1 ends: 0-Wolf (y=248, x=41, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=108, x=273, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=108, x=273, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
---> 1-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=108, x=273, store=300) before normal moving
-->else1 ends: 1-Wolf (y=107, x=274, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=224, x=114, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=224, x=114, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
---> 2-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=224, x=114, store=200) before normal moving
-->else1 ends: 2-Wolf (y=225, x=115, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=70, x=2, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=70, x=2, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
---> 3-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=70, x=2, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=69, x=3, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=44, x=18, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=44, x=18, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
---> 4-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=44, x=18, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=45, x=17, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=48, x=3, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=48, x=3, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
---> 5-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=48, x=3, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=47, x=2, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=52, x=10, store=836.0) --------
--> 6-Wolf has > 500 store (y=52, x=10, store=836.0) and Random >= 0.5. so will try to find CW to move closer or breed/fight if within AD(5).
-> No CW found. although store >500 and p>=0.5!
--->else2 begins: 6-Wolf (y=52, x=10, store=836.0) before normal moving.
--->else2 begins: 6-Wolf (y=53, x=9, store=836.0) after normal moving.
.... el2 _______  6-Wolf moved normally _______ 
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 159 ************

-> ------------ 0-Sheep initialised with (y=89, x=82, store=610.772705078125) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store > Min_ernergy(600) (y=89, x=82, store=610.772705078125).
--> 0-Sheep looping with 0-Sheep.
--> 0-Sheep looping with 1-Sheep.
----> D <=AD. Sheep Breeding/Sharing proximity of 3.0(<=5) entered by CS 0-Sheep (y=89, x=82, store=610.772705078125) with CS 1-Sheep (y=92, x=82, store=303.65936279296875).
-----> 0-Sheep (y=89, x=82, store=610.772705078125) and CS 1-Sheep (y=92, x=82, store=303.65936279296875 will not mate as CS 1-Sheep store <600. They will share resource to become average.
-----> Shared resources = True
-----> 0-Sheep (y=89, x=82, store=457.2160339355469) and CS 1-Sheep (y=92, x=82, store=457.2160339355469) after sharing resources!
_____________ 0-Sheep and CS 1-Sheep shared resources ____________
_______ Breeding=False, Failed breeding=False, Share=True for 0-Sheep __________

-> ------------ 1-Sheep initialised with (y=73, x=115, store=531.2956237792969) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=73, x=115, store=531.2956237792969). Will move normally and eat
-->1-Sheep (y=73, x=115, store=531.2956237792969) before normal moving and eating
-->1-Sheep (y=74, x=114, store=541.2956237792969) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=92, x=82, store=457.2160339355469) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=92, x=82, store=457.2160339355469). Will move normally and eat
-->2-Sheep (y=92, x=82, store=457.2160339355469) before normal moving and eating
-->2-Sheep (y=93, x=81, store=467.2160339355469) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=78, x=114, store=396.7741394042969) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=78, x=114, store=396.7741394042969). Will move normally and eat
-->3-Sheep (y=78, x=114, store=396.7741394042969) before normal moving and eating
-->3-Sheep (y=77, x=115, store=406.7741394042969) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=69, x=118, store=541.2956237792969) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=69, x=118, store=541.2956237792969). Will move normally and eat
-->4-Sheep (y=69, x=118, store=541.2956237792969) before normal moving and eating
-->4-Sheep (y=70, x=119, store=551.2956237792969) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=94, x=84, store=313.65936279296875) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=94, x=84, store=313.65936279296875). Will move normally and eat
-->5-Sheep (y=94, x=84, store=313.65936279296875) before normal moving and eating
-->5-Sheep (y=93, x=83, store=323.65936279296875) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=98, x=91, store=525.869140625) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=98, x=91, store=525.869140625). Will move normally and eat
-->6-Sheep (y=98, x=91, store=525.869140625) before normal moving and eating
-->6-Sheep (y=97, x=90, store=535.869140625) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=70, x=115, store=761.2794494628906) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store > Min_ernergy(600) (y=70, x=115, store=761.2794494628906).
--> 7-Sheep looping with 0-Sheep.
-> NO CS Found.
-> 7-Sheep (y=70, x=115, store=761.2794494628906) before normally moving and eating.
-> 7-Sheep (y=71, x=116, store=771.2794494628906) after normally moving and eating.
___e1________ 7-Sheep moved normally and ate ___________


-> ------------ 8-Sheep initialised with (y=98, x=86, store=535.869140625) -----------
--> 8-Sheep looping with 0-Wolf.
--> 8-Sheep looping with 1-Wolf.
--> 8-Sheep looping with 2-Wolf.
--> 8-Sheep looping with 3-Wolf.
--> 8-Sheep looping with 4-Wolf.
--> 8-Sheep looping with 5-Wolf.
--> 8-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->8-Sheep has Store < Min_ernergy(600) (y=98, x=86, store=535.869140625). Will move normally and eat
-->8-Sheep (y=98, x=86, store=535.869140625) before normal moving and eating
-->8-Sheep (y=97, x=87, store=545.869140625) after normal moving and eating
___e2________ 8-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=248, x=41, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=248, x=41, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
---> 0-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=248, x=41, store=100) before normal moving
-->else1 ends: 0-Wolf (y=249, x=40, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=107, x=274, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=107, x=274, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
---> 1-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=107, x=274, store=300) before normal moving
-->else1 ends: 1-Wolf (y=106, x=273, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=225, x=115, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=225, x=115, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
---> 2-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=225, x=115, store=200) before normal moving
-->else1 ends: 2-Wolf (y=224, x=116, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=69, x=3, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=69, x=3, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
---> 3-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=69, x=3, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=70, x=4, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=45, x=17, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=45, x=17, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
---> 4-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=45, x=17, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=46, x=16, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=47, x=2, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=47, x=2, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
---> 5-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=47, x=2, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=48, x=3, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=53, x=9, store=836.0) --------
--> if and elif not satisfied
--> 6-Wolf has > Min_energy(500) store (y=53, x=9, store=836.0) but Random < bf_e/2(0.25). So will move normally.
--->else3 begins: 6-Wolf (y=53, x=9, store=836.0) before normal moving.
--->else3 begins: 6-Wolf (y=52, x=8, store=836.0) after normal moving.
....e3_______ 6-Wolf moved normally_______
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 160 ************

-> ------------ 0-Sheep initialised with (y=89, x=82, store=457.2160339355469) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=89, x=82, store=457.2160339355469). Will move normally and eat
-->0-Sheep (y=89, x=82, store=457.2160339355469) before normal moving and eating
-->0-Sheep (y=90, x=83, store=467.2160339355469) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=74, x=114, store=541.2956237792969) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=74, x=114, store=541.2956237792969). Will move normally and eat
-->1-Sheep (y=74, x=114, store=541.2956237792969) before normal moving and eating
-->1-Sheep (y=75, x=115, store=551.2956237792969) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=93, x=81, store=467.2160339355469) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=93, x=81, store=467.2160339355469). Will move normally and eat
-->2-Sheep (y=93, x=81, store=467.2160339355469) before normal moving and eating
-->2-Sheep (y=92, x=80, store=477.2160339355469) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=77, x=115, store=406.7741394042969) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=77, x=115, store=406.7741394042969). Will move normally and eat
-->3-Sheep (y=77, x=115, store=406.7741394042969) before normal moving and eating
-->3-Sheep (y=76, x=114, store=416.7741394042969) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=70, x=119, store=551.2956237792969) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=70, x=119, store=551.2956237792969). Will move normally and eat
-->4-Sheep (y=70, x=119, store=551.2956237792969) before normal moving and eating
-->4-Sheep (y=71, x=118, store=561.2956237792969) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=93, x=83, store=323.65936279296875) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=93, x=83, store=323.65936279296875). Will move normally and eat
-->5-Sheep (y=93, x=83, store=323.65936279296875) before normal moving and eating
-->5-Sheep (y=92, x=82, store=333.65936279296875) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=97, x=90, store=535.869140625) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=97, x=90, store=535.869140625). Will move normally and eat
-->6-Sheep (y=97, x=90, store=535.869140625) before normal moving and eating
-->6-Sheep (y=96, x=91, store=545.869140625) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=71, x=116, store=771.2794494628906) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store > Min_ernergy(600) (y=71, x=116, store=771.2794494628906).
--> 7-Sheep looping with 0-Sheep.
-> NO CS Found.
-> 7-Sheep (y=71, x=116, store=771.2794494628906) before normally moving and eating.
-> 7-Sheep (y=72, x=115, store=781.2794494628906) after normally moving and eating.
___e1________ 7-Sheep moved normally and ate ___________


-> ------------ 8-Sheep initialised with (y=97, x=87, store=545.869140625) -----------
--> 8-Sheep looping with 0-Wolf.
--> 8-Sheep looping with 1-Wolf.
--> 8-Sheep looping with 2-Wolf.
--> 8-Sheep looping with 3-Wolf.
--> 8-Sheep looping with 4-Wolf.
--> 8-Sheep looping with 5-Wolf.
--> 8-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->8-Sheep has Store < Min_ernergy(600) (y=97, x=87, store=545.869140625). Will move normally and eat
-->8-Sheep (y=97, x=87, store=545.869140625) before normal moving and eating
-->8-Sheep (y=96, x=88, store=555.869140625) after normal moving and eating
___e2________ 8-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=249, x=40, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=249, x=40, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
---> 0-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=249, x=40, store=100) before normal moving
-->else1 ends: 0-Wolf (y=248, x=41, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=106, x=273, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=106, x=273, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
---> 1-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=106, x=273, store=300) before normal moving
-->else1 ends: 1-Wolf (y=105, x=272, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=224, x=116, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=224, x=116, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
---> 2-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=224, x=116, store=200) before normal moving
-->else1 ends: 2-Wolf (y=225, x=117, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=70, x=4, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=70, x=4, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
---> 3-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=70, x=4, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=71, x=5, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=46, x=16, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=46, x=16, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
---> 4-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=46, x=16, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=47, x=15, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=48, x=3, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=48, x=3, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
---> 5-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=48, x=3, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=49, x=4, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=52, x=8, store=836.0) --------
--> 6-Wolf has >Min_energy(500) store (y=52, x=8, store=836.0) and 0.25 <= random.random() < 0.5. Tries to find food (sheep).
---> 6-Wolf looping with 0-Sheep
---> 6-Wolf looping with 1-Sheep
---> 6-Wolf looping with 2-Sheep
---> 6-Wolf looping with 3-Sheep
---> 6-Wolf looping with 4-Sheep
---> 6-Wolf looping with 5-Sheep
---> 6-Wolf looping with 6-Sheep
---> 6-Wolf looping with 7-Sheep
---> 6-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 6-Wolf (y=52, x=8, store=836.0) before normal moving
-->else1 ends: 6-Wolf (y=53, x=7, store=836.0) after normal moving
....el1___________ 6-Wolf moved normally___________
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 161 ************

-> ------------ 0-Sheep initialised with (y=90, x=83, store=467.2160339355469) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=90, x=83, store=467.2160339355469). Will move normally and eat
-->0-Sheep (y=90, x=83, store=467.2160339355469) before normal moving and eating
-->0-Sheep (y=89, x=82, store=477.2160339355469) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=75, x=115, store=551.2956237792969) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=75, x=115, store=551.2956237792969). Will move normally and eat
-->1-Sheep (y=75, x=115, store=551.2956237792969) before normal moving and eating
-->1-Sheep (y=74, x=116, store=561.2956237792969) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=92, x=80, store=477.2160339355469) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=92, x=80, store=477.2160339355469). Will move normally and eat
-->2-Sheep (y=92, x=80, store=477.2160339355469) before normal moving and eating
-->2-Sheep (y=93, x=81, store=487.2160339355469) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=76, x=114, store=416.7741394042969) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=76, x=114, store=416.7741394042969). Will move normally and eat
-->3-Sheep (y=76, x=114, store=416.7741394042969) before normal moving and eating
-->3-Sheep (y=75, x=115, store=426.7741394042969) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=71, x=118, store=561.2956237792969) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=71, x=118, store=561.2956237792969). Will move normally and eat
-->4-Sheep (y=71, x=118, store=561.2956237792969) before normal moving and eating
-->4-Sheep (y=72, x=119, store=571.2956237792969) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=92, x=82, store=333.65936279296875) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=92, x=82, store=333.65936279296875). Will move normally and eat
-->5-Sheep (y=92, x=82, store=333.65936279296875) before normal moving and eating
-->5-Sheep (y=91, x=83, store=343.65936279296875) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=96, x=91, store=545.869140625) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=96, x=91, store=545.869140625). Will move normally and eat
-->6-Sheep (y=96, x=91, store=545.869140625) before normal moving and eating
-->6-Sheep (y=97, x=92, store=555.869140625) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=72, x=115, store=781.2794494628906) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store > Min_ernergy(600) (y=72, x=115, store=781.2794494628906).
--> 7-Sheep looping with 0-Sheep.
-> NO CS Found.
-> 7-Sheep (y=72, x=115, store=781.2794494628906) before normally moving and eating.
-> 7-Sheep (y=73, x=116, store=791.2794494628906) after normally moving and eating.
___e1________ 7-Sheep moved normally and ate ___________


-> ------------ 8-Sheep initialised with (y=96, x=88, store=555.869140625) -----------
--> 8-Sheep looping with 0-Wolf.
--> 8-Sheep looping with 1-Wolf.
--> 8-Sheep looping with 2-Wolf.
--> 8-Sheep looping with 3-Wolf.
--> 8-Sheep looping with 4-Wolf.
--> 8-Sheep looping with 5-Wolf.
--> 8-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->8-Sheep has Store < Min_ernergy(600) (y=96, x=88, store=555.869140625). Will move normally and eat
-->8-Sheep (y=96, x=88, store=555.869140625) before normal moving and eating
-->8-Sheep (y=95, x=89, store=565.869140625) after normal moving and eating
___e2________ 8-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=248, x=41, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=248, x=41, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
---> 0-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=248, x=41, store=100) before normal moving
-->else1 ends: 0-Wolf (y=247, x=40, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=105, x=272, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=105, x=272, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
---> 1-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=105, x=272, store=300) before normal moving
-->else1 ends: 1-Wolf (y=106, x=271, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=225, x=117, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=225, x=117, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
---> 2-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=225, x=117, store=200) before normal moving
-->else1 ends: 2-Wolf (y=226, x=116, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=71, x=5, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=71, x=5, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
---> 3-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=71, x=5, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=70, x=6, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=47, x=15, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=47, x=15, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
---> 4-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=47, x=15, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=46, x=14, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=49, x=4, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=49, x=4, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
---> 5-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=49, x=4, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=48, x=3, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=53, x=7, store=836.0) --------
--> if and elif not satisfied
--> 6-Wolf has > Min_energy(500) store (y=53, x=7, store=836.0) but Random < bf_e/2(0.25). So will move normally.
--->else3 begins: 6-Wolf (y=53, x=7, store=836.0) before normal moving.
--->else3 begins: 6-Wolf (y=54, x=6, store=836.0) after normal moving.
....e3_______ 6-Wolf moved normally_______
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 162 ************

-> ------------ 0-Sheep initialised with (y=89, x=82, store=477.2160339355469) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=89, x=82, store=477.2160339355469). Will move normally and eat
-->0-Sheep (y=89, x=82, store=477.2160339355469) before normal moving and eating
-->0-Sheep (y=88, x=83, store=487.2160339355469) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=74, x=116, store=561.2956237792969) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=74, x=116, store=561.2956237792969). Will move normally and eat
-->1-Sheep (y=74, x=116, store=561.2956237792969) before normal moving and eating
-->1-Sheep (y=75, x=117, store=571.2956237792969) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=93, x=81, store=487.2160339355469) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=93, x=81, store=487.2160339355469). Will move normally and eat
-->2-Sheep (y=93, x=81, store=487.2160339355469) before normal moving and eating
-->2-Sheep (y=94, x=82, store=497.2160339355469) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=75, x=115, store=426.7741394042969) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=75, x=115, store=426.7741394042969). Will move normally and eat
-->3-Sheep (y=75, x=115, store=426.7741394042969) before normal moving and eating
-->3-Sheep (y=76, x=114, store=436.7741394042969) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=72, x=119, store=571.2956237792969) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=72, x=119, store=571.2956237792969). Will move normally and eat
-->4-Sheep (y=72, x=119, store=571.2956237792969) before normal moving and eating
-->4-Sheep (y=71, x=118, store=581.2956237792969) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=91, x=83, store=343.65936279296875) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=91, x=83, store=343.65936279296875). Will move normally and eat
-->5-Sheep (y=91, x=83, store=343.65936279296875) before normal moving and eating
-->5-Sheep (y=92, x=84, store=353.65936279296875) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=97, x=92, store=555.869140625) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=97, x=92, store=555.869140625). Will move normally and eat
-->6-Sheep (y=97, x=92, store=555.869140625) before normal moving and eating
-->6-Sheep (y=98, x=91, store=565.869140625) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=73, x=116, store=791.2794494628906) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store > Min_ernergy(600) (y=73, x=116, store=791.2794494628906).
--> 7-Sheep looping with 0-Sheep.
-> NO CS Found.
-> 7-Sheep (y=73, x=116, store=791.2794494628906) before normally moving and eating.
-> 7-Sheep (y=72, x=115, store=801.2794494628906) after normally moving and eating.
___e1________ 7-Sheep moved normally and ate ___________


-> ------------ 8-Sheep initialised with (y=95, x=89, store=565.869140625) -----------
--> 8-Sheep looping with 0-Wolf.
--> 8-Sheep looping with 1-Wolf.
--> 8-Sheep looping with 2-Wolf.
--> 8-Sheep looping with 3-Wolf.
--> 8-Sheep looping with 4-Wolf.
--> 8-Sheep looping with 5-Wolf.
--> 8-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->8-Sheep has Store < Min_ernergy(600) (y=95, x=89, store=565.869140625). Will move normally and eat
-->8-Sheep (y=95, x=89, store=565.869140625) before normal moving and eating
-->8-Sheep (y=94, x=88, store=575.869140625) after normal moving and eating
___e2________ 8-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=247, x=40, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=247, x=40, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
---> 0-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=247, x=40, store=100) before normal moving
-->else1 ends: 0-Wolf (y=248, x=41, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=106, x=271, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=106, x=271, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
---> 1-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=106, x=271, store=300) before normal moving
-->else1 ends: 1-Wolf (y=107, x=270, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=226, x=116, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=226, x=116, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
---> 2-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=226, x=116, store=200) before normal moving
-->else1 ends: 2-Wolf (y=227, x=115, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=70, x=6, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=70, x=6, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
---> 3-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=70, x=6, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=71, x=7, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=46, x=14, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=46, x=14, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
---> 4-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=46, x=14, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=45, x=15, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=48, x=3, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=48, x=3, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
---> 5-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=48, x=3, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=47, x=4, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=54, x=6, store=836.0) --------
--> if and elif not satisfied
--> 6-Wolf has > Min_energy(500) store (y=54, x=6, store=836.0) but Random < bf_e/2(0.25). So will move normally.
--->else3 begins: 6-Wolf (y=54, x=6, store=836.0) before normal moving.
--->else3 begins: 6-Wolf (y=53, x=5, store=836.0) after normal moving.
....e3_______ 6-Wolf moved normally_______
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 163 ************

-> ------------ 0-Sheep initialised with (y=88, x=83, store=487.2160339355469) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=88, x=83, store=487.2160339355469). Will move normally and eat
-->0-Sheep (y=88, x=83, store=487.2160339355469) before normal moving and eating
-->0-Sheep (y=89, x=84, store=497.2160339355469) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=75, x=117, store=571.2956237792969) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=75, x=117, store=571.2956237792969). Will move normally and eat
-->1-Sheep (y=75, x=117, store=571.2956237792969) before normal moving and eating
-->1-Sheep (y=76, x=118, store=581.2956237792969) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=94, x=82, store=497.2160339355469) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=94, x=82, store=497.2160339355469). Will move normally and eat
-->2-Sheep (y=94, x=82, store=497.2160339355469) before normal moving and eating
-->2-Sheep (y=95, x=83, store=507.2160339355469) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=76, x=114, store=436.7741394042969) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=76, x=114, store=436.7741394042969). Will move normally and eat
-->3-Sheep (y=76, x=114, store=436.7741394042969) before normal moving and eating
-->3-Sheep (y=77, x=113, store=446.7741394042969) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=71, x=118, store=581.2956237792969) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=71, x=118, store=581.2956237792969). Will move normally and eat
-->4-Sheep (y=71, x=118, store=581.2956237792969) before normal moving and eating
-->4-Sheep (y=70, x=117, store=591.2956237792969) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=92, x=84, store=353.65936279296875) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=92, x=84, store=353.65936279296875). Will move normally and eat
-->5-Sheep (y=92, x=84, store=353.65936279296875) before normal moving and eating
-->5-Sheep (y=91, x=85, store=363.65936279296875) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=98, x=91, store=565.869140625) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=98, x=91, store=565.869140625). Will move normally and eat
-->6-Sheep (y=98, x=91, store=565.869140625) before normal moving and eating
-->6-Sheep (y=99, x=92, store=575.869140625) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=72, x=115, store=801.2794494628906) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store > Min_ernergy(600) (y=72, x=115, store=801.2794494628906).
--> 7-Sheep looping with 0-Sheep.
-> NO CS Found.
-> 7-Sheep (y=72, x=115, store=801.2794494628906) before normally moving and eating.
-> 7-Sheep (y=71, x=114, store=811.2794494628906) after normally moving and eating.
___e1________ 7-Sheep moved normally and ate ___________


-> ------------ 8-Sheep initialised with (y=94, x=88, store=575.869140625) -----------
--> 8-Sheep looping with 0-Wolf.
--> 8-Sheep looping with 1-Wolf.
--> 8-Sheep looping with 2-Wolf.
--> 8-Sheep looping with 3-Wolf.
--> 8-Sheep looping with 4-Wolf.
--> 8-Sheep looping with 5-Wolf.
--> 8-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->8-Sheep has Store < Min_ernergy(600) (y=94, x=88, store=575.869140625). Will move normally and eat
-->8-Sheep (y=94, x=88, store=575.869140625) before normal moving and eating
-->8-Sheep (y=93, x=87, store=585.869140625) after normal moving and eating
___e2________ 8-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=248, x=41, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=248, x=41, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
---> 0-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=248, x=41, store=100) before normal moving
-->else1 ends: 0-Wolf (y=247, x=40, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=107, x=270, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=107, x=270, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
---> 1-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=107, x=270, store=300) before normal moving
-->else1 ends: 1-Wolf (y=108, x=269, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=227, x=115, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=227, x=115, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
---> 2-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=227, x=115, store=200) before normal moving
-->else1 ends: 2-Wolf (y=226, x=116, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=71, x=7, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=71, x=7, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
---> 3-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=71, x=7, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=72, x=8, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=45, x=15, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=45, x=15, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
---> 4-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=45, x=15, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=46, x=16, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=47, x=4, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=47, x=4, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
---> 5-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=47, x=4, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=46, x=3, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=53, x=5, store=836.0) --------
--> if and elif not satisfied
--> 6-Wolf has > Min_energy(500) store (y=53, x=5, store=836.0) but Random < bf_e/2(0.25). So will move normally.
--->else3 begins: 6-Wolf (y=53, x=5, store=836.0) before normal moving.
--->else3 begins: 6-Wolf (y=54, x=6, store=836.0) after normal moving.
....e3_______ 6-Wolf moved normally_______
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 164 ************

-> ------------ 0-Sheep initialised with (y=89, x=84, store=497.2160339355469) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=89, x=84, store=497.2160339355469). Will move normally and eat
-->0-Sheep (y=89, x=84, store=497.2160339355469) before normal moving and eating
-->0-Sheep (y=88, x=85, store=507.2160339355469) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=76, x=118, store=581.2956237792969) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=76, x=118, store=581.2956237792969). Will move normally and eat
-->1-Sheep (y=76, x=118, store=581.2956237792969) before normal moving and eating
-->1-Sheep (y=75, x=117, store=591.2956237792969) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=95, x=83, store=507.2160339355469) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=95, x=83, store=507.2160339355469). Will move normally and eat
-->2-Sheep (y=95, x=83, store=507.2160339355469) before normal moving and eating
-->2-Sheep (y=96, x=84, store=517.2160339355469) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=77, x=113, store=446.7741394042969) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=77, x=113, store=446.7741394042969). Will move normally and eat
-->3-Sheep (y=77, x=113, store=446.7741394042969) before normal moving and eating
-->3-Sheep (y=78, x=112, store=456.7741394042969) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=70, x=117, store=591.2956237792969) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=70, x=117, store=591.2956237792969). Will move normally and eat
-->4-Sheep (y=70, x=117, store=591.2956237792969) before normal moving and eating
-->4-Sheep (y=69, x=116, store=601.2956237792969) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=91, x=85, store=363.65936279296875) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=91, x=85, store=363.65936279296875). Will move normally and eat
-->5-Sheep (y=91, x=85, store=363.65936279296875) before normal moving and eating
-->5-Sheep (y=92, x=84, store=373.65936279296875) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=99, x=92, store=575.869140625) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=99, x=92, store=575.869140625). Will move normally and eat
-->6-Sheep (y=99, x=92, store=575.869140625) before normal moving and eating
-->6-Sheep (y=98, x=93, store=585.869140625) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=71, x=114, store=811.2794494628906) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store > Min_ernergy(600) (y=71, x=114, store=811.2794494628906).
--> 7-Sheep looping with 0-Sheep.
-> NO CS Found.
-> 7-Sheep (y=71, x=114, store=811.2794494628906) before normally moving and eating.
-> 7-Sheep (y=70, x=113, store=821.2794494628906) after normally moving and eating.
___e1________ 7-Sheep moved normally and ate ___________


-> ------------ 8-Sheep initialised with (y=93, x=87, store=585.869140625) -----------
--> 8-Sheep looping with 0-Wolf.
--> 8-Sheep looping with 1-Wolf.
--> 8-Sheep looping with 2-Wolf.
--> 8-Sheep looping with 3-Wolf.
--> 8-Sheep looping with 4-Wolf.
--> 8-Sheep looping with 5-Wolf.
--> 8-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->8-Sheep has Store < Min_ernergy(600) (y=93, x=87, store=585.869140625). Will move normally and eat
-->8-Sheep (y=93, x=87, store=585.869140625) before normal moving and eating
-->8-Sheep (y=94, x=88, store=595.869140625) after normal moving and eating
___e2________ 8-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=247, x=40, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=247, x=40, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
---> 0-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=247, x=40, store=100) before normal moving
-->else1 ends: 0-Wolf (y=248, x=41, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=108, x=269, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=108, x=269, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
---> 1-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=108, x=269, store=300) before normal moving
-->else1 ends: 1-Wolf (y=109, x=270, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=226, x=116, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=226, x=116, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
---> 2-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=226, x=116, store=200) before normal moving
-->else1 ends: 2-Wolf (y=225, x=117, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=72, x=8, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=72, x=8, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
---> 3-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=72, x=8, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=73, x=7, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=46, x=16, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=46, x=16, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
---> 4-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=46, x=16, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=45, x=17, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=46, x=3, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=46, x=3, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
---> 5-Wolf looping with 8-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=46, x=3, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=45, x=2, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=54, x=6, store=836.0) --------
--> 6-Wolf has > 500 store (y=54, x=6, store=836.0) and Random >= 0.5. so will try to find CW to move closer or breed/fight if within AD(5).
-> No CW found. although store >500 and p>=0.5!
--->else2 begins: 6-Wolf (y=54, x=6, store=836.0) before normal moving.
--->else2 begins: 6-Wolf (y=53, x=7, store=836.0) after normal moving.
.... el2 _______  6-Wolf moved normally _______ 
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 165 ************

-> ------------ 0-Sheep initialised with (y=88, x=85, store=507.2160339355469) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=88, x=85, store=507.2160339355469). Will move normally and eat
-->0-Sheep (y=88, x=85, store=507.2160339355469) before normal moving and eating
-->0-Sheep (y=89, x=84, store=517.2160339355469) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=75, x=117, store=591.2956237792969) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=75, x=117, store=591.2956237792969). Will move normally and eat
-->1-Sheep (y=75, x=117, store=591.2956237792969) before normal moving and eating
-->1-Sheep (y=76, x=116, store=601.2956237792969) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=96, x=84, store=517.2160339355469) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=96, x=84, store=517.2160339355469). Will move normally and eat
-->2-Sheep (y=96, x=84, store=517.2160339355469) before normal moving and eating
-->2-Sheep (y=97, x=85, store=527.2160339355469) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=78, x=112, store=456.7741394042969) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=78, x=112, store=456.7741394042969). Will move normally and eat
-->3-Sheep (y=78, x=112, store=456.7741394042969) before normal moving and eating
-->3-Sheep (y=77, x=111, store=466.7741394042969) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=69, x=116, store=601.2956237792969) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store > Min_ernergy(600) (y=69, x=116, store=601.2956237792969).
--> 4-Sheep looping with 0-Sheep.
--> 4-Sheep looping with 1-Sheep.
--> 4-Sheep looping with 2-Sheep.
----> D <=AD. Sheep Breeding/Sharing proximity of 3.1622776601683795(<=5) entered by CS 4-Sheep (y=69, x=116, store=601.2956237792969) with CS 2-Sheep (y=70, x=113, store=821.2794494628906).
----->4-Sheep (y=69, x=116, store=601.2956237792969) and CS 2-Sheep (y=70, x=113, store=821.2794494628906 have > Min_energy (600) store. So they will try breeding if p>0.5
------>1.A. Random >0.5. So the sheep will breed.
------> 4-Sheep (y=69, x=116, store=601.2956237792969) before breeding with CS 2-Sheep (y=70, x=113, store=821.2794494628906).
------> Sheep Breed = True
------> 4-Sheep (y=69, x=116, store=355.6437683105469) after breeding with CS 2-Sheep (y=70, x=113, store=355.6437683105469).
_____________ 4-Sheep Mated SUCCESSFULLY with CS 2-Sheep ____________
_______ Breeding=True, Failed breeding=False, Share=False for 4-Sheep __________

-> ------------ 5-Sheep initialised with (y=92, x=84, store=373.65936279296875) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=92, x=84, store=373.65936279296875). Will move normally and eat
-->5-Sheep (y=92, x=84, store=373.65936279296875) before normal moving and eating
-->5-Sheep (y=91, x=85, store=383.65936279296875) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=98, x=93, store=585.869140625) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=98, x=93, store=585.869140625). Will move normally and eat
-->6-Sheep (y=98, x=93, store=585.869140625) before normal moving and eating
-->6-Sheep (y=97, x=94, store=595.869140625) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=70, x=113, store=355.6437683105469) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=70, x=113, store=355.6437683105469). Will move normally and eat
-->7-Sheep (y=70, x=113, store=355.6437683105469) before normal moving and eating
-->7-Sheep (y=69, x=112, store=365.6437683105469) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________


-> ------------ 8-Sheep initialised with (y=94, x=88, store=595.869140625) -----------
--> 8-Sheep looping with 0-Wolf.
--> 8-Sheep looping with 1-Wolf.
--> 8-Sheep looping with 2-Wolf.
--> 8-Sheep looping with 3-Wolf.
--> 8-Sheep looping with 4-Wolf.
--> 8-Sheep looping with 5-Wolf.
--> 8-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->8-Sheep has Store < Min_ernergy(600) (y=94, x=88, store=595.869140625). Will move normally and eat
-->8-Sheep (y=94, x=88, store=595.869140625) before normal moving and eating
-->8-Sheep (y=93, x=87, store=605.869140625) after normal moving and eating
___e2________ 8-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=248, x=41, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=248, x=41, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
---> 0-Wolf looping with 8-Sheep
---> 0-Wolf looping with 9-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=248, x=41, store=100) before normal moving
-->else1 ends: 0-Wolf (y=249, x=42, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=109, x=270, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=109, x=270, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
---> 1-Wolf looping with 8-Sheep
---> 1-Wolf looping with 9-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=109, x=270, store=300) before normal moving
-->else1 ends: 1-Wolf (y=108, x=269, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=225, x=117, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=225, x=117, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
---> 2-Wolf looping with 8-Sheep
---> 2-Wolf looping with 9-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=225, x=117, store=200) before normal moving
-->else1 ends: 2-Wolf (y=226, x=116, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=73, x=7, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=73, x=7, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
---> 3-Wolf looping with 8-Sheep
---> 3-Wolf looping with 9-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=73, x=7, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=72, x=6, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=45, x=17, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=45, x=17, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
---> 4-Wolf looping with 8-Sheep
---> 4-Wolf looping with 9-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=45, x=17, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=44, x=16, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=45, x=2, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=45, x=2, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
---> 5-Wolf looping with 8-Sheep
---> 5-Wolf looping with 9-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=45, x=2, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=44, x=3, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=53, x=7, store=836.0) --------
--> 6-Wolf has > 500 store (y=53, x=7, store=836.0) and Random >= 0.5. so will try to find CW to move closer or breed/fight if within AD(5).
-> No CW found. although store >500 and p>=0.5!
--->else2 begins: 6-Wolf (y=53, x=7, store=836.0) before normal moving.
--->else2 begins: 6-Wolf (y=54, x=6, store=836.0) after normal moving.
.... el2 _______  6-Wolf moved normally _______ 
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 166 ************

-> ------------ 0-Sheep initialised with (y=89, x=84, store=517.2160339355469) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=89, x=84, store=517.2160339355469). Will move normally and eat
-->0-Sheep (y=89, x=84, store=517.2160339355469) before normal moving and eating
-->0-Sheep (y=88, x=83, store=527.2160339355469) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=76, x=116, store=601.2956237792969) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store > Min_ernergy(600) (y=76, x=116, store=601.2956237792969).
--> 1-Sheep looping with 0-Sheep.
--> 1-Sheep looping with 1-Sheep.
----> ---- (AD < D < MD).
----> Min distance=5.0990195135927845 for 1-Sheep (y=76, x=116, store=601.2956237792969) with 1-Sheep (y=77, x=111, store=466.7741394042969).
--> 1-Sheep looping with 2-Sheep.
--> 1-Sheep looping with 3-Sheep.
--> 1-Sheep looping with 4-Sheep.
--> 1-Sheep looping with 5-Sheep.
--> 1-Sheep looping with 6-Sheep.
--> 1-Sheep looping with 7-Sheep.
->CS Found!
-> 1-Sheep (y=76, x=116, store=601.2956237792969) before moving closer (while eating) to CS-Sheep: (y=77, x=111, store=466.7741394042969).
-> 1-Wolf (y=76, x=113, store=611.2956237792969) after moving closer (while eating) to CS-Sheep: (y=77, x=111, store=466.7741394042969).
___________ 1-Sheep moved closer CS___________


-> ------------ 2-Sheep initialised with (y=97, x=85, store=527.2160339355469) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=97, x=85, store=527.2160339355469). Will move normally and eat
-->2-Sheep (y=97, x=85, store=527.2160339355469) before normal moving and eating
-->2-Sheep (y=98, x=86, store=537.2160339355469) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=77, x=111, store=466.7741394042969) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=77, x=111, store=466.7741394042969). Will move normally and eat
-->3-Sheep (y=77, x=111, store=466.7741394042969) before normal moving and eating
-->3-Sheep (y=76, x=112, store=476.7741394042969) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=69, x=116, store=355.6437683105469) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=69, x=116, store=355.6437683105469). Will move normally and eat
-->4-Sheep (y=69, x=116, store=355.6437683105469) before normal moving and eating
-->4-Sheep (y=70, x=117, store=365.6437683105469) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=91, x=85, store=383.65936279296875) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=91, x=85, store=383.65936279296875). Will move normally and eat
-->5-Sheep (y=91, x=85, store=383.65936279296875) before normal moving and eating
-->5-Sheep (y=90, x=86, store=393.65936279296875) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=97, x=94, store=595.869140625) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=97, x=94, store=595.869140625). Will move normally and eat
-->6-Sheep (y=97, x=94, store=595.869140625) before normal moving and eating
-->6-Sheep (y=98, x=93, store=605.869140625) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=69, x=112, store=365.6437683105469) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=69, x=112, store=365.6437683105469). Will move normally and eat
-->7-Sheep (y=69, x=112, store=365.6437683105469) before normal moving and eating
-->7-Sheep (y=68, x=111, store=375.6437683105469) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________


-> ------------ 8-Sheep initialised with (y=93, x=87, store=605.869140625) -----------
--> 8-Sheep looping with 0-Wolf.
--> 8-Sheep looping with 1-Wolf.
--> 8-Sheep looping with 2-Wolf.
--> 8-Sheep looping with 3-Wolf.
--> 8-Sheep looping with 4-Wolf.
--> 8-Sheep looping with 5-Wolf.
--> 8-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->8-Sheep has Store > Min_ernergy(600) (y=93, x=87, store=605.869140625).
--> 8-Sheep looping with 0-Sheep.
-> NO CS Found.
-> 8-Sheep (y=93, x=87, store=605.869140625) before normally moving and eating.
-> 8-Sheep (y=92, x=88, store=615.869140625) after normally moving and eating.
___e1________ 8-Sheep moved normally and ate ___________


-> ------------ 9-Sheep initialised with (y=79, x=126, store=400) -----------
--> 9-Sheep looping with 0-Wolf.
--> 9-Sheep looping with 1-Wolf.
--> 9-Sheep looping with 2-Wolf.
--> 9-Sheep looping with 3-Wolf.
--> 9-Sheep looping with 4-Wolf.
--> 9-Sheep looping with 5-Wolf.
--> 9-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->9-Sheep has Store < Min_ernergy(600) (y=79, x=126, store=400). Will move normally and eat
-->9-Sheep (y=79, x=126, store=400) before normal moving and eating
-->9-Sheep (y=80, x=127, store=410) after normal moving and eating
___e2________ 9-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=249, x=42, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=249, x=42, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
---> 0-Wolf looping with 8-Sheep
---> 0-Wolf looping with 9-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=249, x=42, store=100) before normal moving
-->else1 ends: 0-Wolf (y=248, x=43, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=108, x=269, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=108, x=269, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
---> 1-Wolf looping with 8-Sheep
---> 1-Wolf looping with 9-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=108, x=269, store=300) before normal moving
-->else1 ends: 1-Wolf (y=107, x=270, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=226, x=116, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=226, x=116, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
---> 2-Wolf looping with 8-Sheep
---> 2-Wolf looping with 9-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=226, x=116, store=200) before normal moving
-->else1 ends: 2-Wolf (y=227, x=117, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=72, x=6, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=72, x=6, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
---> 3-Wolf looping with 8-Sheep
---> 3-Wolf looping with 9-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=72, x=6, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=71, x=7, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=44, x=16, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=44, x=16, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
---> 4-Wolf looping with 8-Sheep
---> 4-Wolf looping with 9-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=44, x=16, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=45, x=17, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=44, x=3, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=44, x=3, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
---> 5-Wolf looping with 8-Sheep
---> 5-Wolf looping with 9-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=44, x=3, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=45, x=2, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=54, x=6, store=836.0) --------
--> if and elif not satisfied
--> 6-Wolf has > Min_energy(500) store (y=54, x=6, store=836.0) but Random < bf_e/2(0.25). So will move normally.
--->else3 begins: 6-Wolf (y=54, x=6, store=836.0) before normal moving.
--->else3 begins: 6-Wolf (y=55, x=5, store=836.0) after normal moving.
....e3_______ 6-Wolf moved normally_______
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 167 ************

-> ------------ 0-Sheep initialised with (y=88, x=83, store=527.2160339355469) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=88, x=83, store=527.2160339355469). Will move normally and eat
-->0-Sheep (y=88, x=83, store=527.2160339355469) before normal moving and eating
-->0-Sheep (y=89, x=82, store=537.2160339355469) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=76, x=113, store=611.2956237792969) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store > Min_ernergy(600) (y=76, x=113, store=611.2956237792969).
--> 1-Sheep looping with 0-Sheep.
--> 1-Sheep looping with 1-Sheep.
----> D <=AD. Sheep Breeding/Sharing proximity of 1.0(<=5) entered by CS 1-Sheep (y=76, x=113, store=611.2956237792969) with CS 1-Sheep (y=76, x=112, store=476.7741394042969).
-----> 1-Sheep (y=76, x=113, store=611.2956237792969) and CS 1-Sheep (y=76, x=112, store=476.7741394042969 will not mate as CS 1-Sheep store <600. They will share resource to become average.
-----> Shared resources = True
-----> 1-Sheep (y=76, x=113, store=544.0348815917969) and CS 1-Sheep (y=76, x=112, store=544.0348815917969) after sharing resources!
_____________ 1-Sheep and CS 1-Sheep shared resources ____________
_______ Breeding=False, Failed breeding=False, Share=True for 1-Sheep __________

-> ------------ 2-Sheep initialised with (y=98, x=86, store=537.2160339355469) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=98, x=86, store=537.2160339355469). Will move normally and eat
-->2-Sheep (y=98, x=86, store=537.2160339355469) before normal moving and eating
-->2-Sheep (y=97, x=85, store=547.2160339355469) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=76, x=112, store=544.0348815917969) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=76, x=112, store=544.0348815917969). Will move normally and eat
-->3-Sheep (y=76, x=112, store=544.0348815917969) before normal moving and eating
-->3-Sheep (y=77, x=113, store=554.0348815917969) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=70, x=117, store=365.6437683105469) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=70, x=117, store=365.6437683105469). Will move normally and eat
-->4-Sheep (y=70, x=117, store=365.6437683105469) before normal moving and eating
-->4-Sheep (y=69, x=116, store=375.6437683105469) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=90, x=86, store=393.65936279296875) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=90, x=86, store=393.65936279296875). Will move normally and eat
-->5-Sheep (y=90, x=86, store=393.65936279296875) before normal moving and eating
-->5-Sheep (y=89, x=87, store=403.65936279296875) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=98, x=93, store=605.869140625) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store > Min_ernergy(600) (y=98, x=93, store=605.869140625).
--> 6-Sheep looping with 0-Sheep.
--> 6-Sheep looping with 1-Sheep.
----> ---- (AD < D < MD).
----> Min distance=7.810249675906654 for 6-Sheep (y=98, x=93, store=605.869140625) with 1-Sheep (y=92, x=88, store=615.869140625).
--> 6-Sheep looping with 2-Sheep.
->CS Found!
-> 6-Sheep (y=98, x=93, store=605.869140625) before moving closer (while eating) to CS-Sheep: (y=92, x=88, store=615.869140625).
-> 6-Wolf (y=95, x=90, store=615.869140625) after moving closer (while eating) to CS-Sheep: (y=92, x=88, store=615.869140625).
___________ 6-Sheep moved closer CS___________


-> ------------ 7-Sheep initialised with (y=68, x=111, store=375.6437683105469) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=68, x=111, store=375.6437683105469). Will move normally and eat
-->7-Sheep (y=68, x=111, store=375.6437683105469) before normal moving and eating
-->7-Sheep (y=69, x=112, store=385.6437683105469) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________


-> ------------ 8-Sheep initialised with (y=92, x=88, store=615.869140625) -----------
--> 8-Sheep looping with 0-Wolf.
--> 8-Sheep looping with 1-Wolf.
--> 8-Sheep looping with 2-Wolf.
--> 8-Sheep looping with 3-Wolf.
--> 8-Sheep looping with 4-Wolf.
--> 8-Sheep looping with 5-Wolf.
--> 8-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->8-Sheep has Store > Min_ernergy(600) (y=92, x=88, store=615.869140625).
--> 8-Sheep looping with 0-Sheep.
-> NO CS Found.
-> 8-Sheep (y=92, x=88, store=615.869140625) before normally moving and eating.
-> 8-Sheep (y=93, x=87, store=625.869140625) after normally moving and eating.
___e1________ 8-Sheep moved normally and ate ___________


-> ------------ 9-Sheep initialised with (y=80, x=127, store=410) -----------
--> 9-Sheep looping with 0-Wolf.
--> 9-Sheep looping with 1-Wolf.
--> 9-Sheep looping with 2-Wolf.
--> 9-Sheep looping with 3-Wolf.
--> 9-Sheep looping with 4-Wolf.
--> 9-Sheep looping with 5-Wolf.
--> 9-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->9-Sheep has Store < Min_ernergy(600) (y=80, x=127, store=410). Will move normally and eat
-->9-Sheep (y=80, x=127, store=410) before normal moving and eating
-->9-Sheep (y=79, x=128, store=420) after normal moving and eating
___e2________ 9-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=248, x=43, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=248, x=43, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
---> 0-Wolf looping with 8-Sheep
---> 0-Wolf looping with 9-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=248, x=43, store=100) before normal moving
-->else1 ends: 0-Wolf (y=249, x=44, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=107, x=270, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=107, x=270, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
---> 1-Wolf looping with 8-Sheep
---> 1-Wolf looping with 9-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=107, x=270, store=300) before normal moving
-->else1 ends: 1-Wolf (y=106, x=269, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=227, x=117, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=227, x=117, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
---> 2-Wolf looping with 8-Sheep
---> 2-Wolf looping with 9-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=227, x=117, store=200) before normal moving
-->else1 ends: 2-Wolf (y=226, x=118, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=71, x=7, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=71, x=7, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
---> 3-Wolf looping with 8-Sheep
---> 3-Wolf looping with 9-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=71, x=7, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=72, x=6, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=45, x=17, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=45, x=17, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
---> 4-Wolf looping with 8-Sheep
---> 4-Wolf looping with 9-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=45, x=17, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=46, x=18, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=45, x=2, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=45, x=2, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
---> 5-Wolf looping with 8-Sheep
---> 5-Wolf looping with 9-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=45, x=2, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=44, x=3, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=55, x=5, store=836.0) --------
--> 6-Wolf has > 500 store (y=55, x=5, store=836.0) and Random >= 0.5. so will try to find CW to move closer or breed/fight if within AD(5).
-> No CW found. although store >500 and p>=0.5!
--->else2 begins: 6-Wolf (y=55, x=5, store=836.0) before normal moving.
--->else2 begins: 6-Wolf (y=54, x=6, store=836.0) after normal moving.
.... el2 _______  6-Wolf moved normally _______ 
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 168 ************

-> ------------ 0-Sheep initialised with (y=89, x=82, store=537.2160339355469) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=89, x=82, store=537.2160339355469). Will move normally and eat
-->0-Sheep (y=89, x=82, store=537.2160339355469) before normal moving and eating
-->0-Sheep (y=90, x=83, store=547.2160339355469) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=76, x=113, store=544.0348815917969) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=76, x=113, store=544.0348815917969). Will move normally and eat
-->1-Sheep (y=76, x=113, store=544.0348815917969) before normal moving and eating
-->1-Sheep (y=75, x=114, store=554.0348815917969) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=97, x=85, store=547.2160339355469) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=97, x=85, store=547.2160339355469). Will move normally and eat
-->2-Sheep (y=97, x=85, store=547.2160339355469) before normal moving and eating
-->2-Sheep (y=98, x=84, store=557.2160339355469) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=77, x=113, store=554.0348815917969) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=77, x=113, store=554.0348815917969). Will move normally and eat
-->3-Sheep (y=77, x=113, store=554.0348815917969) before normal moving and eating
-->3-Sheep (y=76, x=112, store=564.0348815917969) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=69, x=116, store=375.6437683105469) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=69, x=116, store=375.6437683105469). Will move normally and eat
-->4-Sheep (y=69, x=116, store=375.6437683105469) before normal moving and eating
-->4-Sheep (y=68, x=117, store=385.6437683105469) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=89, x=87, store=403.65936279296875) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=89, x=87, store=403.65936279296875). Will move normally and eat
-->5-Sheep (y=89, x=87, store=403.65936279296875) before normal moving and eating
-->5-Sheep (y=90, x=88, store=413.65936279296875) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=95, x=90, store=615.869140625) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store > Min_ernergy(600) (y=95, x=90, store=615.869140625).
--> 6-Sheep looping with 0-Sheep.
--> 6-Sheep looping with 1-Sheep.
----> D <=AD. Sheep Breeding/Sharing proximity of 3.605551275463989(<=5) entered by CS 6-Sheep (y=95, x=90, store=615.869140625) with CS 1-Sheep (y=93, x=87, store=625.869140625).
----->6-Sheep (y=95, x=90, store=615.869140625) and CS 1-Sheep (y=93, x=87, store=625.869140625 have > Min_energy (600) store. So they will try breeding if p>0.5
------>1.A. Random >0.5. So the sheep will breed.
------> 6-Sheep (y=95, x=90, store=615.869140625) before breeding with CS 1-Sheep (y=93, x=87, store=625.869140625).
------> Sheep Breed = True
------> 6-Sheep (y=95, x=90, store=310.4345703125) after breeding with CS 1-Sheep (y=93, x=87, store=310.4345703125).
_____________ 6-Sheep Mated SUCCESSFULLY with CS 1-Sheep ____________
_______ Breeding=True, Failed breeding=False, Share=False for 6-Sheep __________

-> ------------ 7-Sheep initialised with (y=69, x=112, store=385.6437683105469) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=69, x=112, store=385.6437683105469). Will move normally and eat
-->7-Sheep (y=69, x=112, store=385.6437683105469) before normal moving and eating
-->7-Sheep (y=68, x=111, store=395.6437683105469) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________


-> ------------ 8-Sheep initialised with (y=93, x=87, store=310.4345703125) -----------
--> 8-Sheep looping with 0-Wolf.
--> 8-Sheep looping with 1-Wolf.
--> 8-Sheep looping with 2-Wolf.
--> 8-Sheep looping with 3-Wolf.
--> 8-Sheep looping with 4-Wolf.
--> 8-Sheep looping with 5-Wolf.
--> 8-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->8-Sheep has Store < Min_ernergy(600) (y=93, x=87, store=310.4345703125). Will move normally and eat
-->8-Sheep (y=93, x=87, store=310.4345703125) before normal moving and eating
-->8-Sheep (y=94, x=86, store=320.4345703125) after normal moving and eating
___e2________ 8-Sheep moved normally and ate ___________


-> ------------ 9-Sheep initialised with (y=79, x=128, store=420) -----------
--> 9-Sheep looping with 0-Wolf.
--> 9-Sheep looping with 1-Wolf.
--> 9-Sheep looping with 2-Wolf.
--> 9-Sheep looping with 3-Wolf.
--> 9-Sheep looping with 4-Wolf.
--> 9-Sheep looping with 5-Wolf.
--> 9-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->9-Sheep has Store < Min_ernergy(600) (y=79, x=128, store=420). Will move normally and eat
-->9-Sheep (y=79, x=128, store=420) before normal moving and eating
-->9-Sheep (y=78, x=127, store=430) after normal moving and eating
___e2________ 9-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=249, x=44, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=249, x=44, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
---> 0-Wolf looping with 8-Sheep
---> 0-Wolf looping with 9-Sheep
---> 0-Wolf looping with 10-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=249, x=44, store=100) before normal moving
-->else1 ends: 0-Wolf (y=250, x=45, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=106, x=269, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=106, x=269, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
---> 1-Wolf looping with 8-Sheep
---> 1-Wolf looping with 9-Sheep
---> 1-Wolf looping with 10-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=106, x=269, store=300) before normal moving
-->else1 ends: 1-Wolf (y=107, x=270, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=226, x=118, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=226, x=118, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
---> 2-Wolf looping with 8-Sheep
---> 2-Wolf looping with 9-Sheep
---> 2-Wolf looping with 10-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=226, x=118, store=200) before normal moving
-->else1 ends: 2-Wolf (y=227, x=119, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=72, x=6, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=72, x=6, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
---> 3-Wolf looping with 8-Sheep
---> 3-Wolf looping with 9-Sheep
---> 3-Wolf looping with 10-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=72, x=6, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=71, x=7, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=46, x=18, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=46, x=18, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
---> 4-Wolf looping with 8-Sheep
---> 4-Wolf looping with 9-Sheep
---> 4-Wolf looping with 10-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=46, x=18, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=47, x=17, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=44, x=3, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=44, x=3, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
---> 5-Wolf looping with 8-Sheep
---> 5-Wolf looping with 9-Sheep
---> 5-Wolf looping with 10-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=44, x=3, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=43, x=2, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=54, x=6, store=836.0) --------
--> 6-Wolf has > 500 store (y=54, x=6, store=836.0) and Random >= 0.5. so will try to find CW to move closer or breed/fight if within AD(5).
-> No CW found. although store >500 and p>=0.5!
--->else2 begins: 6-Wolf (y=54, x=6, store=836.0) before normal moving.
--->else2 begins: 6-Wolf (y=53, x=7, store=836.0) after normal moving.
.... el2 _______  6-Wolf moved normally _______ 
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 169 ************

-> ------------ 0-Sheep initialised with (y=90, x=83, store=547.2160339355469) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=90, x=83, store=547.2160339355469). Will move normally and eat
-->0-Sheep (y=90, x=83, store=547.2160339355469) before normal moving and eating
-->0-Sheep (y=89, x=82, store=557.2160339355469) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=75, x=114, store=554.0348815917969) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=75, x=114, store=554.0348815917969). Will move normally and eat
-->1-Sheep (y=75, x=114, store=554.0348815917969) before normal moving and eating
-->1-Sheep (y=74, x=115, store=564.0348815917969) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=98, x=84, store=557.2160339355469) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=98, x=84, store=557.2160339355469). Will move normally and eat
-->2-Sheep (y=98, x=84, store=557.2160339355469) before normal moving and eating
-->2-Sheep (y=97, x=83, store=567.2160339355469) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=76, x=112, store=564.0348815917969) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=76, x=112, store=564.0348815917969). Will move normally and eat
-->3-Sheep (y=76, x=112, store=564.0348815917969) before normal moving and eating
-->3-Sheep (y=75, x=113, store=574.0348815917969) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=68, x=117, store=385.6437683105469) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=68, x=117, store=385.6437683105469). Will move normally and eat
-->4-Sheep (y=68, x=117, store=385.6437683105469) before normal moving and eating
-->4-Sheep (y=69, x=118, store=395.6437683105469) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=90, x=88, store=413.65936279296875) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=90, x=88, store=413.65936279296875). Will move normally and eat
-->5-Sheep (y=90, x=88, store=413.65936279296875) before normal moving and eating
-->5-Sheep (y=91, x=89, store=423.65936279296875) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=95, x=90, store=310.4345703125) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=95, x=90, store=310.4345703125). Will move normally and eat
-->6-Sheep (y=95, x=90, store=310.4345703125) before normal moving and eating
-->6-Sheep (y=94, x=89, store=320.4345703125) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=68, x=111, store=395.6437683105469) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=68, x=111, store=395.6437683105469). Will move normally and eat
-->7-Sheep (y=68, x=111, store=395.6437683105469) before normal moving and eating
-->7-Sheep (y=69, x=112, store=405.6437683105469) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________


-> ------------ 8-Sheep initialised with (y=94, x=86, store=320.4345703125) -----------
--> 8-Sheep looping with 0-Wolf.
--> 8-Sheep looping with 1-Wolf.
--> 8-Sheep looping with 2-Wolf.
--> 8-Sheep looping with 3-Wolf.
--> 8-Sheep looping with 4-Wolf.
--> 8-Sheep looping with 5-Wolf.
--> 8-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->8-Sheep has Store < Min_ernergy(600) (y=94, x=86, store=320.4345703125). Will move normally and eat
-->8-Sheep (y=94, x=86, store=320.4345703125) before normal moving and eating
-->8-Sheep (y=95, x=85, store=330.4345703125) after normal moving and eating
___e2________ 8-Sheep moved normally and ate ___________


-> ------------ 9-Sheep initialised with (y=78, x=127, store=430) -----------
--> 9-Sheep looping with 0-Wolf.
--> 9-Sheep looping with 1-Wolf.
--> 9-Sheep looping with 2-Wolf.
--> 9-Sheep looping with 3-Wolf.
--> 9-Sheep looping with 4-Wolf.
--> 9-Sheep looping with 5-Wolf.
--> 9-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->9-Sheep has Store < Min_ernergy(600) (y=78, x=127, store=430). Will move normally and eat
-->9-Sheep (y=78, x=127, store=430) before normal moving and eating
-->9-Sheep (y=77, x=128, store=440) after normal moving and eating
___e2________ 9-Sheep moved normally and ate ___________


-> ------------ 10-Sheep initialised with (y=105, x=100, store=300) -----------
--> 10-Sheep looping with 0-Wolf.
--> 10-Sheep looping with 1-Wolf.
--> 10-Sheep looping with 2-Wolf.
--> 10-Sheep looping with 3-Wolf.
--> 10-Sheep looping with 4-Wolf.
--> 10-Sheep looping with 5-Wolf.
--> 10-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->10-Sheep has Store < Min_ernergy(600) (y=105, x=100, store=300). Will move normally and eat
-->10-Sheep (y=105, x=100, store=300) before normal moving and eating
-->10-Sheep (y=106, x=101, store=310) after normal moving and eating
___e2________ 10-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=250, x=45, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=250, x=45, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
---> 0-Wolf looping with 8-Sheep
---> 0-Wolf looping with 9-Sheep
---> 0-Wolf looping with 10-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=250, x=45, store=100) before normal moving
-->else1 ends: 0-Wolf (y=251, x=46, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=107, x=270, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=107, x=270, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
---> 1-Wolf looping with 8-Sheep
---> 1-Wolf looping with 9-Sheep
---> 1-Wolf looping with 10-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=107, x=270, store=300) before normal moving
-->else1 ends: 1-Wolf (y=106, x=271, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=227, x=119, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=227, x=119, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
---> 2-Wolf looping with 8-Sheep
---> 2-Wolf looping with 9-Sheep
---> 2-Wolf looping with 10-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=227, x=119, store=200) before normal moving
-->else1 ends: 2-Wolf (y=228, x=118, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=71, x=7, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=71, x=7, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
---> 3-Wolf looping with 8-Sheep
---> 3-Wolf looping with 9-Sheep
---> 3-Wolf looping with 10-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=71, x=7, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=70, x=6, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=47, x=17, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=47, x=17, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
---> 4-Wolf looping with 8-Sheep
---> 4-Wolf looping with 9-Sheep
---> 4-Wolf looping with 10-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=47, x=17, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=48, x=18, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=43, x=2, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=43, x=2, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
---> 5-Wolf looping with 8-Sheep
---> 5-Wolf looping with 9-Sheep
---> 5-Wolf looping with 10-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=43, x=2, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=42, x=1, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=53, x=7, store=836.0) --------
--> 6-Wolf has >Min_energy(500) store (y=53, x=7, store=836.0) and 0.25 <= random.random() < 0.5. Tries to find food (sheep).
---> 6-Wolf looping with 0-Sheep
---> 6-Wolf looping with 1-Sheep
---> 6-Wolf looping with 2-Sheep
---> 6-Wolf looping with 3-Sheep
---> 6-Wolf looping with 4-Sheep
---> 6-Wolf looping with 5-Sheep
---> 6-Wolf looping with 6-Sheep
---> 6-Wolf looping with 7-Sheep
---> 6-Wolf looping with 8-Sheep
---> 6-Wolf looping with 9-Sheep
---> 6-Wolf looping with 10-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 6-Wolf (y=53, x=7, store=836.0) before normal moving
-->else1 ends: 6-Wolf (y=52, x=6, store=836.0) after normal moving
....el1___________ 6-Wolf moved normally___________
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 170 ************

-> ------------ 0-Sheep initialised with (y=89, x=82, store=557.2160339355469) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=89, x=82, store=557.2160339355469). Will move normally and eat
-->0-Sheep (y=89, x=82, store=557.2160339355469) before normal moving and eating
-->0-Sheep (y=88, x=83, store=567.2160339355469) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=74, x=115, store=564.0348815917969) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=74, x=115, store=564.0348815917969). Will move normally and eat
-->1-Sheep (y=74, x=115, store=564.0348815917969) before normal moving and eating
-->1-Sheep (y=73, x=116, store=574.0348815917969) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=97, x=83, store=567.2160339355469) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=97, x=83, store=567.2160339355469). Will move normally and eat
-->2-Sheep (y=97, x=83, store=567.2160339355469) before normal moving and eating
-->2-Sheep (y=96, x=84, store=577.2160339355469) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=75, x=113, store=574.0348815917969) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=75, x=113, store=574.0348815917969). Will move normally and eat
-->3-Sheep (y=75, x=113, store=574.0348815917969) before normal moving and eating
-->3-Sheep (y=74, x=114, store=584.0348815917969) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=69, x=118, store=395.6437683105469) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=69, x=118, store=395.6437683105469). Will move normally and eat
-->4-Sheep (y=69, x=118, store=395.6437683105469) before normal moving and eating
-->4-Sheep (y=68, x=117, store=405.6437683105469) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=91, x=89, store=423.65936279296875) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=91, x=89, store=423.65936279296875). Will move normally and eat
-->5-Sheep (y=91, x=89, store=423.65936279296875) before normal moving and eating
-->5-Sheep (y=92, x=88, store=433.65936279296875) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=94, x=89, store=320.4345703125) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=94, x=89, store=320.4345703125). Will move normally and eat
-->6-Sheep (y=94, x=89, store=320.4345703125) before normal moving and eating
-->6-Sheep (y=95, x=88, store=330.4345703125) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=69, x=112, store=405.6437683105469) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=69, x=112, store=405.6437683105469). Will move normally and eat
-->7-Sheep (y=69, x=112, store=405.6437683105469) before normal moving and eating
-->7-Sheep (y=68, x=111, store=415.6437683105469) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________


-> ------------ 8-Sheep initialised with (y=95, x=85, store=330.4345703125) -----------
--> 8-Sheep looping with 0-Wolf.
--> 8-Sheep looping with 1-Wolf.
--> 8-Sheep looping with 2-Wolf.
--> 8-Sheep looping with 3-Wolf.
--> 8-Sheep looping with 4-Wolf.
--> 8-Sheep looping with 5-Wolf.
--> 8-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->8-Sheep has Store < Min_ernergy(600) (y=95, x=85, store=330.4345703125). Will move normally and eat
-->8-Sheep (y=95, x=85, store=330.4345703125) before normal moving and eating
-->8-Sheep (y=94, x=86, store=340.4345703125) after normal moving and eating
___e2________ 8-Sheep moved normally and ate ___________


-> ------------ 9-Sheep initialised with (y=77, x=128, store=440) -----------
--> 9-Sheep looping with 0-Wolf.
--> 9-Sheep looping with 1-Wolf.
--> 9-Sheep looping with 2-Wolf.
--> 9-Sheep looping with 3-Wolf.
--> 9-Sheep looping with 4-Wolf.
--> 9-Sheep looping with 5-Wolf.
--> 9-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->9-Sheep has Store < Min_ernergy(600) (y=77, x=128, store=440). Will move normally and eat
-->9-Sheep (y=77, x=128, store=440) before normal moving and eating
-->9-Sheep (y=78, x=127, store=450) after normal moving and eating
___e2________ 9-Sheep moved normally and ate ___________


-> ------------ 10-Sheep initialised with (y=106, x=101, store=310) -----------
--> 10-Sheep looping with 0-Wolf.
--> 10-Sheep looping with 1-Wolf.
--> 10-Sheep looping with 2-Wolf.
--> 10-Sheep looping with 3-Wolf.
--> 10-Sheep looping with 4-Wolf.
--> 10-Sheep looping with 5-Wolf.
--> 10-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->10-Sheep has Store < Min_ernergy(600) (y=106, x=101, store=310). Will move normally and eat
-->10-Sheep (y=106, x=101, store=310) before normal moving and eating
-->10-Sheep (y=107, x=100, store=320) after normal moving and eating
___e2________ 10-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=251, x=46, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=251, x=46, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
---> 0-Wolf looping with 8-Sheep
---> 0-Wolf looping with 9-Sheep
---> 0-Wolf looping with 10-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=251, x=46, store=100) before normal moving
-->else1 ends: 0-Wolf (y=252, x=47, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=106, x=271, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=106, x=271, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
---> 1-Wolf looping with 8-Sheep
---> 1-Wolf looping with 9-Sheep
---> 1-Wolf looping with 10-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=106, x=271, store=300) before normal moving
-->else1 ends: 1-Wolf (y=107, x=270, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=228, x=118, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=228, x=118, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
---> 2-Wolf looping with 8-Sheep
---> 2-Wolf looping with 9-Sheep
---> 2-Wolf looping with 10-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=228, x=118, store=200) before normal moving
-->else1 ends: 2-Wolf (y=227, x=117, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=70, x=6, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=70, x=6, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
---> 3-Wolf looping with 8-Sheep
---> 3-Wolf looping with 9-Sheep
---> 3-Wolf looping with 10-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=70, x=6, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=69, x=5, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=48, x=18, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=48, x=18, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
---> 4-Wolf looping with 8-Sheep
---> 4-Wolf looping with 9-Sheep
---> 4-Wolf looping with 10-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=48, x=18, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=49, x=19, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=42, x=1, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=42, x=1, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
---> 5-Wolf looping with 8-Sheep
---> 5-Wolf looping with 9-Sheep
---> 5-Wolf looping with 10-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=42, x=1, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=41, x=2, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=52, x=6, store=836.0) --------
--> if and elif not satisfied
--> 6-Wolf has > Min_energy(500) store (y=52, x=6, store=836.0) but Random < bf_e/2(0.25). So will move normally.
--->else3 begins: 6-Wolf (y=52, x=6, store=836.0) before normal moving.
--->else3 begins: 6-Wolf (y=51, x=7, store=836.0) after normal moving.
....e3_______ 6-Wolf moved normally_______
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 171 ************

-> ------------ 0-Sheep initialised with (y=88, x=83, store=567.2160339355469) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=88, x=83, store=567.2160339355469). Will move normally and eat
-->0-Sheep (y=88, x=83, store=567.2160339355469) before normal moving and eating
-->0-Sheep (y=87, x=84, store=577.2160339355469) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=73, x=116, store=574.0348815917969) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=73, x=116, store=574.0348815917969). Will move normally and eat
-->1-Sheep (y=73, x=116, store=574.0348815917969) before normal moving and eating
-->1-Sheep (y=72, x=117, store=584.0348815917969) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=96, x=84, store=577.2160339355469) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=96, x=84, store=577.2160339355469). Will move normally and eat
-->2-Sheep (y=96, x=84, store=577.2160339355469) before normal moving and eating
-->2-Sheep (y=95, x=85, store=587.2160339355469) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=74, x=114, store=584.0348815917969) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=74, x=114, store=584.0348815917969). Will move normally and eat
-->3-Sheep (y=74, x=114, store=584.0348815917969) before normal moving and eating
-->3-Sheep (y=75, x=113, store=594.0348815917969) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=68, x=117, store=405.6437683105469) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=68, x=117, store=405.6437683105469). Will move normally and eat
-->4-Sheep (y=68, x=117, store=405.6437683105469) before normal moving and eating
-->4-Sheep (y=69, x=118, store=415.6437683105469) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=92, x=88, store=433.65936279296875) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=92, x=88, store=433.65936279296875). Will move normally and eat
-->5-Sheep (y=92, x=88, store=433.65936279296875) before normal moving and eating
-->5-Sheep (y=91, x=87, store=443.65936279296875) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=95, x=88, store=330.4345703125) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=95, x=88, store=330.4345703125). Will move normally and eat
-->6-Sheep (y=95, x=88, store=330.4345703125) before normal moving and eating
-->6-Sheep (y=96, x=87, store=340.4345703125) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=68, x=111, store=415.6437683105469) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=68, x=111, store=415.6437683105469). Will move normally and eat
-->7-Sheep (y=68, x=111, store=415.6437683105469) before normal moving and eating
-->7-Sheep (y=69, x=112, store=425.6437683105469) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________


-> ------------ 8-Sheep initialised with (y=94, x=86, store=340.4345703125) -----------
--> 8-Sheep looping with 0-Wolf.
--> 8-Sheep looping with 1-Wolf.
--> 8-Sheep looping with 2-Wolf.
--> 8-Sheep looping with 3-Wolf.
--> 8-Sheep looping with 4-Wolf.
--> 8-Sheep looping with 5-Wolf.
--> 8-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->8-Sheep has Store < Min_ernergy(600) (y=94, x=86, store=340.4345703125). Will move normally and eat
-->8-Sheep (y=94, x=86, store=340.4345703125) before normal moving and eating
-->8-Sheep (y=93, x=85, store=350.4345703125) after normal moving and eating
___e2________ 8-Sheep moved normally and ate ___________


-> ------------ 9-Sheep initialised with (y=78, x=127, store=450) -----------
--> 9-Sheep looping with 0-Wolf.
--> 9-Sheep looping with 1-Wolf.
--> 9-Sheep looping with 2-Wolf.
--> 9-Sheep looping with 3-Wolf.
--> 9-Sheep looping with 4-Wolf.
--> 9-Sheep looping with 5-Wolf.
--> 9-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->9-Sheep has Store < Min_ernergy(600) (y=78, x=127, store=450). Will move normally and eat
-->9-Sheep (y=78, x=127, store=450) before normal moving and eating
-->9-Sheep (y=79, x=128, store=460) after normal moving and eating
___e2________ 9-Sheep moved normally and ate ___________


-> ------------ 10-Sheep initialised with (y=107, x=100, store=320) -----------
--> 10-Sheep looping with 0-Wolf.
--> 10-Sheep looping with 1-Wolf.
--> 10-Sheep looping with 2-Wolf.
--> 10-Sheep looping with 3-Wolf.
--> 10-Sheep looping with 4-Wolf.
--> 10-Sheep looping with 5-Wolf.
--> 10-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->10-Sheep has Store < Min_ernergy(600) (y=107, x=100, store=320). Will move normally and eat
-->10-Sheep (y=107, x=100, store=320) before normal moving and eating
-->10-Sheep (y=108, x=99, store=330) after normal moving and eating
___e2________ 10-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=252, x=47, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=252, x=47, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
---> 0-Wolf looping with 8-Sheep
---> 0-Wolf looping with 9-Sheep
---> 0-Wolf looping with 10-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=252, x=47, store=100) before normal moving
-->else1 ends: 0-Wolf (y=251, x=48, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=107, x=270, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=107, x=270, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
---> 1-Wolf looping with 8-Sheep
---> 1-Wolf looping with 9-Sheep
---> 1-Wolf looping with 10-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=107, x=270, store=300) before normal moving
-->else1 ends: 1-Wolf (y=108, x=271, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=227, x=117, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=227, x=117, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
---> 2-Wolf looping with 8-Sheep
---> 2-Wolf looping with 9-Sheep
---> 2-Wolf looping with 10-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=227, x=117, store=200) before normal moving
-->else1 ends: 2-Wolf (y=226, x=116, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=69, x=5, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=69, x=5, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
---> 3-Wolf looping with 8-Sheep
---> 3-Wolf looping with 9-Sheep
---> 3-Wolf looping with 10-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=69, x=5, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=68, x=6, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=49, x=19, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=49, x=19, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
---> 4-Wolf looping with 8-Sheep
---> 4-Wolf looping with 9-Sheep
---> 4-Wolf looping with 10-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=49, x=19, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=50, x=20, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=41, x=2, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=41, x=2, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
---> 5-Wolf looping with 8-Sheep
---> 5-Wolf looping with 9-Sheep
---> 5-Wolf looping with 10-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=41, x=2, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=42, x=3, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=51, x=7, store=836.0) --------
--> if and elif not satisfied
--> 6-Wolf has > Min_energy(500) store (y=51, x=7, store=836.0) but Random < bf_e/2(0.25). So will move normally.
--->else3 begins: 6-Wolf (y=51, x=7, store=836.0) before normal moving.
--->else3 begins: 6-Wolf (y=52, x=6, store=836.0) after normal moving.
....e3_______ 6-Wolf moved normally_______
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 172 ************

-> ------------ 0-Sheep initialised with (y=87, x=84, store=577.2160339355469) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=87, x=84, store=577.2160339355469). Will move normally and eat
-->0-Sheep (y=87, x=84, store=577.2160339355469) before normal moving and eating
-->0-Sheep (y=88, x=83, store=587.2160339355469) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=72, x=117, store=584.0348815917969) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=72, x=117, store=584.0348815917969). Will move normally and eat
-->1-Sheep (y=72, x=117, store=584.0348815917969) before normal moving and eating
-->1-Sheep (y=73, x=116, store=594.0348815917969) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=95, x=85, store=587.2160339355469) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=95, x=85, store=587.2160339355469). Will move normally and eat
-->2-Sheep (y=95, x=85, store=587.2160339355469) before normal moving and eating
-->2-Sheep (y=96, x=86, store=597.2160339355469) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=75, x=113, store=594.0348815917969) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=75, x=113, store=594.0348815917969). Will move normally and eat
-->3-Sheep (y=75, x=113, store=594.0348815917969) before normal moving and eating
-->3-Sheep (y=74, x=114, store=604.0348815917969) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=69, x=118, store=415.6437683105469) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=69, x=118, store=415.6437683105469). Will move normally and eat
-->4-Sheep (y=69, x=118, store=415.6437683105469) before normal moving and eating
-->4-Sheep (y=70, x=119, store=425.6437683105469) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=91, x=87, store=443.65936279296875) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=91, x=87, store=443.65936279296875). Will move normally and eat
-->5-Sheep (y=91, x=87, store=443.65936279296875) before normal moving and eating
-->5-Sheep (y=90, x=88, store=453.65936279296875) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=96, x=87, store=340.4345703125) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=96, x=87, store=340.4345703125). Will move normally and eat
-->6-Sheep (y=96, x=87, store=340.4345703125) before normal moving and eating
-->6-Sheep (y=95, x=86, store=350.4345703125) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=69, x=112, store=425.6437683105469) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=69, x=112, store=425.6437683105469). Will move normally and eat
-->7-Sheep (y=69, x=112, store=425.6437683105469) before normal moving and eating
-->7-Sheep (y=68, x=113, store=435.6437683105469) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________


-> ------------ 8-Sheep initialised with (y=93, x=85, store=350.4345703125) -----------
--> 8-Sheep looping with 0-Wolf.
--> 8-Sheep looping with 1-Wolf.
--> 8-Sheep looping with 2-Wolf.
--> 8-Sheep looping with 3-Wolf.
--> 8-Sheep looping with 4-Wolf.
--> 8-Sheep looping with 5-Wolf.
--> 8-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->8-Sheep has Store < Min_ernergy(600) (y=93, x=85, store=350.4345703125). Will move normally and eat
-->8-Sheep (y=93, x=85, store=350.4345703125) before normal moving and eating
-->8-Sheep (y=92, x=86, store=360.4345703125) after normal moving and eating
___e2________ 8-Sheep moved normally and ate ___________


-> ------------ 9-Sheep initialised with (y=79, x=128, store=460) -----------
--> 9-Sheep looping with 0-Wolf.
--> 9-Sheep looping with 1-Wolf.
--> 9-Sheep looping with 2-Wolf.
--> 9-Sheep looping with 3-Wolf.
--> 9-Sheep looping with 4-Wolf.
--> 9-Sheep looping with 5-Wolf.
--> 9-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->9-Sheep has Store < Min_ernergy(600) (y=79, x=128, store=460). Will move normally and eat
-->9-Sheep (y=79, x=128, store=460) before normal moving and eating
-->9-Sheep (y=78, x=127, store=470) after normal moving and eating
___e2________ 9-Sheep moved normally and ate ___________


-> ------------ 10-Sheep initialised with (y=108, x=99, store=330) -----------
--> 10-Sheep looping with 0-Wolf.
--> 10-Sheep looping with 1-Wolf.
--> 10-Sheep looping with 2-Wolf.
--> 10-Sheep looping with 3-Wolf.
--> 10-Sheep looping with 4-Wolf.
--> 10-Sheep looping with 5-Wolf.
--> 10-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->10-Sheep has Store < Min_ernergy(600) (y=108, x=99, store=330). Will move normally and eat
-->10-Sheep (y=108, x=99, store=330) before normal moving and eating
-->10-Sheep (y=109, x=98, store=340) after normal moving and eating
___e2________ 10-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=251, x=48, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=251, x=48, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
---> 0-Wolf looping with 8-Sheep
---> 0-Wolf looping with 9-Sheep
---> 0-Wolf looping with 10-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=251, x=48, store=100) before normal moving
-->else1 ends: 0-Wolf (y=250, x=47, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=108, x=271, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=108, x=271, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
---> 1-Wolf looping with 8-Sheep
---> 1-Wolf looping with 9-Sheep
---> 1-Wolf looping with 10-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=108, x=271, store=300) before normal moving
-->else1 ends: 1-Wolf (y=107, x=272, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=226, x=116, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=226, x=116, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
---> 2-Wolf looping with 8-Sheep
---> 2-Wolf looping with 9-Sheep
---> 2-Wolf looping with 10-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=226, x=116, store=200) before normal moving
-->else1 ends: 2-Wolf (y=225, x=115, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=68, x=6, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=68, x=6, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
---> 3-Wolf looping with 8-Sheep
---> 3-Wolf looping with 9-Sheep
---> 3-Wolf looping with 10-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=68, x=6, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=69, x=7, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=50, x=20, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=50, x=20, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
---> 4-Wolf looping with 8-Sheep
---> 4-Wolf looping with 9-Sheep
---> 4-Wolf looping with 10-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=50, x=20, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=49, x=19, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=42, x=3, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=42, x=3, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
---> 5-Wolf looping with 8-Sheep
---> 5-Wolf looping with 9-Sheep
---> 5-Wolf looping with 10-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=42, x=3, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=43, x=4, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=52, x=6, store=836.0) --------
--> if and elif not satisfied
--> 6-Wolf has > Min_energy(500) store (y=52, x=6, store=836.0) but Random < bf_e/2(0.25). So will move normally.
--->else3 begins: 6-Wolf (y=52, x=6, store=836.0) before normal moving.
--->else3 begins: 6-Wolf (y=53, x=7, store=836.0) after normal moving.
....e3_______ 6-Wolf moved normally_______
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 173 ************

-> ------------ 0-Sheep initialised with (y=88, x=83, store=587.2160339355469) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=88, x=83, store=587.2160339355469). Will move normally and eat
-->0-Sheep (y=88, x=83, store=587.2160339355469) before normal moving and eating
-->0-Sheep (y=89, x=82, store=597.2160339355469) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=73, x=116, store=594.0348815917969) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=73, x=116, store=594.0348815917969). Will move normally and eat
-->1-Sheep (y=73, x=116, store=594.0348815917969) before normal moving and eating
-->1-Sheep (y=72, x=115, store=604.0348815917969) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=96, x=86, store=597.2160339355469) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=96, x=86, store=597.2160339355469). Will move normally and eat
-->2-Sheep (y=96, x=86, store=597.2160339355469) before normal moving and eating
-->2-Sheep (y=95, x=87, store=607.2160339355469) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=74, x=114, store=604.0348815917969) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store > Min_ernergy(600) (y=74, x=114, store=604.0348815917969).
--> 3-Sheep looping with 0-Sheep.
----> ---- (AD < D < MD).
----> Min distance=6.4031242374328485 for 3-Sheep (y=74, x=114, store=604.0348815917969) with 0-Sheep (y=70, x=119, store=425.6437683105469).
--> 3-Sheep looping with 1-Sheep.
--> 3-Sheep looping with 2-Sheep.
--> 3-Sheep looping with 3-Sheep.
----> ---- (AD < D < MD).
----> Min distance=6.082762530298219 for 3-Sheep (y=74, x=114, store=604.0348815917969) with 3-Sheep (y=68, x=113, store=435.6437683105469).
--> 3-Sheep looping with 4-Sheep.
--> 3-Sheep looping with 5-Sheep.
--> 3-Sheep looping with 6-Sheep.
->CS Found!
-> 3-Sheep (y=74, x=114, store=604.0348815917969) before moving closer (while eating) to CS-Sheep: (y=68, x=113, store=435.6437683105469).
-> 3-Wolf (y=71, x=113, store=614.0348815917969) after moving closer (while eating) to CS-Sheep: (y=68, x=113, store=435.6437683105469).
___________ 3-Sheep moved closer CS___________


-> ------------ 4-Sheep initialised with (y=70, x=119, store=425.6437683105469) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=70, x=119, store=425.6437683105469). Will move normally and eat
-->4-Sheep (y=70, x=119, store=425.6437683105469) before normal moving and eating
-->4-Sheep (y=69, x=118, store=435.6437683105469) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=90, x=88, store=453.65936279296875) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=90, x=88, store=453.65936279296875). Will move normally and eat
-->5-Sheep (y=90, x=88, store=453.65936279296875) before normal moving and eating
-->5-Sheep (y=89, x=89, store=463.65936279296875) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=95, x=86, store=350.4345703125) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=95, x=86, store=350.4345703125). Will move normally and eat
-->6-Sheep (y=95, x=86, store=350.4345703125) before normal moving and eating
-->6-Sheep (y=94, x=87, store=360.4345703125) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=68, x=113, store=435.6437683105469) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=68, x=113, store=435.6437683105469). Will move normally and eat
-->7-Sheep (y=68, x=113, store=435.6437683105469) before normal moving and eating
-->7-Sheep (y=69, x=112, store=445.6437683105469) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________


-> ------------ 8-Sheep initialised with (y=92, x=86, store=360.4345703125) -----------
--> 8-Sheep looping with 0-Wolf.
--> 8-Sheep looping with 1-Wolf.
--> 8-Sheep looping with 2-Wolf.
--> 8-Sheep looping with 3-Wolf.
--> 8-Sheep looping with 4-Wolf.
--> 8-Sheep looping with 5-Wolf.
--> 8-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->8-Sheep has Store < Min_ernergy(600) (y=92, x=86, store=360.4345703125). Will move normally and eat
-->8-Sheep (y=92, x=86, store=360.4345703125) before normal moving and eating
-->8-Sheep (y=93, x=87, store=370.4345703125) after normal moving and eating
___e2________ 8-Sheep moved normally and ate ___________


-> ------------ 9-Sheep initialised with (y=78, x=127, store=470) -----------
--> 9-Sheep looping with 0-Wolf.
--> 9-Sheep looping with 1-Wolf.
--> 9-Sheep looping with 2-Wolf.
--> 9-Sheep looping with 3-Wolf.
--> 9-Sheep looping with 4-Wolf.
--> 9-Sheep looping with 5-Wolf.
--> 9-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->9-Sheep has Store < Min_ernergy(600) (y=78, x=127, store=470). Will move normally and eat
-->9-Sheep (y=78, x=127, store=470) before normal moving and eating
-->9-Sheep (y=77, x=128, store=480) after normal moving and eating
___e2________ 9-Sheep moved normally and ate ___________


-> ------------ 10-Sheep initialised with (y=109, x=98, store=340) -----------
--> 10-Sheep looping with 0-Wolf.
--> 10-Sheep looping with 1-Wolf.
--> 10-Sheep looping with 2-Wolf.
--> 10-Sheep looping with 3-Wolf.
--> 10-Sheep looping with 4-Wolf.
--> 10-Sheep looping with 5-Wolf.
--> 10-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->10-Sheep has Store < Min_ernergy(600) (y=109, x=98, store=340). Will move normally and eat
-->10-Sheep (y=109, x=98, store=340) before normal moving and eating
-->10-Sheep (y=108, x=99, store=350) after normal moving and eating
___e2________ 10-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=250, x=47, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=250, x=47, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
---> 0-Wolf looping with 8-Sheep
---> 0-Wolf looping with 9-Sheep
---> 0-Wolf looping with 10-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=250, x=47, store=100) before normal moving
-->else1 ends: 0-Wolf (y=251, x=48, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=107, x=272, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=107, x=272, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
---> 1-Wolf looping with 8-Sheep
---> 1-Wolf looping with 9-Sheep
---> 1-Wolf looping with 10-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=107, x=272, store=300) before normal moving
-->else1 ends: 1-Wolf (y=108, x=273, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=225, x=115, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=225, x=115, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
---> 2-Wolf looping with 8-Sheep
---> 2-Wolf looping with 9-Sheep
---> 2-Wolf looping with 10-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=225, x=115, store=200) before normal moving
-->else1 ends: 2-Wolf (y=226, x=114, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=69, x=7, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=69, x=7, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
---> 3-Wolf looping with 8-Sheep
---> 3-Wolf looping with 9-Sheep
---> 3-Wolf looping with 10-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=69, x=7, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=70, x=6, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=49, x=19, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=49, x=19, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
---> 4-Wolf looping with 8-Sheep
---> 4-Wolf looping with 9-Sheep
---> 4-Wolf looping with 10-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=49, x=19, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=48, x=18, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=43, x=4, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=43, x=4, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
---> 5-Wolf looping with 8-Sheep
---> 5-Wolf looping with 9-Sheep
---> 5-Wolf looping with 10-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=43, x=4, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=42, x=5, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=53, x=7, store=836.0) --------
--> if and elif not satisfied
--> 6-Wolf has > Min_energy(500) store (y=53, x=7, store=836.0) but Random < bf_e/2(0.25). So will move normally.
--->else3 begins: 6-Wolf (y=53, x=7, store=836.0) before normal moving.
--->else3 begins: 6-Wolf (y=54, x=6, store=836.0) after normal moving.
....e3_______ 6-Wolf moved normally_______
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 174 ************

-> ------------ 0-Sheep initialised with (y=89, x=82, store=597.2160339355469) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=89, x=82, store=597.2160339355469). Will move normally and eat
-->0-Sheep (y=89, x=82, store=597.2160339355469) before normal moving and eating
-->0-Sheep (y=90, x=83, store=607.2160339355469) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=72, x=115, store=604.0348815917969) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store > Min_ernergy(600) (y=72, x=115, store=604.0348815917969).
--> 1-Sheep looping with 0-Sheep.
--> 1-Sheep looping with 1-Sheep.
----> D <=AD. Sheep Breeding/Sharing proximity of 2.23606797749979(<=5) entered by CS 1-Sheep (y=72, x=115, store=604.0348815917969) with CS 1-Sheep (y=71, x=113, store=614.0348815917969).
----->1-Sheep (y=72, x=115, store=604.0348815917969) and CS 1-Sheep (y=71, x=113, store=614.0348815917969 have > Min_energy (600) store. So they will try breeding if p>0.5
------>1.B Random <0.5. So the breeding will fail.
------> 1-Sheep (y=72, x=115, store=604.0348815917969) before failed breeding with CS 1-Sheep (y=71, x=113, store=614.0348815917969)
------> Failed Sheep Breeding = True
------> 1-Sheep (y=72, x=115, store=304.51744079589844) after failed breeding with CS 1-Sheep (y=71, x=113, store=304.51744079589844).
_____________ 1-Sheep Fail Mated with CS 1-Sheep ____________
_______ Breeding=False, Failed breeding=True, Share=False for 1-Sheep __________

-> ------------ 2-Sheep initialised with (y=95, x=87, store=607.2160339355469) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store > Min_ernergy(600) (y=95, x=87, store=607.2160339355469).
--> 2-Sheep looping with 0-Sheep.
--> 2-Sheep looping with 1-Sheep.
--> 2-Sheep looping with 2-Sheep.
----> ---- (AD < D < MD).
----> Min distance=6.324555320336759 for 2-Sheep (y=95, x=87, store=607.2160339355469) with 2-Sheep (y=89, x=89, store=463.65936279296875).
--> 2-Sheep looping with 3-Sheep.
----> D <=AD. Sheep Breeding/Sharing proximity of 1.0(<=5) entered by CS 2-Sheep (y=95, x=87, store=607.2160339355469) with CS 3-Sheep (y=94, x=87, store=360.4345703125).
-----> 2-Sheep (y=95, x=87, store=607.2160339355469) and CS 3-Sheep (y=94, x=87, store=360.4345703125 will not mate as CS 3-Sheep store <600. They will share resource to become average.
-----> Shared resources = True
-----> 2-Sheep (y=95, x=87, store=483.82530212402344) and CS 3-Sheep (y=94, x=87, store=483.82530212402344) after sharing resources!
_____________ 2-Sheep and CS 3-Sheep shared resources ____________
_______ Breeding=False, Failed breeding=False, Share=True for 2-Sheep __________

-> ------------ 3-Sheep initialised with (y=71, x=113, store=304.51744079589844) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=71, x=113, store=304.51744079589844). Will move normally and eat
-->3-Sheep (y=71, x=113, store=304.51744079589844) before normal moving and eating
-->3-Sheep (y=72, x=112, store=314.51744079589844) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=69, x=118, store=435.6437683105469) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=69, x=118, store=435.6437683105469). Will move normally and eat
-->4-Sheep (y=69, x=118, store=435.6437683105469) before normal moving and eating
-->4-Sheep (y=70, x=117, store=445.6437683105469) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=89, x=89, store=463.65936279296875) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=89, x=89, store=463.65936279296875). Will move normally and eat
-->5-Sheep (y=89, x=89, store=463.65936279296875) before normal moving and eating
-->5-Sheep (y=88, x=88, store=473.65936279296875) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=94, x=87, store=483.82530212402344) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=94, x=87, store=483.82530212402344). Will move normally and eat
-->6-Sheep (y=94, x=87, store=483.82530212402344) before normal moving and eating
-->6-Sheep (y=93, x=88, store=493.82530212402344) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=69, x=112, store=445.6437683105469) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=69, x=112, store=445.6437683105469). Will move normally and eat
-->7-Sheep (y=69, x=112, store=445.6437683105469) before normal moving and eating
-->7-Sheep (y=70, x=111, store=455.6437683105469) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________


-> ------------ 8-Sheep initialised with (y=93, x=87, store=370.4345703125) -----------
--> 8-Sheep looping with 0-Wolf.
--> 8-Sheep looping with 1-Wolf.
--> 8-Sheep looping with 2-Wolf.
--> 8-Sheep looping with 3-Wolf.
--> 8-Sheep looping with 4-Wolf.
--> 8-Sheep looping with 5-Wolf.
--> 8-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->8-Sheep has Store < Min_ernergy(600) (y=93, x=87, store=370.4345703125). Will move normally and eat
-->8-Sheep (y=93, x=87, store=370.4345703125) before normal moving and eating
-->8-Sheep (y=94, x=88, store=380.4345703125) after normal moving and eating
___e2________ 8-Sheep moved normally and ate ___________


-> ------------ 9-Sheep initialised with (y=77, x=128, store=480) -----------
--> 9-Sheep looping with 0-Wolf.
--> 9-Sheep looping with 1-Wolf.
--> 9-Sheep looping with 2-Wolf.
--> 9-Sheep looping with 3-Wolf.
--> 9-Sheep looping with 4-Wolf.
--> 9-Sheep looping with 5-Wolf.
--> 9-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->9-Sheep has Store < Min_ernergy(600) (y=77, x=128, store=480). Will move normally and eat
-->9-Sheep (y=77, x=128, store=480) before normal moving and eating
-->9-Sheep (y=78, x=127, store=490) after normal moving and eating
___e2________ 9-Sheep moved normally and ate ___________


-> ------------ 10-Sheep initialised with (y=108, x=99, store=350) -----------
--> 10-Sheep looping with 0-Wolf.
--> 10-Sheep looping with 1-Wolf.
--> 10-Sheep looping with 2-Wolf.
--> 10-Sheep looping with 3-Wolf.
--> 10-Sheep looping with 4-Wolf.
--> 10-Sheep looping with 5-Wolf.
--> 10-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->10-Sheep has Store < Min_ernergy(600) (y=108, x=99, store=350). Will move normally and eat
-->10-Sheep (y=108, x=99, store=350) before normal moving and eating
-->10-Sheep (y=107, x=100, store=360) after normal moving and eating
___e2________ 10-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=251, x=48, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=251, x=48, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
---> 0-Wolf looping with 8-Sheep
---> 0-Wolf looping with 9-Sheep
---> 0-Wolf looping with 10-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=251, x=48, store=100) before normal moving
-->else1 ends: 0-Wolf (y=250, x=47, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=108, x=273, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=108, x=273, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
---> 1-Wolf looping with 8-Sheep
---> 1-Wolf looping with 9-Sheep
---> 1-Wolf looping with 10-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=108, x=273, store=300) before normal moving
-->else1 ends: 1-Wolf (y=107, x=272, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=226, x=114, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=226, x=114, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
---> 2-Wolf looping with 8-Sheep
---> 2-Wolf looping with 9-Sheep
---> 2-Wolf looping with 10-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=226, x=114, store=200) before normal moving
-->else1 ends: 2-Wolf (y=225, x=113, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=70, x=6, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=70, x=6, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
---> 3-Wolf looping with 8-Sheep
---> 3-Wolf looping with 9-Sheep
---> 3-Wolf looping with 10-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=70, x=6, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=71, x=5, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=48, x=18, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=48, x=18, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
---> 4-Wolf looping with 8-Sheep
---> 4-Wolf looping with 9-Sheep
---> 4-Wolf looping with 10-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=48, x=18, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=47, x=19, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=42, x=5, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=42, x=5, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
---> 5-Wolf looping with 8-Sheep
---> 5-Wolf looping with 9-Sheep
---> 5-Wolf looping with 10-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=42, x=5, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=41, x=4, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=54, x=6, store=836.0) --------
--> 6-Wolf has >Min_energy(500) store (y=54, x=6, store=836.0) and 0.25 <= random.random() < 0.5. Tries to find food (sheep).
---> 6-Wolf looping with 0-Sheep
---> 6-Wolf looping with 1-Sheep
---> 6-Wolf looping with 2-Sheep
---> 6-Wolf looping with 3-Sheep
---> 6-Wolf looping with 4-Sheep
---> 6-Wolf looping with 5-Sheep
---> 6-Wolf looping with 6-Sheep
---> 6-Wolf looping with 7-Sheep
---> 6-Wolf looping with 8-Sheep
---> 6-Wolf looping with 9-Sheep
---> 6-Wolf looping with 10-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 6-Wolf (y=54, x=6, store=836.0) before normal moving
-->else1 ends: 6-Wolf (y=53, x=7, store=836.0) after normal moving
....el1___________ 6-Wolf moved normally___________
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 175 ************

-> ------------ 0-Sheep initialised with (y=90, x=83, store=607.2160339355469) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store > Min_ernergy(600) (y=90, x=83, store=607.2160339355469).
--> 0-Sheep looping with 0-Sheep.
--> 0-Sheep looping with 1-Sheep.
----> ---- (AD < D < MD).
----> Min distance=6.4031242374328485 for 0-Sheep (y=90, x=83, store=607.2160339355469) with 1-Sheep (y=95, x=87, store=483.82530212402344).
--> 0-Sheep looping with 2-Sheep.
--> 0-Sheep looping with 3-Sheep.
--> 0-Sheep looping with 4-Sheep.
----> ---- (AD < D < MD).
----> Min distance=5.385164807134504 for 0-Sheep (y=90, x=83, store=607.2160339355469) with 4-Sheep (y=88, x=88, store=473.65936279296875).
--> 0-Sheep looping with 5-Sheep.
--> 0-Sheep looping with 6-Sheep.
--> 0-Sheep looping with 7-Sheep.
--> 0-Sheep looping with 8-Sheep.
--> 0-Sheep looping with 9-Sheep.
->CS Found!
-> 0-Sheep (y=90, x=83, store=607.2160339355469) before moving closer (while eating) to CS-Sheep: (y=88, x=88, store=473.65936279296875).
-> 0-Wolf (y=89, x=85, store=617.2160339355469) after moving closer (while eating) to CS-Sheep: (y=88, x=88, store=473.65936279296875).
___________ 0-Sheep moved closer CS___________


-> ------------ 1-Sheep initialised with (y=72, x=115, store=304.51744079589844) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=72, x=115, store=304.51744079589844). Will move normally and eat
-->1-Sheep (y=72, x=115, store=304.51744079589844) before normal moving and eating
-->1-Sheep (y=73, x=114, store=314.51744079589844) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=95, x=87, store=483.82530212402344) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=95, x=87, store=483.82530212402344). Will move normally and eat
-->2-Sheep (y=95, x=87, store=483.82530212402344) before normal moving and eating
-->2-Sheep (y=96, x=86, store=493.82530212402344) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=72, x=112, store=314.51744079589844) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=72, x=112, store=314.51744079589844). Will move normally and eat
-->3-Sheep (y=72, x=112, store=314.51744079589844) before normal moving and eating
-->3-Sheep (y=71, x=113, store=324.51744079589844) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=70, x=117, store=445.6437683105469) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=70, x=117, store=445.6437683105469). Will move normally and eat
-->4-Sheep (y=70, x=117, store=445.6437683105469) before normal moving and eating
-->4-Sheep (y=69, x=118, store=455.6437683105469) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=88, x=88, store=473.65936279296875) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=88, x=88, store=473.65936279296875). Will move normally and eat
-->5-Sheep (y=88, x=88, store=473.65936279296875) before normal moving and eating
-->5-Sheep (y=87, x=89, store=483.65936279296875) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=93, x=88, store=493.82530212402344) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=93, x=88, store=493.82530212402344). Will move normally and eat
-->6-Sheep (y=93, x=88, store=493.82530212402344) before normal moving and eating
-->6-Sheep (y=92, x=89, store=503.82530212402344) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=70, x=111, store=455.6437683105469) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=70, x=111, store=455.6437683105469). Will move normally and eat
-->7-Sheep (y=70, x=111, store=455.6437683105469) before normal moving and eating
-->7-Sheep (y=69, x=112, store=465.6437683105469) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________


-> ------------ 8-Sheep initialised with (y=94, x=88, store=380.4345703125) -----------
--> 8-Sheep looping with 0-Wolf.
--> 8-Sheep looping with 1-Wolf.
--> 8-Sheep looping with 2-Wolf.
--> 8-Sheep looping with 3-Wolf.
--> 8-Sheep looping with 4-Wolf.
--> 8-Sheep looping with 5-Wolf.
--> 8-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->8-Sheep has Store < Min_ernergy(600) (y=94, x=88, store=380.4345703125). Will move normally and eat
-->8-Sheep (y=94, x=88, store=380.4345703125) before normal moving and eating
-->8-Sheep (y=95, x=89, store=390.4345703125) after normal moving and eating
___e2________ 8-Sheep moved normally and ate ___________


-> ------------ 9-Sheep initialised with (y=78, x=127, store=490) -----------
--> 9-Sheep looping with 0-Wolf.
--> 9-Sheep looping with 1-Wolf.
--> 9-Sheep looping with 2-Wolf.
--> 9-Sheep looping with 3-Wolf.
--> 9-Sheep looping with 4-Wolf.
--> 9-Sheep looping with 5-Wolf.
--> 9-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->9-Sheep has Store < Min_ernergy(600) (y=78, x=127, store=490). Will move normally and eat
-->9-Sheep (y=78, x=127, store=490) before normal moving and eating
-->9-Sheep (y=77, x=126, store=500) after normal moving and eating
___e2________ 9-Sheep moved normally and ate ___________


-> ------------ 10-Sheep initialised with (y=107, x=100, store=360) -----------
--> 10-Sheep looping with 0-Wolf.
--> 10-Sheep looping with 1-Wolf.
--> 10-Sheep looping with 2-Wolf.
--> 10-Sheep looping with 3-Wolf.
--> 10-Sheep looping with 4-Wolf.
--> 10-Sheep looping with 5-Wolf.
--> 10-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->10-Sheep has Store < Min_ernergy(600) (y=107, x=100, store=360). Will move normally and eat
-->10-Sheep (y=107, x=100, store=360) before normal moving and eating
-->10-Sheep (y=108, x=101, store=370) after normal moving and eating
___e2________ 10-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=250, x=47, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=250, x=47, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
---> 0-Wolf looping with 8-Sheep
---> 0-Wolf looping with 9-Sheep
---> 0-Wolf looping with 10-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=250, x=47, store=100) before normal moving
-->else1 ends: 0-Wolf (y=249, x=48, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=107, x=272, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=107, x=272, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
---> 1-Wolf looping with 8-Sheep
---> 1-Wolf looping with 9-Sheep
---> 1-Wolf looping with 10-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=107, x=272, store=300) before normal moving
-->else1 ends: 1-Wolf (y=106, x=273, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=225, x=113, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=225, x=113, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
---> 2-Wolf looping with 8-Sheep
---> 2-Wolf looping with 9-Sheep
---> 2-Wolf looping with 10-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=225, x=113, store=200) before normal moving
-->else1 ends: 2-Wolf (y=224, x=114, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=71, x=5, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=71, x=5, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
---> 3-Wolf looping with 8-Sheep
---> 3-Wolf looping with 9-Sheep
---> 3-Wolf looping with 10-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=71, x=5, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=70, x=4, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=47, x=19, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=47, x=19, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
---> 4-Wolf looping with 8-Sheep
---> 4-Wolf looping with 9-Sheep
---> 4-Wolf looping with 10-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=47, x=19, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=46, x=18, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=41, x=4, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=41, x=4, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
---> 5-Wolf looping with 8-Sheep
---> 5-Wolf looping with 9-Sheep
---> 5-Wolf looping with 10-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=41, x=4, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=42, x=3, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=53, x=7, store=836.0) --------
--> if and elif not satisfied
--> 6-Wolf has > Min_energy(500) store (y=53, x=7, store=836.0) but Random < bf_e/2(0.25). So will move normally.
--->else3 begins: 6-Wolf (y=53, x=7, store=836.0) before normal moving.
--->else3 begins: 6-Wolf (y=52, x=6, store=836.0) after normal moving.
....e3_______ 6-Wolf moved normally_______
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 176 ************

-> ------------ 0-Sheep initialised with (y=89, x=85, store=617.2160339355469) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store > Min_ernergy(600) (y=89, x=85, store=617.2160339355469).
--> 0-Sheep looping with 0-Sheep.
--> 0-Sheep looping with 1-Sheep.
----> ---- (AD < D < MD).
----> Min distance=7.0710678118654755 for 0-Sheep (y=89, x=85, store=617.2160339355469) with 1-Sheep (y=96, x=86, store=493.82530212402344).
--> 0-Sheep looping with 2-Sheep.
--> 0-Sheep looping with 3-Sheep.
--> 0-Sheep looping with 4-Sheep.
----> D <=AD. Sheep Breeding/Sharing proximity of 4.47213595499958(<=5) entered by CS 0-Sheep (y=89, x=85, store=617.2160339355469) with CS 4-Sheep (y=87, x=89, store=483.65936279296875).
-----> 0-Sheep (y=89, x=85, store=617.2160339355469) and CS 4-Sheep (y=87, x=89, store=483.65936279296875 will not mate as CS 4-Sheep store <600. They will share resource to become average.
-----> Shared resources = True
-----> 0-Sheep (y=89, x=85, store=550.4376983642578) and CS 4-Sheep (y=87, x=89, store=550.4376983642578) after sharing resources!
_____________ 0-Sheep and CS 4-Sheep shared resources ____________
_______ Breeding=False, Failed breeding=False, Share=True for 0-Sheep __________

-> ------------ 1-Sheep initialised with (y=73, x=114, store=314.51744079589844) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=73, x=114, store=314.51744079589844). Will move normally and eat
-->1-Sheep (y=73, x=114, store=314.51744079589844) before normal moving and eating
-->1-Sheep (y=74, x=113, store=324.51744079589844) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=96, x=86, store=493.82530212402344) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=96, x=86, store=493.82530212402344). Will move normally and eat
-->2-Sheep (y=96, x=86, store=493.82530212402344) before normal moving and eating
-->2-Sheep (y=97, x=87, store=503.82530212402344) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=71, x=113, store=324.51744079589844) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=71, x=113, store=324.51744079589844). Will move normally and eat
-->3-Sheep (y=71, x=113, store=324.51744079589844) before normal moving and eating
-->3-Sheep (y=70, x=114, store=334.51744079589844) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=69, x=118, store=455.6437683105469) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=69, x=118, store=455.6437683105469). Will move normally and eat
-->4-Sheep (y=69, x=118, store=455.6437683105469) before normal moving and eating
-->4-Sheep (y=70, x=117, store=465.6437683105469) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=87, x=89, store=550.4376983642578) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=87, x=89, store=550.4376983642578). Will move normally and eat
-->5-Sheep (y=87, x=89, store=550.4376983642578) before normal moving and eating
-->5-Sheep (y=88, x=90, store=560.4376983642578) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=92, x=89, store=503.82530212402344) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=92, x=89, store=503.82530212402344). Will move normally and eat
-->6-Sheep (y=92, x=89, store=503.82530212402344) before normal moving and eating
-->6-Sheep (y=93, x=90, store=513.8253021240234) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=69, x=112, store=465.6437683105469) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=69, x=112, store=465.6437683105469). Will move normally and eat
-->7-Sheep (y=69, x=112, store=465.6437683105469) before normal moving and eating
-->7-Sheep (y=68, x=111, store=475.6437683105469) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________


-> ------------ 8-Sheep initialised with (y=95, x=89, store=390.4345703125) -----------
--> 8-Sheep looping with 0-Wolf.
--> 8-Sheep looping with 1-Wolf.
--> 8-Sheep looping with 2-Wolf.
--> 8-Sheep looping with 3-Wolf.
--> 8-Sheep looping with 4-Wolf.
--> 8-Sheep looping with 5-Wolf.
--> 8-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->8-Sheep has Store < Min_ernergy(600) (y=95, x=89, store=390.4345703125). Will move normally and eat
-->8-Sheep (y=95, x=89, store=390.4345703125) before normal moving and eating
-->8-Sheep (y=94, x=88, store=400.4345703125) after normal moving and eating
___e2________ 8-Sheep moved normally and ate ___________


-> ------------ 9-Sheep initialised with (y=77, x=126, store=500) -----------
--> 9-Sheep looping with 0-Wolf.
--> 9-Sheep looping with 1-Wolf.
--> 9-Sheep looping with 2-Wolf.
--> 9-Sheep looping with 3-Wolf.
--> 9-Sheep looping with 4-Wolf.
--> 9-Sheep looping with 5-Wolf.
--> 9-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->9-Sheep has Store < Min_ernergy(600) (y=77, x=126, store=500). Will move normally and eat
-->9-Sheep (y=77, x=126, store=500) before normal moving and eating
-->9-Sheep (y=78, x=127, store=510) after normal moving and eating
___e2________ 9-Sheep moved normally and ate ___________


-> ------------ 10-Sheep initialised with (y=108, x=101, store=370) -----------
--> 10-Sheep looping with 0-Wolf.
--> 10-Sheep looping with 1-Wolf.
--> 10-Sheep looping with 2-Wolf.
--> 10-Sheep looping with 3-Wolf.
--> 10-Sheep looping with 4-Wolf.
--> 10-Sheep looping with 5-Wolf.
--> 10-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->10-Sheep has Store < Min_ernergy(600) (y=108, x=101, store=370). Will move normally and eat
-->10-Sheep (y=108, x=101, store=370) before normal moving and eating
-->10-Sheep (y=109, x=102, store=380) after normal moving and eating
___e2________ 10-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=249, x=48, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=249, x=48, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
---> 0-Wolf looping with 8-Sheep
---> 0-Wolf looping with 9-Sheep
---> 0-Wolf looping with 10-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=249, x=48, store=100) before normal moving
-->else1 ends: 0-Wolf (y=250, x=49, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=106, x=273, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=106, x=273, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
---> 1-Wolf looping with 8-Sheep
---> 1-Wolf looping with 9-Sheep
---> 1-Wolf looping with 10-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=106, x=273, store=300) before normal moving
-->else1 ends: 1-Wolf (y=105, x=272, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=224, x=114, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=224, x=114, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
---> 2-Wolf looping with 8-Sheep
---> 2-Wolf looping with 9-Sheep
---> 2-Wolf looping with 10-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=224, x=114, store=200) before normal moving
-->else1 ends: 2-Wolf (y=225, x=113, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=70, x=4, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=70, x=4, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
---> 3-Wolf looping with 8-Sheep
---> 3-Wolf looping with 9-Sheep
---> 3-Wolf looping with 10-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=70, x=4, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=69, x=3, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=46, x=18, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=46, x=18, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
---> 4-Wolf looping with 8-Sheep
---> 4-Wolf looping with 9-Sheep
---> 4-Wolf looping with 10-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=46, x=18, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=47, x=19, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=42, x=3, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=42, x=3, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
---> 5-Wolf looping with 8-Sheep
---> 5-Wolf looping with 9-Sheep
---> 5-Wolf looping with 10-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=42, x=3, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=43, x=2, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=52, x=6, store=836.0) --------
--> 6-Wolf has > 500 store (y=52, x=6, store=836.0) and Random >= 0.5. so will try to find CW to move closer or breed/fight if within AD(5).
-> No CW found. although store >500 and p>=0.5!
--->else2 begins: 6-Wolf (y=52, x=6, store=836.0) before normal moving.
--->else2 begins: 6-Wolf (y=53, x=5, store=836.0) after normal moving.
.... el2 _______  6-Wolf moved normally _______ 
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 177 ************

-> ------------ 0-Sheep initialised with (y=89, x=85, store=550.4376983642578) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=89, x=85, store=550.4376983642578). Will move normally and eat
-->0-Sheep (y=89, x=85, store=550.4376983642578) before normal moving and eating
-->0-Sheep (y=90, x=84, store=560.4376983642578) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=74, x=113, store=324.51744079589844) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=74, x=113, store=324.51744079589844). Will move normally and eat
-->1-Sheep (y=74, x=113, store=324.51744079589844) before normal moving and eating
-->1-Sheep (y=75, x=114, store=334.51744079589844) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=97, x=87, store=503.82530212402344) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=97, x=87, store=503.82530212402344). Will move normally and eat
-->2-Sheep (y=97, x=87, store=503.82530212402344) before normal moving and eating
-->2-Sheep (y=96, x=88, store=513.8253021240234) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=70, x=114, store=334.51744079589844) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=70, x=114, store=334.51744079589844). Will move normally and eat
-->3-Sheep (y=70, x=114, store=334.51744079589844) before normal moving and eating
-->3-Sheep (y=71, x=113, store=344.51744079589844) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=70, x=117, store=465.6437683105469) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=70, x=117, store=465.6437683105469). Will move normally and eat
-->4-Sheep (y=70, x=117, store=465.6437683105469) before normal moving and eating
-->4-Sheep (y=69, x=116, store=475.6437683105469) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=88, x=90, store=560.4376983642578) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=88, x=90, store=560.4376983642578). Will move normally and eat
-->5-Sheep (y=88, x=90, store=560.4376983642578) before normal moving and eating
-->5-Sheep (y=89, x=91, store=570.4376983642578) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=93, x=90, store=513.8253021240234) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=93, x=90, store=513.8253021240234). Will move normally and eat
-->6-Sheep (y=93, x=90, store=513.8253021240234) before normal moving and eating
-->6-Sheep (y=92, x=91, store=523.8253021240234) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=68, x=111, store=475.6437683105469) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=68, x=111, store=475.6437683105469). Will move normally and eat
-->7-Sheep (y=68, x=111, store=475.6437683105469) before normal moving and eating
-->7-Sheep (y=69, x=110, store=485.6437683105469) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________


-> ------------ 8-Sheep initialised with (y=94, x=88, store=400.4345703125) -----------
--> 8-Sheep looping with 0-Wolf.
--> 8-Sheep looping with 1-Wolf.
--> 8-Sheep looping with 2-Wolf.
--> 8-Sheep looping with 3-Wolf.
--> 8-Sheep looping with 4-Wolf.
--> 8-Sheep looping with 5-Wolf.
--> 8-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->8-Sheep has Store < Min_ernergy(600) (y=94, x=88, store=400.4345703125). Will move normally and eat
-->8-Sheep (y=94, x=88, store=400.4345703125) before normal moving and eating
-->8-Sheep (y=95, x=87, store=410.4345703125) after normal moving and eating
___e2________ 8-Sheep moved normally and ate ___________


-> ------------ 9-Sheep initialised with (y=78, x=127, store=510) -----------
--> 9-Sheep looping with 0-Wolf.
--> 9-Sheep looping with 1-Wolf.
--> 9-Sheep looping with 2-Wolf.
--> 9-Sheep looping with 3-Wolf.
--> 9-Sheep looping with 4-Wolf.
--> 9-Sheep looping with 5-Wolf.
--> 9-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->9-Sheep has Store < Min_ernergy(600) (y=78, x=127, store=510). Will move normally and eat
-->9-Sheep (y=78, x=127, store=510) before normal moving and eating
-->9-Sheep (y=77, x=128, store=520) after normal moving and eating
___e2________ 9-Sheep moved normally and ate ___________


-> ------------ 10-Sheep initialised with (y=109, x=102, store=380) -----------
--> 10-Sheep looping with 0-Wolf.
--> 10-Sheep looping with 1-Wolf.
--> 10-Sheep looping with 2-Wolf.
--> 10-Sheep looping with 3-Wolf.
--> 10-Sheep looping with 4-Wolf.
--> 10-Sheep looping with 5-Wolf.
--> 10-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->10-Sheep has Store < Min_ernergy(600) (y=109, x=102, store=380). Will move normally and eat
-->10-Sheep (y=109, x=102, store=380) before normal moving and eating
-->10-Sheep (y=108, x=101, store=390) after normal moving and eating
___e2________ 10-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=250, x=49, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=250, x=49, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
---> 0-Wolf looping with 8-Sheep
---> 0-Wolf looping with 9-Sheep
---> 0-Wolf looping with 10-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=250, x=49, store=100) before normal moving
-->else1 ends: 0-Wolf (y=251, x=48, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=105, x=272, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=105, x=272, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
---> 1-Wolf looping with 8-Sheep
---> 1-Wolf looping with 9-Sheep
---> 1-Wolf looping with 10-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=105, x=272, store=300) before normal moving
-->else1 ends: 1-Wolf (y=106, x=271, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=225, x=113, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=225, x=113, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
---> 2-Wolf looping with 8-Sheep
---> 2-Wolf looping with 9-Sheep
---> 2-Wolf looping with 10-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=225, x=113, store=200) before normal moving
-->else1 ends: 2-Wolf (y=224, x=112, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=69, x=3, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=69, x=3, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
---> 3-Wolf looping with 8-Sheep
---> 3-Wolf looping with 9-Sheep
---> 3-Wolf looping with 10-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=69, x=3, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=68, x=4, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=47, x=19, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=47, x=19, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
---> 4-Wolf looping with 8-Sheep
---> 4-Wolf looping with 9-Sheep
---> 4-Wolf looping with 10-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=47, x=19, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=48, x=18, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=43, x=2, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=43, x=2, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
---> 5-Wolf looping with 8-Sheep
---> 5-Wolf looping with 9-Sheep
---> 5-Wolf looping with 10-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=43, x=2, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=42, x=1, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=53, x=5, store=836.0) --------
--> 6-Wolf has > 500 store (y=53, x=5, store=836.0) and Random >= 0.5. so will try to find CW to move closer or breed/fight if within AD(5).
-> No CW found. although store >500 and p>=0.5!
--->else2 begins: 6-Wolf (y=53, x=5, store=836.0) before normal moving.
--->else2 begins: 6-Wolf (y=54, x=4, store=836.0) after normal moving.
.... el2 _______  6-Wolf moved normally _______ 
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 178 ************

-> ------------ 0-Sheep initialised with (y=90, x=84, store=560.4376983642578) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=90, x=84, store=560.4376983642578). Will move normally and eat
-->0-Sheep (y=90, x=84, store=560.4376983642578) before normal moving and eating
-->0-Sheep (y=89, x=85, store=570.4376983642578) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=75, x=114, store=334.51744079589844) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=75, x=114, store=334.51744079589844). Will move normally and eat
-->1-Sheep (y=75, x=114, store=334.51744079589844) before normal moving and eating
-->1-Sheep (y=76, x=113, store=344.51744079589844) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=96, x=88, store=513.8253021240234) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=96, x=88, store=513.8253021240234). Will move normally and eat
-->2-Sheep (y=96, x=88, store=513.8253021240234) before normal moving and eating
-->2-Sheep (y=97, x=87, store=523.8253021240234) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=71, x=113, store=344.51744079589844) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=71, x=113, store=344.51744079589844). Will move normally and eat
-->3-Sheep (y=71, x=113, store=344.51744079589844) before normal moving and eating
-->3-Sheep (y=70, x=114, store=354.51744079589844) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=69, x=116, store=475.6437683105469) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=69, x=116, store=475.6437683105469). Will move normally and eat
-->4-Sheep (y=69, x=116, store=475.6437683105469) before normal moving and eating
-->4-Sheep (y=70, x=115, store=485.6437683105469) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=89, x=91, store=570.4376983642578) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=89, x=91, store=570.4376983642578). Will move normally and eat
-->5-Sheep (y=89, x=91, store=570.4376983642578) before normal moving and eating
-->5-Sheep (y=90, x=92, store=580.4376983642578) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=92, x=91, store=523.8253021240234) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=92, x=91, store=523.8253021240234). Will move normally and eat
-->6-Sheep (y=92, x=91, store=523.8253021240234) before normal moving and eating
-->6-Sheep (y=91, x=92, store=533.8253021240234) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=69, x=110, store=485.6437683105469) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=69, x=110, store=485.6437683105469). Will move normally and eat
-->7-Sheep (y=69, x=110, store=485.6437683105469) before normal moving and eating
-->7-Sheep (y=70, x=111, store=495.6437683105469) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________


-> ------------ 8-Sheep initialised with (y=95, x=87, store=410.4345703125) -----------
--> 8-Sheep looping with 0-Wolf.
--> 8-Sheep looping with 1-Wolf.
--> 8-Sheep looping with 2-Wolf.
--> 8-Sheep looping with 3-Wolf.
--> 8-Sheep looping with 4-Wolf.
--> 8-Sheep looping with 5-Wolf.
--> 8-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->8-Sheep has Store < Min_ernergy(600) (y=95, x=87, store=410.4345703125). Will move normally and eat
-->8-Sheep (y=95, x=87, store=410.4345703125) before normal moving and eating
-->8-Sheep (y=94, x=88, store=420.4345703125) after normal moving and eating
___e2________ 8-Sheep moved normally and ate ___________


-> ------------ 9-Sheep initialised with (y=77, x=128, store=520) -----------
--> 9-Sheep looping with 0-Wolf.
--> 9-Sheep looping with 1-Wolf.
--> 9-Sheep looping with 2-Wolf.
--> 9-Sheep looping with 3-Wolf.
--> 9-Sheep looping with 4-Wolf.
--> 9-Sheep looping with 5-Wolf.
--> 9-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->9-Sheep has Store < Min_ernergy(600) (y=77, x=128, store=520). Will move normally and eat
-->9-Sheep (y=77, x=128, store=520) before normal moving and eating
-->9-Sheep (y=76, x=127, store=530) after normal moving and eating
___e2________ 9-Sheep moved normally and ate ___________


-> ------------ 10-Sheep initialised with (y=108, x=101, store=390) -----------
--> 10-Sheep looping with 0-Wolf.
--> 10-Sheep looping with 1-Wolf.
--> 10-Sheep looping with 2-Wolf.
--> 10-Sheep looping with 3-Wolf.
--> 10-Sheep looping with 4-Wolf.
--> 10-Sheep looping with 5-Wolf.
--> 10-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->10-Sheep has Store < Min_ernergy(600) (y=108, x=101, store=390). Will move normally and eat
-->10-Sheep (y=108, x=101, store=390) before normal moving and eating
-->10-Sheep (y=109, x=102, store=400) after normal moving and eating
___e2________ 10-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=251, x=48, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=251, x=48, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
---> 0-Wolf looping with 8-Sheep
---> 0-Wolf looping with 9-Sheep
---> 0-Wolf looping with 10-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=251, x=48, store=100) before normal moving
-->else1 ends: 0-Wolf (y=252, x=49, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=106, x=271, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=106, x=271, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
---> 1-Wolf looping with 8-Sheep
---> 1-Wolf looping with 9-Sheep
---> 1-Wolf looping with 10-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=106, x=271, store=300) before normal moving
-->else1 ends: 1-Wolf (y=107, x=272, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=224, x=112, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=224, x=112, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
---> 2-Wolf looping with 8-Sheep
---> 2-Wolf looping with 9-Sheep
---> 2-Wolf looping with 10-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=224, x=112, store=200) before normal moving
-->else1 ends: 2-Wolf (y=225, x=113, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=68, x=4, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=68, x=4, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
---> 3-Wolf looping with 8-Sheep
---> 3-Wolf looping with 9-Sheep
---> 3-Wolf looping with 10-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=68, x=4, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=67, x=5, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=48, x=18, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=48, x=18, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
---> 4-Wolf looping with 8-Sheep
---> 4-Wolf looping with 9-Sheep
---> 4-Wolf looping with 10-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=48, x=18, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=49, x=17, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=42, x=1, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=42, x=1, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
---> 5-Wolf looping with 8-Sheep
---> 5-Wolf looping with 9-Sheep
---> 5-Wolf looping with 10-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=42, x=1, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=41, x=0, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=54, x=4, store=836.0) --------
--> 6-Wolf has > 500 store (y=54, x=4, store=836.0) and Random >= 0.5. so will try to find CW to move closer or breed/fight if within AD(5).
-> No CW found. although store >500 and p>=0.5!
--->else2 begins: 6-Wolf (y=54, x=4, store=836.0) before normal moving.
--->else2 begins: 6-Wolf (y=55, x=5, store=836.0) after normal moving.
.... el2 _______  6-Wolf moved normally _______ 
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 179 ************

-> ------------ 0-Sheep initialised with (y=89, x=85, store=570.4376983642578) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=89, x=85, store=570.4376983642578). Will move normally and eat
-->0-Sheep (y=89, x=85, store=570.4376983642578) before normal moving and eating
-->0-Sheep (y=88, x=84, store=580.4376983642578) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=76, x=113, store=344.51744079589844) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=76, x=113, store=344.51744079589844). Will move normally and eat
-->1-Sheep (y=76, x=113, store=344.51744079589844) before normal moving and eating
-->1-Sheep (y=75, x=114, store=354.51744079589844) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=97, x=87, store=523.8253021240234) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=97, x=87, store=523.8253021240234). Will move normally and eat
-->2-Sheep (y=97, x=87, store=523.8253021240234) before normal moving and eating
-->2-Sheep (y=96, x=86, store=533.8253021240234) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=70, x=114, store=354.51744079589844) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=70, x=114, store=354.51744079589844). Will move normally and eat
-->3-Sheep (y=70, x=114, store=354.51744079589844) before normal moving and eating
-->3-Sheep (y=69, x=115, store=364.51744079589844) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=70, x=115, store=485.6437683105469) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=70, x=115, store=485.6437683105469). Will move normally and eat
-->4-Sheep (y=70, x=115, store=485.6437683105469) before normal moving and eating
-->4-Sheep (y=69, x=116, store=495.6437683105469) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=90, x=92, store=580.4376983642578) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=90, x=92, store=580.4376983642578). Will move normally and eat
-->5-Sheep (y=90, x=92, store=580.4376983642578) before normal moving and eating
-->5-Sheep (y=91, x=93, store=590.4376983642578) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=91, x=92, store=533.8253021240234) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=91, x=92, store=533.8253021240234). Will move normally and eat
-->6-Sheep (y=91, x=92, store=533.8253021240234) before normal moving and eating
-->6-Sheep (y=90, x=93, store=543.8253021240234) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=70, x=111, store=495.6437683105469) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=70, x=111, store=495.6437683105469). Will move normally and eat
-->7-Sheep (y=70, x=111, store=495.6437683105469) before normal moving and eating
-->7-Sheep (y=71, x=112, store=505.6437683105469) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________


-> ------------ 8-Sheep initialised with (y=94, x=88, store=420.4345703125) -----------
--> 8-Sheep looping with 0-Wolf.
--> 8-Sheep looping with 1-Wolf.
--> 8-Sheep looping with 2-Wolf.
--> 8-Sheep looping with 3-Wolf.
--> 8-Sheep looping with 4-Wolf.
--> 8-Sheep looping with 5-Wolf.
--> 8-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->8-Sheep has Store < Min_ernergy(600) (y=94, x=88, store=420.4345703125). Will move normally and eat
-->8-Sheep (y=94, x=88, store=420.4345703125) before normal moving and eating
-->8-Sheep (y=95, x=87, store=430.4345703125) after normal moving and eating
___e2________ 8-Sheep moved normally and ate ___________


-> ------------ 9-Sheep initialised with (y=76, x=127, store=530) -----------
--> 9-Sheep looping with 0-Wolf.
--> 9-Sheep looping with 1-Wolf.
--> 9-Sheep looping with 2-Wolf.
--> 9-Sheep looping with 3-Wolf.
--> 9-Sheep looping with 4-Wolf.
--> 9-Sheep looping with 5-Wolf.
--> 9-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->9-Sheep has Store < Min_ernergy(600) (y=76, x=127, store=530). Will move normally and eat
-->9-Sheep (y=76, x=127, store=530) before normal moving and eating
-->9-Sheep (y=75, x=126, store=540) after normal moving and eating
___e2________ 9-Sheep moved normally and ate ___________


-> ------------ 10-Sheep initialised with (y=109, x=102, store=400) -----------
--> 10-Sheep looping with 0-Wolf.
--> 10-Sheep looping with 1-Wolf.
--> 10-Sheep looping with 2-Wolf.
--> 10-Sheep looping with 3-Wolf.
--> 10-Sheep looping with 4-Wolf.
--> 10-Sheep looping with 5-Wolf.
--> 10-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->10-Sheep has Store < Min_ernergy(600) (y=109, x=102, store=400). Will move normally and eat
-->10-Sheep (y=109, x=102, store=400) before normal moving and eating
-->10-Sheep (y=108, x=101, store=410) after normal moving and eating
___e2________ 10-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=252, x=49, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=252, x=49, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
---> 0-Wolf looping with 8-Sheep
---> 0-Wolf looping with 9-Sheep
---> 0-Wolf looping with 10-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=252, x=49, store=100) before normal moving
-->else1 ends: 0-Wolf (y=251, x=48, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=107, x=272, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=107, x=272, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
---> 1-Wolf looping with 8-Sheep
---> 1-Wolf looping with 9-Sheep
---> 1-Wolf looping with 10-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=107, x=272, store=300) before normal moving
-->else1 ends: 1-Wolf (y=108, x=271, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=225, x=113, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=225, x=113, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
---> 2-Wolf looping with 8-Sheep
---> 2-Wolf looping with 9-Sheep
---> 2-Wolf looping with 10-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=225, x=113, store=200) before normal moving
-->else1 ends: 2-Wolf (y=226, x=112, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=67, x=5, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=67, x=5, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
---> 3-Wolf looping with 8-Sheep
---> 3-Wolf looping with 9-Sheep
---> 3-Wolf looping with 10-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=67, x=5, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=68, x=4, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=49, x=17, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=49, x=17, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
---> 4-Wolf looping with 8-Sheep
---> 4-Wolf looping with 9-Sheep
---> 4-Wolf looping with 10-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=49, x=17, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=48, x=16, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=41, x=0, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=41, x=0, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
---> 5-Wolf looping with 8-Sheep
---> 5-Wolf looping with 9-Sheep
---> 5-Wolf looping with 10-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=41, x=0, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=40, x=1, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=55, x=5, store=836.0) --------
--> if and elif not satisfied
--> 6-Wolf has > Min_energy(500) store (y=55, x=5, store=836.0) but Random < bf_e/2(0.25). So will move normally.
--->else3 begins: 6-Wolf (y=55, x=5, store=836.0) before normal moving.
--->else3 begins: 6-Wolf (y=56, x=6, store=836.0) after normal moving.
....e3_______ 6-Wolf moved normally_______
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 180 ************

-> ------------ 0-Sheep initialised with (y=88, x=84, store=580.4376983642578) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=88, x=84, store=580.4376983642578). Will move normally and eat
-->0-Sheep (y=88, x=84, store=580.4376983642578) before normal moving and eating
-->0-Sheep (y=87, x=85, store=590.4376983642578) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=75, x=114, store=354.51744079589844) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=75, x=114, store=354.51744079589844). Will move normally and eat
-->1-Sheep (y=75, x=114, store=354.51744079589844) before normal moving and eating
-->1-Sheep (y=74, x=113, store=364.51744079589844) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=96, x=86, store=533.8253021240234) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=96, x=86, store=533.8253021240234). Will move normally and eat
-->2-Sheep (y=96, x=86, store=533.8253021240234) before normal moving and eating
-->2-Sheep (y=97, x=85, store=543.8253021240234) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=69, x=115, store=364.51744079589844) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=69, x=115, store=364.51744079589844). Will move normally and eat
-->3-Sheep (y=69, x=115, store=364.51744079589844) before normal moving and eating
-->3-Sheep (y=68, x=116, store=374.51744079589844) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=69, x=116, store=495.6437683105469) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=69, x=116, store=495.6437683105469). Will move normally and eat
-->4-Sheep (y=69, x=116, store=495.6437683105469) before normal moving and eating
-->4-Sheep (y=70, x=117, store=505.6437683105469) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=91, x=93, store=590.4376983642578) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=91, x=93, store=590.4376983642578). Will move normally and eat
-->5-Sheep (y=91, x=93, store=590.4376983642578) before normal moving and eating
-->5-Sheep (y=90, x=92, store=600.4376983642578) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=90, x=93, store=543.8253021240234) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=90, x=93, store=543.8253021240234). Will move normally and eat
-->6-Sheep (y=90, x=93, store=543.8253021240234) before normal moving and eating
-->6-Sheep (y=89, x=92, store=553.8253021240234) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=71, x=112, store=505.6437683105469) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=71, x=112, store=505.6437683105469). Will move normally and eat
-->7-Sheep (y=71, x=112, store=505.6437683105469) before normal moving and eating
-->7-Sheep (y=70, x=111, store=515.6437683105469) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________


-> ------------ 8-Sheep initialised with (y=95, x=87, store=430.4345703125) -----------
--> 8-Sheep looping with 0-Wolf.
--> 8-Sheep looping with 1-Wolf.
--> 8-Sheep looping with 2-Wolf.
--> 8-Sheep looping with 3-Wolf.
--> 8-Sheep looping with 4-Wolf.
--> 8-Sheep looping with 5-Wolf.
--> 8-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->8-Sheep has Store < Min_ernergy(600) (y=95, x=87, store=430.4345703125). Will move normally and eat
-->8-Sheep (y=95, x=87, store=430.4345703125) before normal moving and eating
-->8-Sheep (y=94, x=88, store=440.4345703125) after normal moving and eating
___e2________ 8-Sheep moved normally and ate ___________


-> ------------ 9-Sheep initialised with (y=75, x=126, store=540) -----------
--> 9-Sheep looping with 0-Wolf.
--> 9-Sheep looping with 1-Wolf.
--> 9-Sheep looping with 2-Wolf.
--> 9-Sheep looping with 3-Wolf.
--> 9-Sheep looping with 4-Wolf.
--> 9-Sheep looping with 5-Wolf.
--> 9-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->9-Sheep has Store < Min_ernergy(600) (y=75, x=126, store=540). Will move normally and eat
-->9-Sheep (y=75, x=126, store=540) before normal moving and eating
-->9-Sheep (y=76, x=125, store=550) after normal moving and eating
___e2________ 9-Sheep moved normally and ate ___________


-> ------------ 10-Sheep initialised with (y=108, x=101, store=410) -----------
--> 10-Sheep looping with 0-Wolf.
--> 10-Sheep looping with 1-Wolf.
--> 10-Sheep looping with 2-Wolf.
--> 10-Sheep looping with 3-Wolf.
--> 10-Sheep looping with 4-Wolf.
--> 10-Sheep looping with 5-Wolf.
--> 10-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->10-Sheep has Store < Min_ernergy(600) (y=108, x=101, store=410). Will move normally and eat
-->10-Sheep (y=108, x=101, store=410) before normal moving and eating
-->10-Sheep (y=109, x=102, store=420) after normal moving and eating
___e2________ 10-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=251, x=48, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=251, x=48, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
---> 0-Wolf looping with 8-Sheep
---> 0-Wolf looping with 9-Sheep
---> 0-Wolf looping with 10-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=251, x=48, store=100) before normal moving
-->else1 ends: 0-Wolf (y=250, x=47, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=108, x=271, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=108, x=271, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
---> 1-Wolf looping with 8-Sheep
---> 1-Wolf looping with 9-Sheep
---> 1-Wolf looping with 10-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=108, x=271, store=300) before normal moving
-->else1 ends: 1-Wolf (y=109, x=270, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=226, x=112, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=226, x=112, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
---> 2-Wolf looping with 8-Sheep
---> 2-Wolf looping with 9-Sheep
---> 2-Wolf looping with 10-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=226, x=112, store=200) before normal moving
-->else1 ends: 2-Wolf (y=227, x=111, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=68, x=4, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=68, x=4, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
---> 3-Wolf looping with 8-Sheep
---> 3-Wolf looping with 9-Sheep
---> 3-Wolf looping with 10-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=68, x=4, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=67, x=5, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=48, x=16, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=48, x=16, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
---> 4-Wolf looping with 8-Sheep
---> 4-Wolf looping with 9-Sheep
---> 4-Wolf looping with 10-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=48, x=16, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=49, x=15, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=40, x=1, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=40, x=1, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
---> 5-Wolf looping with 8-Sheep
---> 5-Wolf looping with 9-Sheep
---> 5-Wolf looping with 10-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=40, x=1, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=39, x=0, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=56, x=6, store=836.0) --------
--> if and elif not satisfied
--> 6-Wolf has > Min_energy(500) store (y=56, x=6, store=836.0) but Random < bf_e/2(0.25). So will move normally.
--->else3 begins: 6-Wolf (y=56, x=6, store=836.0) before normal moving.
--->else3 begins: 6-Wolf (y=55, x=7, store=836.0) after normal moving.
....e3_______ 6-Wolf moved normally_______
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 181 ************

-> ------------ 0-Sheep initialised with (y=87, x=85, store=590.4376983642578) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=87, x=85, store=590.4376983642578). Will move normally and eat
-->0-Sheep (y=87, x=85, store=590.4376983642578) before normal moving and eating
-->0-Sheep (y=86, x=84, store=600.4376983642578) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=74, x=113, store=364.51744079589844) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=74, x=113, store=364.51744079589844). Will move normally and eat
-->1-Sheep (y=74, x=113, store=364.51744079589844) before normal moving and eating
-->1-Sheep (y=73, x=114, store=374.51744079589844) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=97, x=85, store=543.8253021240234) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=97, x=85, store=543.8253021240234). Will move normally and eat
-->2-Sheep (y=97, x=85, store=543.8253021240234) before normal moving and eating
-->2-Sheep (y=98, x=84, store=553.8253021240234) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=68, x=116, store=374.51744079589844) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=68, x=116, store=374.51744079589844). Will move normally and eat
-->3-Sheep (y=68, x=116, store=374.51744079589844) before normal moving and eating
-->3-Sheep (y=69, x=117, store=384.51744079589844) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=70, x=117, store=505.6437683105469) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=70, x=117, store=505.6437683105469). Will move normally and eat
-->4-Sheep (y=70, x=117, store=505.6437683105469) before normal moving and eating
-->4-Sheep (y=71, x=118, store=515.6437683105469) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=90, x=92, store=600.4376983642578) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store > Min_ernergy(600) (y=90, x=92, store=600.4376983642578).
--> 5-Sheep looping with 0-Sheep.
----> D <=AD. Sheep Breeding/Sharing proximity of 1.0(<=5) entered by CS 5-Sheep (y=90, x=92, store=600.4376983642578) with CS 0-Sheep (y=89, x=92, store=553.8253021240234).
-----> 5-Sheep (y=90, x=92, store=600.4376983642578) and CS 0-Sheep (y=89, x=92, store=553.8253021240234 will not mate as CS 0-Sheep store <600. They will share resource to become average.
-----> Shared resources = True
-----> 5-Sheep (y=90, x=92, store=577.1315002441406) and CS 0-Sheep (y=89, x=92, store=577.1315002441406) after sharing resources!
_____________ 5-Sheep and CS 0-Sheep shared resources ____________
_______ Breeding=False, Failed breeding=False, Share=True for 5-Sheep __________

-> ------------ 6-Sheep initialised with (y=89, x=92, store=577.1315002441406) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=89, x=92, store=577.1315002441406). Will move normally and eat
-->6-Sheep (y=89, x=92, store=577.1315002441406) before normal moving and eating
-->6-Sheep (y=90, x=91, store=587.1315002441406) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=70, x=111, store=515.6437683105469) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=70, x=111, store=515.6437683105469). Will move normally and eat
-->7-Sheep (y=70, x=111, store=515.6437683105469) before normal moving and eating
-->7-Sheep (y=71, x=110, store=525.6437683105469) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________


-> ------------ 8-Sheep initialised with (y=94, x=88, store=440.4345703125) -----------
--> 8-Sheep looping with 0-Wolf.
--> 8-Sheep looping with 1-Wolf.
--> 8-Sheep looping with 2-Wolf.
--> 8-Sheep looping with 3-Wolf.
--> 8-Sheep looping with 4-Wolf.
--> 8-Sheep looping with 5-Wolf.
--> 8-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->8-Sheep has Store < Min_ernergy(600) (y=94, x=88, store=440.4345703125). Will move normally and eat
-->8-Sheep (y=94, x=88, store=440.4345703125) before normal moving and eating
-->8-Sheep (y=93, x=89, store=450.4345703125) after normal moving and eating
___e2________ 8-Sheep moved normally and ate ___________


-> ------------ 9-Sheep initialised with (y=76, x=125, store=550) -----------
--> 9-Sheep looping with 0-Wolf.
--> 9-Sheep looping with 1-Wolf.
--> 9-Sheep looping with 2-Wolf.
--> 9-Sheep looping with 3-Wolf.
--> 9-Sheep looping with 4-Wolf.
--> 9-Sheep looping with 5-Wolf.
--> 9-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->9-Sheep has Store < Min_ernergy(600) (y=76, x=125, store=550). Will move normally and eat
-->9-Sheep (y=76, x=125, store=550) before normal moving and eating
-->9-Sheep (y=77, x=126, store=560) after normal moving and eating
___e2________ 9-Sheep moved normally and ate ___________


-> ------------ 10-Sheep initialised with (y=109, x=102, store=420) -----------
--> 10-Sheep looping with 0-Wolf.
--> 10-Sheep looping with 1-Wolf.
--> 10-Sheep looping with 2-Wolf.
--> 10-Sheep looping with 3-Wolf.
--> 10-Sheep looping with 4-Wolf.
--> 10-Sheep looping with 5-Wolf.
--> 10-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->10-Sheep has Store < Min_ernergy(600) (y=109, x=102, store=420). Will move normally and eat
-->10-Sheep (y=109, x=102, store=420) before normal moving and eating
-->10-Sheep (y=108, x=103, store=430) after normal moving and eating
___e2________ 10-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=250, x=47, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=250, x=47, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
---> 0-Wolf looping with 8-Sheep
---> 0-Wolf looping with 9-Sheep
---> 0-Wolf looping with 10-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=250, x=47, store=100) before normal moving
-->else1 ends: 0-Wolf (y=251, x=46, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=109, x=270, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=109, x=270, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
---> 1-Wolf looping with 8-Sheep
---> 1-Wolf looping with 9-Sheep
---> 1-Wolf looping with 10-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=109, x=270, store=300) before normal moving
-->else1 ends: 1-Wolf (y=108, x=271, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=227, x=111, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=227, x=111, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
---> 2-Wolf looping with 8-Sheep
---> 2-Wolf looping with 9-Sheep
---> 2-Wolf looping with 10-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=227, x=111, store=200) before normal moving
-->else1 ends: 2-Wolf (y=228, x=110, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=67, x=5, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=67, x=5, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
---> 3-Wolf looping with 8-Sheep
---> 3-Wolf looping with 9-Sheep
---> 3-Wolf looping with 10-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=67, x=5, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=68, x=6, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=49, x=15, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=49, x=15, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
---> 4-Wolf looping with 8-Sheep
---> 4-Wolf looping with 9-Sheep
---> 4-Wolf looping with 10-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=49, x=15, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=48, x=16, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=39, x=0, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=39, x=0, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
---> 5-Wolf looping with 8-Sheep
---> 5-Wolf looping with 9-Sheep
---> 5-Wolf looping with 10-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=39, x=0, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=40, x=1, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=55, x=7, store=836.0) --------
--> if and elif not satisfied
--> 6-Wolf has > Min_energy(500) store (y=55, x=7, store=836.0) but Random < bf_e/2(0.25). So will move normally.
--->else3 begins: 6-Wolf (y=55, x=7, store=836.0) before normal moving.
--->else3 begins: 6-Wolf (y=54, x=6, store=836.0) after normal moving.
....e3_______ 6-Wolf moved normally_______
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 182 ************

-> ------------ 0-Sheep initialised with (y=86, x=84, store=600.4376983642578) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store > Min_ernergy(600) (y=86, x=84, store=600.4376983642578).
--> 0-Sheep looping with 0-Sheep.
--> 0-Sheep looping with 1-Sheep.
----> ---- (AD < D < MD).
----> Min distance=12.0 for 0-Sheep (y=86, x=84, store=600.4376983642578) with 1-Sheep (y=98, x=84, store=553.8253021240234).
--> 0-Sheep looping with 2-Sheep.
--> 0-Sheep looping with 3-Sheep.
--> 0-Sheep looping with 4-Sheep.
----> ---- (AD < D < MD).
----> Min distance=8.94427190999916 for 0-Sheep (y=86, x=84, store=600.4376983642578) with 4-Sheep (y=90, x=92, store=577.1315002441406).
--> 0-Sheep looping with 5-Sheep.
----> ---- (AD < D < MD).
----> Min distance=8.06225774829855 for 0-Sheep (y=86, x=84, store=600.4376983642578) with 5-Sheep (y=90, x=91, store=587.1315002441406).
--> 0-Sheep looping with 6-Sheep.
--> 0-Sheep looping with 7-Sheep.
--> 0-Sheep looping with 8-Sheep.
--> 0-Sheep looping with 9-Sheep.
->CS Found!
-> 0-Sheep (y=86, x=84, store=600.4376983642578) before moving closer (while eating) to CS-Sheep: (y=90, x=91, store=587.1315002441406).
-> 0-Wolf (y=88, x=87, store=610.4376983642578) after moving closer (while eating) to CS-Sheep: (y=90, x=91, store=587.1315002441406).
___________ 0-Sheep moved closer CS___________


-> ------------ 1-Sheep initialised with (y=73, x=114, store=374.51744079589844) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=73, x=114, store=374.51744079589844). Will move normally and eat
-->1-Sheep (y=73, x=114, store=374.51744079589844) before normal moving and eating
-->1-Sheep (y=72, x=115, store=384.51744079589844) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=98, x=84, store=553.8253021240234) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=98, x=84, store=553.8253021240234). Will move normally and eat
-->2-Sheep (y=98, x=84, store=553.8253021240234) before normal moving and eating
-->2-Sheep (y=99, x=85, store=563.8253021240234) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=69, x=117, store=384.51744079589844) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=69, x=117, store=384.51744079589844). Will move normally and eat
-->3-Sheep (y=69, x=117, store=384.51744079589844) before normal moving and eating
-->3-Sheep (y=70, x=118, store=394.51744079589844) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=71, x=118, store=515.6437683105469) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=71, x=118, store=515.6437683105469). Will move normally and eat
-->4-Sheep (y=71, x=118, store=515.6437683105469) before normal moving and eating
-->4-Sheep (y=72, x=119, store=525.6437683105469) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=90, x=92, store=577.1315002441406) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=90, x=92, store=577.1315002441406). Will move normally and eat
-->5-Sheep (y=90, x=92, store=577.1315002441406) before normal moving and eating
-->5-Sheep (y=91, x=93, store=587.1315002441406) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=90, x=91, store=587.1315002441406) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=90, x=91, store=587.1315002441406). Will move normally and eat
-->6-Sheep (y=90, x=91, store=587.1315002441406) before normal moving and eating
-->6-Sheep (y=89, x=90, store=597.1315002441406) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=71, x=110, store=525.6437683105469) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=71, x=110, store=525.6437683105469). Will move normally and eat
-->7-Sheep (y=71, x=110, store=525.6437683105469) before normal moving and eating
-->7-Sheep (y=70, x=109, store=535.6437683105469) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________


-> ------------ 8-Sheep initialised with (y=93, x=89, store=450.4345703125) -----------
--> 8-Sheep looping with 0-Wolf.
--> 8-Sheep looping with 1-Wolf.
--> 8-Sheep looping with 2-Wolf.
--> 8-Sheep looping with 3-Wolf.
--> 8-Sheep looping with 4-Wolf.
--> 8-Sheep looping with 5-Wolf.
--> 8-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->8-Sheep has Store < Min_ernergy(600) (y=93, x=89, store=450.4345703125). Will move normally and eat
-->8-Sheep (y=93, x=89, store=450.4345703125) before normal moving and eating
-->8-Sheep (y=92, x=90, store=460.4345703125) after normal moving and eating
___e2________ 8-Sheep moved normally and ate ___________


-> ------------ 9-Sheep initialised with (y=77, x=126, store=560) -----------
--> 9-Sheep looping with 0-Wolf.
--> 9-Sheep looping with 1-Wolf.
--> 9-Sheep looping with 2-Wolf.
--> 9-Sheep looping with 3-Wolf.
--> 9-Sheep looping with 4-Wolf.
--> 9-Sheep looping with 5-Wolf.
--> 9-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->9-Sheep has Store < Min_ernergy(600) (y=77, x=126, store=560). Will move normally and eat
-->9-Sheep (y=77, x=126, store=560) before normal moving and eating
-->9-Sheep (y=76, x=127, store=570) after normal moving and eating
___e2________ 9-Sheep moved normally and ate ___________


-> ------------ 10-Sheep initialised with (y=108, x=103, store=430) -----------
--> 10-Sheep looping with 0-Wolf.
--> 10-Sheep looping with 1-Wolf.
--> 10-Sheep looping with 2-Wolf.
--> 10-Sheep looping with 3-Wolf.
--> 10-Sheep looping with 4-Wolf.
--> 10-Sheep looping with 5-Wolf.
--> 10-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->10-Sheep has Store < Min_ernergy(600) (y=108, x=103, store=430). Will move normally and eat
-->10-Sheep (y=108, x=103, store=430) before normal moving and eating
-->10-Sheep (y=107, x=102, store=440) after normal moving and eating
___e2________ 10-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=251, x=46, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=251, x=46, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
---> 0-Wolf looping with 8-Sheep
---> 0-Wolf looping with 9-Sheep
---> 0-Wolf looping with 10-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=251, x=46, store=100) before normal moving
-->else1 ends: 0-Wolf (y=250, x=47, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=108, x=271, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=108, x=271, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
---> 1-Wolf looping with 8-Sheep
---> 1-Wolf looping with 9-Sheep
---> 1-Wolf looping with 10-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=108, x=271, store=300) before normal moving
-->else1 ends: 1-Wolf (y=109, x=272, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=228, x=110, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=228, x=110, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
---> 2-Wolf looping with 8-Sheep
---> 2-Wolf looping with 9-Sheep
---> 2-Wolf looping with 10-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=228, x=110, store=200) before normal moving
-->else1 ends: 2-Wolf (y=229, x=109, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=68, x=6, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=68, x=6, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
---> 3-Wolf looping with 8-Sheep
---> 3-Wolf looping with 9-Sheep
---> 3-Wolf looping with 10-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=68, x=6, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=69, x=5, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=48, x=16, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=48, x=16, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
---> 4-Wolf looping with 8-Sheep
---> 4-Wolf looping with 9-Sheep
---> 4-Wolf looping with 10-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=48, x=16, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=47, x=17, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=40, x=1, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=40, x=1, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
---> 5-Wolf looping with 8-Sheep
---> 5-Wolf looping with 9-Sheep
---> 5-Wolf looping with 10-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=40, x=1, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=39, x=0, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=54, x=6, store=836.0) --------
--> 6-Wolf has >Min_energy(500) store (y=54, x=6, store=836.0) and 0.25 <= random.random() < 0.5. Tries to find food (sheep).
---> 6-Wolf looping with 0-Sheep
---> 6-Wolf looping with 1-Sheep
---> 6-Wolf looping with 2-Sheep
---> 6-Wolf looping with 3-Sheep
---> 6-Wolf looping with 4-Sheep
---> 6-Wolf looping with 5-Sheep
---> 6-Wolf looping with 6-Sheep
---> 6-Wolf looping with 7-Sheep
---> 6-Wolf looping with 8-Sheep
---> 6-Wolf looping with 9-Sheep
---> 6-Wolf looping with 10-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 6-Wolf (y=54, x=6, store=836.0) before normal moving
-->else1 ends: 6-Wolf (y=53, x=5, store=836.0) after normal moving
....el1___________ 6-Wolf moved normally___________
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 183 ************

-> ------------ 0-Sheep initialised with (y=88, x=87, store=610.4376983642578) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store > Min_ernergy(600) (y=88, x=87, store=610.4376983642578).
--> 0-Sheep looping with 0-Sheep.
--> 0-Sheep looping with 1-Sheep.
----> ---- (AD < D < MD).
----> Min distance=11.180339887498949 for 0-Sheep (y=88, x=87, store=610.4376983642578) with 1-Sheep (y=99, x=85, store=563.8253021240234).
--> 0-Sheep looping with 2-Sheep.
--> 0-Sheep looping with 3-Sheep.
--> 0-Sheep looping with 4-Sheep.
----> ---- (AD < D < MD).
----> Min distance=6.708203932499369 for 0-Sheep (y=88, x=87, store=610.4376983642578) with 4-Sheep (y=91, x=93, store=587.1315002441406).
--> 0-Sheep looping with 5-Sheep.
----> D <=AD. Sheep Breeding/Sharing proximity of 3.1622776601683795(<=5) entered by CS 0-Sheep (y=88, x=87, store=610.4376983642578) with CS 5-Sheep (y=89, x=90, store=597.1315002441406).
-----> 0-Sheep (y=88, x=87, store=610.4376983642578) and CS 5-Sheep (y=89, x=90, store=597.1315002441406 will not mate as CS 5-Sheep store <600. They will share resource to become average.
-----> Shared resources = True
-----> 0-Sheep (y=88, x=87, store=603.7845993041992) and CS 5-Sheep (y=89, x=90, store=603.7845993041992) after sharing resources!
_____________ 0-Sheep and CS 5-Sheep shared resources ____________
_______ Breeding=False, Failed breeding=False, Share=True for 0-Sheep __________

-> ------------ 1-Sheep initialised with (y=72, x=115, store=384.51744079589844) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=72, x=115, store=384.51744079589844). Will move normally and eat
-->1-Sheep (y=72, x=115, store=384.51744079589844) before normal moving and eating
-->1-Sheep (y=71, x=114, store=394.51744079589844) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=99, x=85, store=563.8253021240234) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=99, x=85, store=563.8253021240234). Will move normally and eat
-->2-Sheep (y=99, x=85, store=563.8253021240234) before normal moving and eating
-->2-Sheep (y=98, x=84, store=573.8253021240234) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=70, x=118, store=394.51744079589844) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=70, x=118, store=394.51744079589844). Will move normally and eat
-->3-Sheep (y=70, x=118, store=394.51744079589844) before normal moving and eating
-->3-Sheep (y=69, x=119, store=404.51744079589844) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=72, x=119, store=525.6437683105469) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=72, x=119, store=525.6437683105469). Will move normally and eat
-->4-Sheep (y=72, x=119, store=525.6437683105469) before normal moving and eating
-->4-Sheep (y=71, x=118, store=535.6437683105469) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=91, x=93, store=587.1315002441406) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=91, x=93, store=587.1315002441406). Will move normally and eat
-->5-Sheep (y=91, x=93, store=587.1315002441406) before normal moving and eating
-->5-Sheep (y=90, x=94, store=597.1315002441406) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=89, x=90, store=603.7845993041992) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store > Min_ernergy(600) (y=89, x=90, store=603.7845993041992).
--> 6-Sheep looping with 0-Sheep.
--> 6-Sheep looping with 1-Sheep.
----> D <=AD. Sheep Breeding/Sharing proximity of 3.0(<=5) entered by CS 6-Sheep (y=89, x=90, store=603.7845993041992) with CS 1-Sheep (y=92, x=90, store=460.4345703125).
-----> 6-Sheep (y=89, x=90, store=603.7845993041992) and CS 1-Sheep (y=92, x=90, store=460.4345703125 will not mate as CS 1-Sheep store <600. They will share resource to become average.
-----> Shared resources = True
-----> 6-Sheep (y=89, x=90, store=532.1095848083496) and CS 1-Sheep (y=92, x=90, store=532.1095848083496) after sharing resources!
_____________ 6-Sheep and CS 1-Sheep shared resources ____________
_______ Breeding=False, Failed breeding=False, Share=True for 6-Sheep __________

-> ------------ 7-Sheep initialised with (y=70, x=109, store=535.6437683105469) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=70, x=109, store=535.6437683105469). Will move normally and eat
-->7-Sheep (y=70, x=109, store=535.6437683105469) before normal moving and eating
-->7-Sheep (y=69, x=108, store=545.6437683105469) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________


-> ------------ 8-Sheep initialised with (y=92, x=90, store=532.1095848083496) -----------
--> 8-Sheep looping with 0-Wolf.
--> 8-Sheep looping with 1-Wolf.
--> 8-Sheep looping with 2-Wolf.
--> 8-Sheep looping with 3-Wolf.
--> 8-Sheep looping with 4-Wolf.
--> 8-Sheep looping with 5-Wolf.
--> 8-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->8-Sheep has Store < Min_ernergy(600) (y=92, x=90, store=532.1095848083496). Will move normally and eat
-->8-Sheep (y=92, x=90, store=532.1095848083496) before normal moving and eating
-->8-Sheep (y=91, x=89, store=542.1095848083496) after normal moving and eating
___e2________ 8-Sheep moved normally and ate ___________


-> ------------ 9-Sheep initialised with (y=76, x=127, store=570) -----------
--> 9-Sheep looping with 0-Wolf.
--> 9-Sheep looping with 1-Wolf.
--> 9-Sheep looping with 2-Wolf.
--> 9-Sheep looping with 3-Wolf.
--> 9-Sheep looping with 4-Wolf.
--> 9-Sheep looping with 5-Wolf.
--> 9-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->9-Sheep has Store < Min_ernergy(600) (y=76, x=127, store=570). Will move normally and eat
-->9-Sheep (y=76, x=127, store=570) before normal moving and eating
-->9-Sheep (y=75, x=126, store=580) after normal moving and eating
___e2________ 9-Sheep moved normally and ate ___________


-> ------------ 10-Sheep initialised with (y=107, x=102, store=440) -----------
--> 10-Sheep looping with 0-Wolf.
--> 10-Sheep looping with 1-Wolf.
--> 10-Sheep looping with 2-Wolf.
--> 10-Sheep looping with 3-Wolf.
--> 10-Sheep looping with 4-Wolf.
--> 10-Sheep looping with 5-Wolf.
--> 10-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->10-Sheep has Store < Min_ernergy(600) (y=107, x=102, store=440). Will move normally and eat
-->10-Sheep (y=107, x=102, store=440) before normal moving and eating
-->10-Sheep (y=106, x=103, store=450) after normal moving and eating
___e2________ 10-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=250, x=47, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=250, x=47, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
---> 0-Wolf looping with 8-Sheep
---> 0-Wolf looping with 9-Sheep
---> 0-Wolf looping with 10-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=250, x=47, store=100) before normal moving
-->else1 ends: 0-Wolf (y=249, x=46, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=109, x=272, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=109, x=272, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
---> 1-Wolf looping with 8-Sheep
---> 1-Wolf looping with 9-Sheep
---> 1-Wolf looping with 10-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=109, x=272, store=300) before normal moving
-->else1 ends: 1-Wolf (y=108, x=273, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=229, x=109, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=229, x=109, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
---> 2-Wolf looping with 8-Sheep
---> 2-Wolf looping with 9-Sheep
---> 2-Wolf looping with 10-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=229, x=109, store=200) before normal moving
-->else1 ends: 2-Wolf (y=228, x=110, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=69, x=5, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=69, x=5, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
---> 3-Wolf looping with 8-Sheep
---> 3-Wolf looping with 9-Sheep
---> 3-Wolf looping with 10-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=69, x=5, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=70, x=6, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=47, x=17, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=47, x=17, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
---> 4-Wolf looping with 8-Sheep
---> 4-Wolf looping with 9-Sheep
---> 4-Wolf looping with 10-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=47, x=17, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=46, x=18, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=39, x=0, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=39, x=0, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
---> 5-Wolf looping with 8-Sheep
---> 5-Wolf looping with 9-Sheep
---> 5-Wolf looping with 10-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=39, x=0, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=38, x=1, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=53, x=5, store=836.0) --------
--> 6-Wolf has > 500 store (y=53, x=5, store=836.0) and Random >= 0.5. so will try to find CW to move closer or breed/fight if within AD(5).
-> No CW found. although store >500 and p>=0.5!
--->else2 begins: 6-Wolf (y=53, x=5, store=836.0) before normal moving.
--->else2 begins: 6-Wolf (y=52, x=6, store=836.0) after normal moving.
.... el2 _______  6-Wolf moved normally _______ 
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 184 ************

-> ------------ 0-Sheep initialised with (y=88, x=87, store=603.7845993041992) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store > Min_ernergy(600) (y=88, x=87, store=603.7845993041992).
--> 0-Sheep looping with 0-Sheep.
--> 0-Sheep looping with 1-Sheep.
----> ---- (AD < D < MD).
----> Min distance=10.44030650891055 for 0-Sheep (y=88, x=87, store=603.7845993041992) with 1-Sheep (y=98, x=84, store=573.8253021240234).
--> 0-Sheep looping with 2-Sheep.
--> 0-Sheep looping with 3-Sheep.
--> 0-Sheep looping with 4-Sheep.
----> ---- (AD < D < MD).
----> Min distance=7.280109889280518 for 0-Sheep (y=88, x=87, store=603.7845993041992) with 4-Sheep (y=90, x=94, store=597.1315002441406).
--> 0-Sheep looping with 5-Sheep.
----> D <=AD. Sheep Breeding/Sharing proximity of 3.1622776601683795(<=5) entered by CS 0-Sheep (y=88, x=87, store=603.7845993041992) with CS 5-Sheep (y=89, x=90, store=532.1095848083496).
-----> 0-Sheep (y=88, x=87, store=603.7845993041992) and CS 5-Sheep (y=89, x=90, store=532.1095848083496 will not mate as CS 5-Sheep store <600. They will share resource to become average.
-----> Shared resources = True
-----> 0-Sheep (y=88, x=87, store=567.9470920562744) and CS 5-Sheep (y=89, x=90, store=567.9470920562744) after sharing resources!
_____________ 0-Sheep and CS 5-Sheep shared resources ____________
_______ Breeding=False, Failed breeding=False, Share=True for 0-Sheep __________

-> ------------ 1-Sheep initialised with (y=71, x=114, store=394.51744079589844) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=71, x=114, store=394.51744079589844). Will move normally and eat
-->1-Sheep (y=71, x=114, store=394.51744079589844) before normal moving and eating
-->1-Sheep (y=70, x=115, store=404.51744079589844) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=98, x=84, store=573.8253021240234) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=98, x=84, store=573.8253021240234). Will move normally and eat
-->2-Sheep (y=98, x=84, store=573.8253021240234) before normal moving and eating
-->2-Sheep (y=97, x=85, store=583.8253021240234) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=69, x=119, store=404.51744079589844) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=69, x=119, store=404.51744079589844). Will move normally and eat
-->3-Sheep (y=69, x=119, store=404.51744079589844) before normal moving and eating
-->3-Sheep (y=68, x=118, store=414.51744079589844) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=71, x=118, store=535.6437683105469) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=71, x=118, store=535.6437683105469). Will move normally and eat
-->4-Sheep (y=71, x=118, store=535.6437683105469) before normal moving and eating
-->4-Sheep (y=72, x=119, store=545.6437683105469) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=90, x=94, store=597.1315002441406) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=90, x=94, store=597.1315002441406). Will move normally and eat
-->5-Sheep (y=90, x=94, store=597.1315002441406) before normal moving and eating
-->5-Sheep (y=91, x=93, store=607.1315002441406) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=89, x=90, store=567.9470920562744) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=89, x=90, store=567.9470920562744). Will move normally and eat
-->6-Sheep (y=89, x=90, store=567.9470920562744) before normal moving and eating
-->6-Sheep (y=88, x=89, store=577.9470920562744) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=69, x=108, store=545.6437683105469) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=69, x=108, store=545.6437683105469). Will move normally and eat
-->7-Sheep (y=69, x=108, store=545.6437683105469) before normal moving and eating
-->7-Sheep (y=70, x=107, store=555.6437683105469) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________


-> ------------ 8-Sheep initialised with (y=91, x=89, store=542.1095848083496) -----------
--> 8-Sheep looping with 0-Wolf.
--> 8-Sheep looping with 1-Wolf.
--> 8-Sheep looping with 2-Wolf.
--> 8-Sheep looping with 3-Wolf.
--> 8-Sheep looping with 4-Wolf.
--> 8-Sheep looping with 5-Wolf.
--> 8-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->8-Sheep has Store < Min_ernergy(600) (y=91, x=89, store=542.1095848083496). Will move normally and eat
-->8-Sheep (y=91, x=89, store=542.1095848083496) before normal moving and eating
-->8-Sheep (y=90, x=90, store=552.1095848083496) after normal moving and eating
___e2________ 8-Sheep moved normally and ate ___________


-> ------------ 9-Sheep initialised with (y=75, x=126, store=580) -----------
--> 9-Sheep looping with 0-Wolf.
--> 9-Sheep looping with 1-Wolf.
--> 9-Sheep looping with 2-Wolf.
--> 9-Sheep looping with 3-Wolf.
--> 9-Sheep looping with 4-Wolf.
--> 9-Sheep looping with 5-Wolf.
--> 9-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->9-Sheep has Store < Min_ernergy(600) (y=75, x=126, store=580). Will move normally and eat
-->9-Sheep (y=75, x=126, store=580) before normal moving and eating
-->9-Sheep (y=76, x=127, store=590) after normal moving and eating
___e2________ 9-Sheep moved normally and ate ___________


-> ------------ 10-Sheep initialised with (y=106, x=103, store=450) -----------
--> 10-Sheep looping with 0-Wolf.
--> 10-Sheep looping with 1-Wolf.
--> 10-Sheep looping with 2-Wolf.
--> 10-Sheep looping with 3-Wolf.
--> 10-Sheep looping with 4-Wolf.
--> 10-Sheep looping with 5-Wolf.
--> 10-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->10-Sheep has Store < Min_ernergy(600) (y=106, x=103, store=450). Will move normally and eat
-->10-Sheep (y=106, x=103, store=450) before normal moving and eating
-->10-Sheep (y=107, x=104, store=460) after normal moving and eating
___e2________ 10-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=249, x=46, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=249, x=46, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
---> 0-Wolf looping with 8-Sheep
---> 0-Wolf looping with 9-Sheep
---> 0-Wolf looping with 10-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=249, x=46, store=100) before normal moving
-->else1 ends: 0-Wolf (y=248, x=47, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=108, x=273, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=108, x=273, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
---> 1-Wolf looping with 8-Sheep
---> 1-Wolf looping with 9-Sheep
---> 1-Wolf looping with 10-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=108, x=273, store=300) before normal moving
-->else1 ends: 1-Wolf (y=109, x=272, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=228, x=110, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=228, x=110, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
---> 2-Wolf looping with 8-Sheep
---> 2-Wolf looping with 9-Sheep
---> 2-Wolf looping with 10-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=228, x=110, store=200) before normal moving
-->else1 ends: 2-Wolf (y=229, x=109, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=70, x=6, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=70, x=6, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
---> 3-Wolf looping with 8-Sheep
---> 3-Wolf looping with 9-Sheep
---> 3-Wolf looping with 10-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=70, x=6, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=69, x=7, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=46, x=18, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=46, x=18, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
---> 4-Wolf looping with 8-Sheep
---> 4-Wolf looping with 9-Sheep
---> 4-Wolf looping with 10-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=46, x=18, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=47, x=17, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=38, x=1, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=38, x=1, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
---> 5-Wolf looping with 8-Sheep
---> 5-Wolf looping with 9-Sheep
---> 5-Wolf looping with 10-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=38, x=1, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=37, x=0, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=52, x=6, store=836.0) --------
--> 6-Wolf has > 500 store (y=52, x=6, store=836.0) and Random >= 0.5. so will try to find CW to move closer or breed/fight if within AD(5).
-> No CW found. although store >500 and p>=0.5!
--->else2 begins: 6-Wolf (y=52, x=6, store=836.0) before normal moving.
--->else2 begins: 6-Wolf (y=53, x=7, store=836.0) after normal moving.
.... el2 _______  6-Wolf moved normally _______ 
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 185 ************

-> ------------ 0-Sheep initialised with (y=88, x=87, store=567.9470920562744) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=88, x=87, store=567.9470920562744). Will move normally and eat
-->0-Sheep (y=88, x=87, store=567.9470920562744) before normal moving and eating
-->0-Sheep (y=89, x=86, store=577.9470920562744) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=70, x=115, store=404.51744079589844) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=70, x=115, store=404.51744079589844). Will move normally and eat
-->1-Sheep (y=70, x=115, store=404.51744079589844) before normal moving and eating
-->1-Sheep (y=71, x=116, store=414.51744079589844) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=97, x=85, store=583.8253021240234) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=97, x=85, store=583.8253021240234). Will move normally and eat
-->2-Sheep (y=97, x=85, store=583.8253021240234) before normal moving and eating
-->2-Sheep (y=98, x=86, store=593.8253021240234) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=68, x=118, store=414.51744079589844) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=68, x=118, store=414.51744079589844). Will move normally and eat
-->3-Sheep (y=68, x=118, store=414.51744079589844) before normal moving and eating
-->3-Sheep (y=67, x=119, store=424.51744079589844) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=72, x=119, store=545.6437683105469) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=72, x=119, store=545.6437683105469). Will move normally and eat
-->4-Sheep (y=72, x=119, store=545.6437683105469) before normal moving and eating
-->4-Sheep (y=71, x=118, store=555.6437683105469) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=91, x=93, store=607.1315002441406) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store > Min_ernergy(600) (y=91, x=93, store=607.1315002441406).
--> 5-Sheep looping with 0-Sheep.
----> D <=AD. Sheep Breeding/Sharing proximity of 5.0(<=5) entered by CS 5-Sheep (y=91, x=93, store=607.1315002441406) with CS 0-Sheep (y=88, x=89, store=577.9470920562744).
-----> 5-Sheep (y=91, x=93, store=607.1315002441406) and CS 0-Sheep (y=88, x=89, store=577.9470920562744 will not mate as CS 0-Sheep store <600. They will share resource to become average.
-----> Shared resources = True
-----> 5-Sheep (y=91, x=93, store=592.5392961502075) and CS 0-Sheep (y=88, x=89, store=592.5392961502075) after sharing resources!
_____________ 5-Sheep and CS 0-Sheep shared resources ____________
_______ Breeding=False, Failed breeding=False, Share=True for 5-Sheep __________

-> ------------ 6-Sheep initialised with (y=88, x=89, store=592.5392961502075) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=88, x=89, store=592.5392961502075). Will move normally and eat
-->6-Sheep (y=88, x=89, store=592.5392961502075) before normal moving and eating
-->6-Sheep (y=87, x=88, store=602.5392961502075) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=70, x=107, store=555.6437683105469) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=70, x=107, store=555.6437683105469). Will move normally and eat
-->7-Sheep (y=70, x=107, store=555.6437683105469) before normal moving and eating
-->7-Sheep (y=69, x=106, store=565.6437683105469) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________


-> ------------ 8-Sheep initialised with (y=90, x=90, store=552.1095848083496) -----------
--> 8-Sheep looping with 0-Wolf.
--> 8-Sheep looping with 1-Wolf.
--> 8-Sheep looping with 2-Wolf.
--> 8-Sheep looping with 3-Wolf.
--> 8-Sheep looping with 4-Wolf.
--> 8-Sheep looping with 5-Wolf.
--> 8-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->8-Sheep has Store < Min_ernergy(600) (y=90, x=90, store=552.1095848083496). Will move normally and eat
-->8-Sheep (y=90, x=90, store=552.1095848083496) before normal moving and eating
-->8-Sheep (y=89, x=91, store=562.1095848083496) after normal moving and eating
___e2________ 8-Sheep moved normally and ate ___________


-> ------------ 9-Sheep initialised with (y=76, x=127, store=590) -----------
--> 9-Sheep looping with 0-Wolf.
--> 9-Sheep looping with 1-Wolf.
--> 9-Sheep looping with 2-Wolf.
--> 9-Sheep looping with 3-Wolf.
--> 9-Sheep looping with 4-Wolf.
--> 9-Sheep looping with 5-Wolf.
--> 9-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->9-Sheep has Store < Min_ernergy(600) (y=76, x=127, store=590). Will move normally and eat
-->9-Sheep (y=76, x=127, store=590) before normal moving and eating
-->9-Sheep (y=75, x=126, store=600) after normal moving and eating
___e2________ 9-Sheep moved normally and ate ___________


-> ------------ 10-Sheep initialised with (y=107, x=104, store=460) -----------
--> 10-Sheep looping with 0-Wolf.
--> 10-Sheep looping with 1-Wolf.
--> 10-Sheep looping with 2-Wolf.
--> 10-Sheep looping with 3-Wolf.
--> 10-Sheep looping with 4-Wolf.
--> 10-Sheep looping with 5-Wolf.
--> 10-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->10-Sheep has Store < Min_ernergy(600) (y=107, x=104, store=460). Will move normally and eat
-->10-Sheep (y=107, x=104, store=460) before normal moving and eating
-->10-Sheep (y=108, x=105, store=470) after normal moving and eating
___e2________ 10-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=248, x=47, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=248, x=47, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
---> 0-Wolf looping with 8-Sheep
---> 0-Wolf looping with 9-Sheep
---> 0-Wolf looping with 10-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=248, x=47, store=100) before normal moving
-->else1 ends: 0-Wolf (y=249, x=48, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=109, x=272, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=109, x=272, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
---> 1-Wolf looping with 8-Sheep
---> 1-Wolf looping with 9-Sheep
---> 1-Wolf looping with 10-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=109, x=272, store=300) before normal moving
-->else1 ends: 1-Wolf (y=110, x=271, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=229, x=109, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=229, x=109, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
---> 2-Wolf looping with 8-Sheep
---> 2-Wolf looping with 9-Sheep
---> 2-Wolf looping with 10-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=229, x=109, store=200) before normal moving
-->else1 ends: 2-Wolf (y=228, x=108, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=69, x=7, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=69, x=7, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
---> 3-Wolf looping with 8-Sheep
---> 3-Wolf looping with 9-Sheep
---> 3-Wolf looping with 10-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=69, x=7, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=70, x=6, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=47, x=17, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=47, x=17, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
---> 4-Wolf looping with 8-Sheep
---> 4-Wolf looping with 9-Sheep
---> 4-Wolf looping with 10-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=47, x=17, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=48, x=16, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=37, x=0, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=37, x=0, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
---> 5-Wolf looping with 8-Sheep
---> 5-Wolf looping with 9-Sheep
---> 5-Wolf looping with 10-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=37, x=0, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=38, x=0, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=53, x=7, store=836.0) --------
--> if and elif not satisfied
--> 6-Wolf has > Min_energy(500) store (y=53, x=7, store=836.0) but Random < bf_e/2(0.25). So will move normally.
--->else3 begins: 6-Wolf (y=53, x=7, store=836.0) before normal moving.
--->else3 begins: 6-Wolf (y=52, x=6, store=836.0) after normal moving.
....e3_______ 6-Wolf moved normally_______
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 186 ************

-> ------------ 0-Sheep initialised with (y=89, x=86, store=577.9470920562744) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=89, x=86, store=577.9470920562744). Will move normally and eat
-->0-Sheep (y=89, x=86, store=577.9470920562744) before normal moving and eating
-->0-Sheep (y=88, x=85, store=587.9470920562744) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=71, x=116, store=414.51744079589844) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=71, x=116, store=414.51744079589844). Will move normally and eat
-->1-Sheep (y=71, x=116, store=414.51744079589844) before normal moving and eating
-->1-Sheep (y=70, x=115, store=424.51744079589844) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=98, x=86, store=593.8253021240234) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=98, x=86, store=593.8253021240234). Will move normally and eat
-->2-Sheep (y=98, x=86, store=593.8253021240234) before normal moving and eating
-->2-Sheep (y=97, x=87, store=603.8253021240234) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=67, x=119, store=424.51744079589844) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=67, x=119, store=424.51744079589844). Will move normally and eat
-->3-Sheep (y=67, x=119, store=424.51744079589844) before normal moving and eating
-->3-Sheep (y=66, x=118, store=434.51744079589844) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=71, x=118, store=555.6437683105469) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=71, x=118, store=555.6437683105469). Will move normally and eat
-->4-Sheep (y=71, x=118, store=555.6437683105469) before normal moving and eating
-->4-Sheep (y=72, x=117, store=565.6437683105469) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=91, x=93, store=592.5392961502075) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=91, x=93, store=592.5392961502075). Will move normally and eat
-->5-Sheep (y=91, x=93, store=592.5392961502075) before normal moving and eating
-->5-Sheep (y=92, x=94, store=602.5392961502075) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=87, x=88, store=602.5392961502075) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store > Min_ernergy(600) (y=87, x=88, store=602.5392961502075).
--> 6-Sheep looping with 0-Sheep.
--> 6-Sheep looping with 1-Sheep.
----> D <=AD. Sheep Breeding/Sharing proximity of 3.605551275463989(<=5) entered by CS 6-Sheep (y=87, x=88, store=602.5392961502075) with CS 1-Sheep (y=89, x=91, store=562.1095848083496).
-----> 6-Sheep (y=87, x=88, store=602.5392961502075) and CS 1-Sheep (y=89, x=91, store=562.1095848083496 will not mate as CS 1-Sheep store <600. They will share resource to become average.
-----> Shared resources = True
-----> 6-Sheep (y=87, x=88, store=582.3244404792786) and CS 1-Sheep (y=89, x=91, store=582.3244404792786) after sharing resources!
_____________ 6-Sheep and CS 1-Sheep shared resources ____________
_______ Breeding=False, Failed breeding=False, Share=True for 6-Sheep __________

-> ------------ 7-Sheep initialised with (y=69, x=106, store=565.6437683105469) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=69, x=106, store=565.6437683105469). Will move normally and eat
-->7-Sheep (y=69, x=106, store=565.6437683105469) before normal moving and eating
-->7-Sheep (y=68, x=105, store=575.6437683105469) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________


-> ------------ 8-Sheep initialised with (y=89, x=91, store=582.3244404792786) -----------
--> 8-Sheep looping with 0-Wolf.
--> 8-Sheep looping with 1-Wolf.
--> 8-Sheep looping with 2-Wolf.
--> 8-Sheep looping with 3-Wolf.
--> 8-Sheep looping with 4-Wolf.
--> 8-Sheep looping with 5-Wolf.
--> 8-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->8-Sheep has Store < Min_ernergy(600) (y=89, x=91, store=582.3244404792786). Will move normally and eat
-->8-Sheep (y=89, x=91, store=582.3244404792786) before normal moving and eating
-->8-Sheep (y=90, x=90, store=592.3244404792786) after normal moving and eating
___e2________ 8-Sheep moved normally and ate ___________


-> ------------ 9-Sheep initialised with (y=75, x=126, store=600) -----------
--> 9-Sheep looping with 0-Wolf.
--> 9-Sheep looping with 1-Wolf.
--> 9-Sheep looping with 2-Wolf.
--> 9-Sheep looping with 3-Wolf.
--> 9-Sheep looping with 4-Wolf.
--> 9-Sheep looping with 5-Wolf.
--> 9-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->9-Sheep has Store < Min_ernergy(600) (y=75, x=126, store=600). Will move normally and eat
-->9-Sheep (y=75, x=126, store=600) before normal moving and eating
-->9-Sheep (y=76, x=127, store=610) after normal moving and eating
___e2________ 9-Sheep moved normally and ate ___________


-> ------------ 10-Sheep initialised with (y=108, x=105, store=470) -----------
--> 10-Sheep looping with 0-Wolf.
--> 10-Sheep looping with 1-Wolf.
--> 10-Sheep looping with 2-Wolf.
--> 10-Sheep looping with 3-Wolf.
--> 10-Sheep looping with 4-Wolf.
--> 10-Sheep looping with 5-Wolf.
--> 10-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->10-Sheep has Store < Min_ernergy(600) (y=108, x=105, store=470). Will move normally and eat
-->10-Sheep (y=108, x=105, store=470) before normal moving and eating
-->10-Sheep (y=109, x=104, store=480) after normal moving and eating
___e2________ 10-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=249, x=48, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=249, x=48, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
---> 0-Wolf looping with 8-Sheep
---> 0-Wolf looping with 9-Sheep
---> 0-Wolf looping with 10-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=249, x=48, store=100) before normal moving
-->else1 ends: 0-Wolf (y=250, x=49, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=110, x=271, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=110, x=271, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
---> 1-Wolf looping with 8-Sheep
---> 1-Wolf looping with 9-Sheep
---> 1-Wolf looping with 10-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=110, x=271, store=300) before normal moving
-->else1 ends: 1-Wolf (y=111, x=270, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=228, x=108, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=228, x=108, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
---> 2-Wolf looping with 8-Sheep
---> 2-Wolf looping with 9-Sheep
---> 2-Wolf looping with 10-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=228, x=108, store=200) before normal moving
-->else1 ends: 2-Wolf (y=227, x=109, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=70, x=6, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=70, x=6, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
---> 3-Wolf looping with 8-Sheep
---> 3-Wolf looping with 9-Sheep
---> 3-Wolf looping with 10-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=70, x=6, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=71, x=5, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=48, x=16, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=48, x=16, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
---> 4-Wolf looping with 8-Sheep
---> 4-Wolf looping with 9-Sheep
---> 4-Wolf looping with 10-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=48, x=16, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=49, x=17, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=38, x=0, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=38, x=0, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
---> 5-Wolf looping with 8-Sheep
---> 5-Wolf looping with 9-Sheep
---> 5-Wolf looping with 10-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=38, x=0, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=37, x=0, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=52, x=6, store=836.0) --------
--> if and elif not satisfied
--> 6-Wolf has > Min_energy(500) store (y=52, x=6, store=836.0) but Random < bf_e/2(0.25). So will move normally.
--->else3 begins: 6-Wolf (y=52, x=6, store=836.0) before normal moving.
--->else3 begins: 6-Wolf (y=51, x=5, store=836.0) after normal moving.
....e3_______ 6-Wolf moved normally_______
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 187 ************

-> ------------ 0-Sheep initialised with (y=88, x=85, store=587.9470920562744) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=88, x=85, store=587.9470920562744). Will move normally and eat
-->0-Sheep (y=88, x=85, store=587.9470920562744) before normal moving and eating
-->0-Sheep (y=89, x=86, store=597.9470920562744) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=70, x=115, store=424.51744079589844) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=70, x=115, store=424.51744079589844). Will move normally and eat
-->1-Sheep (y=70, x=115, store=424.51744079589844) before normal moving and eating
-->1-Sheep (y=69, x=114, store=434.51744079589844) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=97, x=87, store=603.8253021240234) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store > Min_ernergy(600) (y=97, x=87, store=603.8253021240234).
--> 2-Sheep looping with 0-Sheep.
--> 2-Sheep looping with 1-Sheep.
--> 2-Sheep looping with 2-Sheep.
----> ---- (AD < D < MD).
----> Min distance=8.602325267042627 for 2-Sheep (y=97, x=87, store=603.8253021240234) with 2-Sheep (y=92, x=94, store=602.5392961502075).
--> 2-Sheep looping with 3-Sheep.
--> 2-Sheep looping with 4-Sheep.
--> 2-Sheep looping with 5-Sheep.
----> ---- (AD < D < MD).
----> Min distance=7.615773105863909 for 2-Sheep (y=97, x=87, store=603.8253021240234) with 5-Sheep (y=90, x=90, store=592.3244404792786).
--> 2-Sheep looping with 6-Sheep.
--> 2-Sheep looping with 7-Sheep.
->CS Found!
-> 2-Sheep (y=97, x=87, store=603.8253021240234) before moving closer (while eating) to CS-Sheep: (y=90, x=90, store=592.3244404792786).
-> 2-Wolf (y=93, x=88, store=613.8253021240234) after moving closer (while eating) to CS-Sheep: (y=90, x=90, store=592.3244404792786).
___________ 2-Sheep moved closer CS___________


-> ------------ 3-Sheep initialised with (y=66, x=118, store=434.51744079589844) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=66, x=118, store=434.51744079589844). Will move normally and eat
-->3-Sheep (y=66, x=118, store=434.51744079589844) before normal moving and eating
-->3-Sheep (y=67, x=117, store=444.51744079589844) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=72, x=117, store=565.6437683105469) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=72, x=117, store=565.6437683105469). Will move normally and eat
-->4-Sheep (y=72, x=117, store=565.6437683105469) before normal moving and eating
-->4-Sheep (y=71, x=118, store=575.6437683105469) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=92, x=94, store=602.5392961502075) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store > Min_ernergy(600) (y=92, x=94, store=602.5392961502075).
--> 5-Sheep looping with 0-Sheep.
----> ---- (AD < D < MD).
----> Min distance=7.810249675906654 for 5-Sheep (y=92, x=94, store=602.5392961502075) with 0-Sheep (y=87, x=88, store=582.3244404792786).
--> 5-Sheep looping with 1-Sheep.
--> 5-Sheep looping with 2-Sheep.
----> D <=AD. Sheep Breeding/Sharing proximity of 4.47213595499958(<=5) entered by CS 5-Sheep (y=92, x=94, store=602.5392961502075) with CS 2-Sheep (y=90, x=90, store=592.3244404792786).
-----> 5-Sheep (y=92, x=94, store=602.5392961502075) and CS 2-Sheep (y=90, x=90, store=592.3244404792786 will not mate as CS 2-Sheep store <600. They will share resource to become average.
-----> Shared resources = True
-----> 5-Sheep (y=92, x=94, store=597.431868314743) and CS 2-Sheep (y=90, x=90, store=597.431868314743) after sharing resources!
_____________ 5-Sheep and CS 2-Sheep shared resources ____________
_______ Breeding=False, Failed breeding=False, Share=True for 5-Sheep __________

-> ------------ 6-Sheep initialised with (y=87, x=88, store=582.3244404792786) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=87, x=88, store=582.3244404792786). Will move normally and eat
-->6-Sheep (y=87, x=88, store=582.3244404792786) before normal moving and eating
-->6-Sheep (y=86, x=89, store=592.3244404792786) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=68, x=105, store=575.6437683105469) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=68, x=105, store=575.6437683105469). Will move normally and eat
-->7-Sheep (y=68, x=105, store=575.6437683105469) before normal moving and eating
-->7-Sheep (y=69, x=104, store=585.6437683105469) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________


-> ------------ 8-Sheep initialised with (y=90, x=90, store=597.431868314743) -----------
--> 8-Sheep looping with 0-Wolf.
--> 8-Sheep looping with 1-Wolf.
--> 8-Sheep looping with 2-Wolf.
--> 8-Sheep looping with 3-Wolf.
--> 8-Sheep looping with 4-Wolf.
--> 8-Sheep looping with 5-Wolf.
--> 8-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->8-Sheep has Store < Min_ernergy(600) (y=90, x=90, store=597.431868314743). Will move normally and eat
-->8-Sheep (y=90, x=90, store=597.431868314743) before normal moving and eating
-->8-Sheep (y=91, x=89, store=607.431868314743) after normal moving and eating
___e2________ 8-Sheep moved normally and ate ___________


-> ------------ 9-Sheep initialised with (y=76, x=127, store=610) -----------
--> 9-Sheep looping with 0-Wolf.
--> 9-Sheep looping with 1-Wolf.
--> 9-Sheep looping with 2-Wolf.
--> 9-Sheep looping with 3-Wolf.
--> 9-Sheep looping with 4-Wolf.
--> 9-Sheep looping with 5-Wolf.
--> 9-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->9-Sheep has Store > Min_ernergy(600) (y=76, x=127, store=610).
--> 9-Sheep looping with 0-Sheep.
-> NO CS Found.
-> 9-Sheep (y=76, x=127, store=610) before normally moving and eating.
-> 9-Sheep (y=75, x=126, store=620) after normally moving and eating.
___e1________ 9-Sheep moved normally and ate ___________


-> ------------ 10-Sheep initialised with (y=109, x=104, store=480) -----------
--> 10-Sheep looping with 0-Wolf.
--> 10-Sheep looping with 1-Wolf.
--> 10-Sheep looping with 2-Wolf.
--> 10-Sheep looping with 3-Wolf.
--> 10-Sheep looping with 4-Wolf.
--> 10-Sheep looping with 5-Wolf.
--> 10-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->10-Sheep has Store < Min_ernergy(600) (y=109, x=104, store=480). Will move normally and eat
-->10-Sheep (y=109, x=104, store=480) before normal moving and eating
-->10-Sheep (y=108, x=105, store=490) after normal moving and eating
___e2________ 10-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=250, x=49, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=250, x=49, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
---> 0-Wolf looping with 8-Sheep
---> 0-Wolf looping with 9-Sheep
---> 0-Wolf looping with 10-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=250, x=49, store=100) before normal moving
-->else1 ends: 0-Wolf (y=249, x=48, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=111, x=270, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=111, x=270, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
---> 1-Wolf looping with 8-Sheep
---> 1-Wolf looping with 9-Sheep
---> 1-Wolf looping with 10-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=111, x=270, store=300) before normal moving
-->else1 ends: 1-Wolf (y=110, x=269, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=227, x=109, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=227, x=109, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
---> 2-Wolf looping with 8-Sheep
---> 2-Wolf looping with 9-Sheep
---> 2-Wolf looping with 10-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=227, x=109, store=200) before normal moving
-->else1 ends: 2-Wolf (y=226, x=110, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=71, x=5, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=71, x=5, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
---> 3-Wolf looping with 8-Sheep
---> 3-Wolf looping with 9-Sheep
---> 3-Wolf looping with 10-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=71, x=5, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=72, x=4, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=49, x=17, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=49, x=17, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
---> 4-Wolf looping with 8-Sheep
---> 4-Wolf looping with 9-Sheep
---> 4-Wolf looping with 10-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=49, x=17, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=48, x=16, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=37, x=0, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=37, x=0, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
---> 5-Wolf looping with 8-Sheep
---> 5-Wolf looping with 9-Sheep
---> 5-Wolf looping with 10-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=37, x=0, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=38, x=0, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=51, x=5, store=836.0) --------
--> if and elif not satisfied
--> 6-Wolf has > Min_energy(500) store (y=51, x=5, store=836.0) but Random < bf_e/2(0.25). So will move normally.
--->else3 begins: 6-Wolf (y=51, x=5, store=836.0) before normal moving.
--->else3 begins: 6-Wolf (y=50, x=4, store=836.0) after normal moving.
....e3_______ 6-Wolf moved normally_______
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 188 ************

-> ------------ 0-Sheep initialised with (y=89, x=86, store=597.9470920562744) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=89, x=86, store=597.9470920562744). Will move normally and eat
-->0-Sheep (y=89, x=86, store=597.9470920562744) before normal moving and eating
-->0-Sheep (y=88, x=85, store=607.9470920562744) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=69, x=114, store=434.51744079589844) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=69, x=114, store=434.51744079589844). Will move normally and eat
-->1-Sheep (y=69, x=114, store=434.51744079589844) before normal moving and eating
-->1-Sheep (y=68, x=115, store=444.51744079589844) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=93, x=88, store=613.8253021240234) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store > Min_ernergy(600) (y=93, x=88, store=613.8253021240234).
--> 2-Sheep looping with 0-Sheep.
--> 2-Sheep looping with 1-Sheep.
--> 2-Sheep looping with 2-Sheep.
----> ---- (AD < D < MD).
----> Min distance=6.082762530298219 for 2-Sheep (y=93, x=88, store=613.8253021240234) with 2-Sheep (y=92, x=94, store=597.431868314743).
--> 2-Sheep looping with 3-Sheep.
--> 2-Sheep looping with 4-Sheep.
--> 2-Sheep looping with 5-Sheep.
----> D <=AD. Sheep Breeding/Sharing proximity of 2.23606797749979(<=5) entered by CS 2-Sheep (y=93, x=88, store=613.8253021240234) with CS 5-Sheep (y=91, x=89, store=607.431868314743).
----->2-Sheep (y=93, x=88, store=613.8253021240234) and CS 5-Sheep (y=91, x=89, store=607.431868314743 have > Min_energy (600) store. So they will try breeding if p>0.5
------>1.A. Random >0.5. So the sheep will breed.
------> 2-Sheep (y=93, x=88, store=613.8253021240234) before breeding with CS 5-Sheep (y=91, x=89, store=607.431868314743).
------> Sheep Breed = True
------> 2-Sheep (y=93, x=88, store=305.3142926096916) after breeding with CS 5-Sheep (y=91, x=89, store=305.3142926096916).
_____________ 2-Sheep Mated SUCCESSFULLY with CS 5-Sheep ____________
_______ Breeding=True, Failed breeding=False, Share=False for 2-Sheep __________

-> ------------ 3-Sheep initialised with (y=67, x=117, store=444.51744079589844) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=67, x=117, store=444.51744079589844). Will move normally and eat
-->3-Sheep (y=67, x=117, store=444.51744079589844) before normal moving and eating
-->3-Sheep (y=66, x=118, store=454.51744079589844) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=71, x=118, store=575.6437683105469) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=71, x=118, store=575.6437683105469). Will move normally and eat
-->4-Sheep (y=71, x=118, store=575.6437683105469) before normal moving and eating
-->4-Sheep (y=70, x=119, store=585.6437683105469) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=92, x=94, store=597.431868314743) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=92, x=94, store=597.431868314743). Will move normally and eat
-->5-Sheep (y=92, x=94, store=597.431868314743) before normal moving and eating
-->5-Sheep (y=93, x=93, store=607.431868314743) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=86, x=89, store=592.3244404792786) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=86, x=89, store=592.3244404792786). Will move normally and eat
-->6-Sheep (y=86, x=89, store=592.3244404792786) before normal moving and eating
-->6-Sheep (y=85, x=90, store=602.3244404792786) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=69, x=104, store=585.6437683105469) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=69, x=104, store=585.6437683105469). Will move normally and eat
-->7-Sheep (y=69, x=104, store=585.6437683105469) before normal moving and eating
-->7-Sheep (y=70, x=105, store=595.6437683105469) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________


-> ------------ 8-Sheep initialised with (y=91, x=89, store=305.3142926096916) -----------
--> 8-Sheep looping with 0-Wolf.
--> 8-Sheep looping with 1-Wolf.
--> 8-Sheep looping with 2-Wolf.
--> 8-Sheep looping with 3-Wolf.
--> 8-Sheep looping with 4-Wolf.
--> 8-Sheep looping with 5-Wolf.
--> 8-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->8-Sheep has Store < Min_ernergy(600) (y=91, x=89, store=305.3142926096916). Will move normally and eat
-->8-Sheep (y=91, x=89, store=305.3142926096916) before normal moving and eating
-->8-Sheep (y=90, x=90, store=315.3142926096916) after normal moving and eating
___e2________ 8-Sheep moved normally and ate ___________


-> ------------ 9-Sheep initialised with (y=75, x=126, store=620) -----------
--> 9-Sheep looping with 0-Wolf.
--> 9-Sheep looping with 1-Wolf.
--> 9-Sheep looping with 2-Wolf.
--> 9-Sheep looping with 3-Wolf.
--> 9-Sheep looping with 4-Wolf.
--> 9-Sheep looping with 5-Wolf.
--> 9-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->9-Sheep has Store > Min_ernergy(600) (y=75, x=126, store=620).
--> 9-Sheep looping with 0-Sheep.
--> 9-Sheep looping with 1-Sheep.
-> NO CS Found.
-> 9-Sheep (y=75, x=126, store=620) before normally moving and eating.
-> 9-Sheep (y=76, x=127, store=630) after normally moving and eating.
___e1________ 9-Sheep moved normally and ate ___________


-> ------------ 10-Sheep initialised with (y=108, x=105, store=490) -----------
--> 10-Sheep looping with 0-Wolf.
--> 10-Sheep looping with 1-Wolf.
--> 10-Sheep looping with 2-Wolf.
--> 10-Sheep looping with 3-Wolf.
--> 10-Sheep looping with 4-Wolf.
--> 10-Sheep looping with 5-Wolf.
--> 10-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->10-Sheep has Store < Min_ernergy(600) (y=108, x=105, store=490). Will move normally and eat
-->10-Sheep (y=108, x=105, store=490) before normal moving and eating
-->10-Sheep (y=109, x=104, store=500) after normal moving and eating
___e2________ 10-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=249, x=48, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=249, x=48, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
---> 0-Wolf looping with 8-Sheep
---> 0-Wolf looping with 9-Sheep
---> 0-Wolf looping with 10-Sheep
---> 0-Wolf looping with 11-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=249, x=48, store=100) before normal moving
-->else1 ends: 0-Wolf (y=248, x=49, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=110, x=269, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=110, x=269, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
---> 1-Wolf looping with 8-Sheep
---> 1-Wolf looping with 9-Sheep
---> 1-Wolf looping with 10-Sheep
---> 1-Wolf looping with 11-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=110, x=269, store=300) before normal moving
-->else1 ends: 1-Wolf (y=109, x=270, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=226, x=110, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=226, x=110, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
---> 2-Wolf looping with 8-Sheep
---> 2-Wolf looping with 9-Sheep
---> 2-Wolf looping with 10-Sheep
---> 2-Wolf looping with 11-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=226, x=110, store=200) before normal moving
-->else1 ends: 2-Wolf (y=227, x=109, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=72, x=4, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=72, x=4, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
---> 3-Wolf looping with 8-Sheep
---> 3-Wolf looping with 9-Sheep
---> 3-Wolf looping with 10-Sheep
---> 3-Wolf looping with 11-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=72, x=4, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=73, x=5, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=48, x=16, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=48, x=16, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
---> 4-Wolf looping with 8-Sheep
---> 4-Wolf looping with 9-Sheep
---> 4-Wolf looping with 10-Sheep
---> 4-Wolf looping with 11-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=48, x=16, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=49, x=15, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=38, x=0, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=38, x=0, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
---> 5-Wolf looping with 8-Sheep
---> 5-Wolf looping with 9-Sheep
---> 5-Wolf looping with 10-Sheep
---> 5-Wolf looping with 11-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=38, x=0, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=39, x=1, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=50, x=4, store=836.0) --------
--> 6-Wolf has >Min_energy(500) store (y=50, x=4, store=836.0) and 0.25 <= random.random() < 0.5. Tries to find food (sheep).
---> 6-Wolf looping with 0-Sheep
---> 6-Wolf looping with 1-Sheep
---> 6-Wolf looping with 2-Sheep
---> 6-Wolf looping with 3-Sheep
---> 6-Wolf looping with 4-Sheep
---> 6-Wolf looping with 5-Sheep
---> 6-Wolf looping with 6-Sheep
---> 6-Wolf looping with 7-Sheep
---> 6-Wolf looping with 8-Sheep
---> 6-Wolf looping with 9-Sheep
---> 6-Wolf looping with 10-Sheep
---> 6-Wolf looping with 11-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 6-Wolf (y=50, x=4, store=836.0) before normal moving
-->else1 ends: 6-Wolf (y=49, x=5, store=836.0) after normal moving
....el1___________ 6-Wolf moved normally___________
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 189 ************

-> ------------ 0-Sheep initialised with (y=88, x=85, store=607.9470920562744) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store > Min_ernergy(600) (y=88, x=85, store=607.9470920562744).
--> 0-Sheep looping with 0-Sheep.
--> 0-Sheep looping with 1-Sheep.
----> ---- (AD < D < MD).
----> Min distance=5.830951894845301 for 0-Sheep (y=88, x=85, store=607.9470920562744) with 1-Sheep (y=93, x=88, store=305.3142926096916).
--> 0-Sheep looping with 2-Sheep.
--> 0-Sheep looping with 3-Sheep.
--> 0-Sheep looping with 4-Sheep.
--> 0-Sheep looping with 5-Sheep.
--> 0-Sheep looping with 6-Sheep.
--> 0-Sheep looping with 7-Sheep.
----> ---- (AD < D < MD).
----> Min distance=5.385164807134504 for 0-Sheep (y=88, x=85, store=607.9470920562744) with 7-Sheep (y=90, x=90, store=315.3142926096916).
--> 0-Sheep looping with 8-Sheep.
--> 0-Sheep looping with 9-Sheep.
--> 0-Sheep looping with 10-Sheep.
->CS Found!
-> 0-Sheep (y=88, x=85, store=607.9470920562744) before moving closer (while eating) to CS-Sheep: (y=90, x=90, store=315.3142926096916).
-> 0-Wolf (y=89, x=87, store=617.9470920562744) after moving closer (while eating) to CS-Sheep: (y=90, x=90, store=315.3142926096916).
___________ 0-Sheep moved closer CS___________


-> ------------ 1-Sheep initialised with (y=68, x=115, store=444.51744079589844) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=68, x=115, store=444.51744079589844). Will move normally and eat
-->1-Sheep (y=68, x=115, store=444.51744079589844) before normal moving and eating
-->1-Sheep (y=69, x=116, store=454.51744079589844) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=93, x=88, store=305.3142926096916) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=93, x=88, store=305.3142926096916). Will move normally and eat
-->2-Sheep (y=93, x=88, store=305.3142926096916) before normal moving and eating
-->2-Sheep (y=92, x=87, store=315.3142926096916) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=66, x=118, store=454.51744079589844) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=66, x=118, store=454.51744079589844). Will move normally and eat
-->3-Sheep (y=66, x=118, store=454.51744079589844) before normal moving and eating
-->3-Sheep (y=67, x=117, store=464.51744079589844) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=70, x=119, store=585.6437683105469) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=70, x=119, store=585.6437683105469). Will move normally and eat
-->4-Sheep (y=70, x=119, store=585.6437683105469) before normal moving and eating
-->4-Sheep (y=69, x=118, store=595.6437683105469) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=93, x=93, store=607.431868314743) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store > Min_ernergy(600) (y=93, x=93, store=607.431868314743).
--> 5-Sheep looping with 0-Sheep.
----> ---- (AD < D < MD).
----> Min distance=8.54400374531753 for 5-Sheep (y=93, x=93, store=607.431868314743) with 0-Sheep (y=85, x=90, store=602.3244404792786).
--> 5-Sheep looping with 1-Sheep.
--> 5-Sheep looping with 2-Sheep.
----> D <=AD. Sheep Breeding/Sharing proximity of 4.242640687119285(<=5) entered by CS 5-Sheep (y=93, x=93, store=607.431868314743) with CS 2-Sheep (y=90, x=90, store=315.3142926096916).
-----> 5-Sheep (y=93, x=93, store=607.431868314743) and CS 2-Sheep (y=90, x=90, store=315.3142926096916 will not mate as CS 2-Sheep store <600. They will share resource to become average.
-----> Shared resources = True
-----> 5-Sheep (y=93, x=93, store=461.37308046221733) and CS 2-Sheep (y=90, x=90, store=461.37308046221733) after sharing resources!
_____________ 5-Sheep and CS 2-Sheep shared resources ____________
_______ Breeding=False, Failed breeding=False, Share=True for 5-Sheep __________

-> ------------ 6-Sheep initialised with (y=85, x=90, store=602.3244404792786) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store > Min_ernergy(600) (y=85, x=90, store=602.3244404792786).
--> 6-Sheep looping with 0-Sheep.
----> ---- (AD < D < MD).
----> Min distance=21.213203435596427 for 6-Sheep (y=85, x=90, store=602.3244404792786) with 0-Sheep (y=70, x=105, store=595.6437683105469).
--> 6-Sheep looping with 1-Sheep.
----> D <=AD. Sheep Breeding/Sharing proximity of 5.0(<=5) entered by CS 6-Sheep (y=85, x=90, store=602.3244404792786) with CS 1-Sheep (y=90, x=90, store=461.37308046221733).
-----> 6-Sheep (y=85, x=90, store=602.3244404792786) and CS 1-Sheep (y=90, x=90, store=461.37308046221733 will not mate as CS 1-Sheep store <600. They will share resource to become average.
-----> Shared resources = True
-----> 6-Sheep (y=85, x=90, store=531.848760470748) and CS 1-Sheep (y=90, x=90, store=531.848760470748) after sharing resources!
_____________ 6-Sheep and CS 1-Sheep shared resources ____________
_______ Breeding=False, Failed breeding=False, Share=True for 6-Sheep __________

-> ------------ 7-Sheep initialised with (y=70, x=105, store=595.6437683105469) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=70, x=105, store=595.6437683105469). Will move normally and eat
-->7-Sheep (y=70, x=105, store=595.6437683105469) before normal moving and eating
-->7-Sheep (y=69, x=106, store=605.6437683105469) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________


-> ------------ 8-Sheep initialised with (y=90, x=90, store=531.848760470748) -----------
--> 8-Sheep looping with 0-Wolf.
--> 8-Sheep looping with 1-Wolf.
--> 8-Sheep looping with 2-Wolf.
--> 8-Sheep looping with 3-Wolf.
--> 8-Sheep looping with 4-Wolf.
--> 8-Sheep looping with 5-Wolf.
--> 8-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->8-Sheep has Store < Min_ernergy(600) (y=90, x=90, store=531.848760470748). Will move normally and eat
-->8-Sheep (y=90, x=90, store=531.848760470748) before normal moving and eating
-->8-Sheep (y=91, x=91, store=541.848760470748) after normal moving and eating
___e2________ 8-Sheep moved normally and ate ___________


-> ------------ 9-Sheep initialised with (y=76, x=127, store=630) -----------
--> 9-Sheep looping with 0-Wolf.
--> 9-Sheep looping with 1-Wolf.
--> 9-Sheep looping with 2-Wolf.
--> 9-Sheep looping with 3-Wolf.
--> 9-Sheep looping with 4-Wolf.
--> 9-Sheep looping with 5-Wolf.
--> 9-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->9-Sheep has Store > Min_ernergy(600) (y=76, x=127, store=630).
--> 9-Sheep looping with 0-Sheep.
--> 9-Sheep looping with 1-Sheep.
-> NO CS Found.
-> 9-Sheep (y=76, x=127, store=630) before normally moving and eating.
-> 9-Sheep (y=77, x=126, store=640) after normally moving and eating.
___e1________ 9-Sheep moved normally and ate ___________


-> ------------ 10-Sheep initialised with (y=109, x=104, store=500) -----------
--> 10-Sheep looping with 0-Wolf.
--> 10-Sheep looping with 1-Wolf.
--> 10-Sheep looping with 2-Wolf.
--> 10-Sheep looping with 3-Wolf.
--> 10-Sheep looping with 4-Wolf.
--> 10-Sheep looping with 5-Wolf.
--> 10-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->10-Sheep has Store < Min_ernergy(600) (y=109, x=104, store=500). Will move normally and eat
-->10-Sheep (y=109, x=104, store=500) before normal moving and eating
-->10-Sheep (y=108, x=105, store=510) after normal moving and eating
___e2________ 10-Sheep moved normally and ate ___________


-> ------------ 11-Sheep initialised with (y=103, x=98, store=400) -----------
--> 11-Sheep looping with 0-Wolf.
--> 11-Sheep looping with 1-Wolf.
--> 11-Sheep looping with 2-Wolf.
--> 11-Sheep looping with 3-Wolf.
--> 11-Sheep looping with 4-Wolf.
--> 11-Sheep looping with 5-Wolf.
--> 11-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->11-Sheep has Store < Min_ernergy(600) (y=103, x=98, store=400). Will move normally and eat
-->11-Sheep (y=103, x=98, store=400) before normal moving and eating
-->11-Sheep (y=102, x=99, store=410) after normal moving and eating
___e2________ 11-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=248, x=49, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=248, x=49, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
---> 0-Wolf looping with 8-Sheep
---> 0-Wolf looping with 9-Sheep
---> 0-Wolf looping with 10-Sheep
---> 0-Wolf looping with 11-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=248, x=49, store=100) before normal moving
-->else1 ends: 0-Wolf (y=249, x=48, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=109, x=270, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=109, x=270, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
---> 1-Wolf looping with 8-Sheep
---> 1-Wolf looping with 9-Sheep
---> 1-Wolf looping with 10-Sheep
---> 1-Wolf looping with 11-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=109, x=270, store=300) before normal moving
-->else1 ends: 1-Wolf (y=110, x=269, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=227, x=109, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=227, x=109, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
---> 2-Wolf looping with 8-Sheep
---> 2-Wolf looping with 9-Sheep
---> 2-Wolf looping with 10-Sheep
---> 2-Wolf looping with 11-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=227, x=109, store=200) before normal moving
-->else1 ends: 2-Wolf (y=228, x=110, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=73, x=5, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=73, x=5, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
---> 3-Wolf looping with 8-Sheep
---> 3-Wolf looping with 9-Sheep
---> 3-Wolf looping with 10-Sheep
---> 3-Wolf looping with 11-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=73, x=5, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=72, x=4, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=49, x=15, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=49, x=15, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
---> 4-Wolf looping with 8-Sheep
---> 4-Wolf looping with 9-Sheep
---> 4-Wolf looping with 10-Sheep
---> 4-Wolf looping with 11-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=49, x=15, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=50, x=16, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=39, x=1, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=39, x=1, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
---> 5-Wolf looping with 8-Sheep
---> 5-Wolf looping with 9-Sheep
---> 5-Wolf looping with 10-Sheep
---> 5-Wolf looping with 11-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=39, x=1, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=38, x=0, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=49, x=5, store=836.0) --------
--> 6-Wolf has >Min_energy(500) store (y=49, x=5, store=836.0) and 0.25 <= random.random() < 0.5. Tries to find food (sheep).
---> 6-Wolf looping with 0-Sheep
---> 6-Wolf looping with 1-Sheep
---> 6-Wolf looping with 2-Sheep
---> 6-Wolf looping with 3-Sheep
---> 6-Wolf looping with 4-Sheep
---> 6-Wolf looping with 5-Sheep
---> 6-Wolf looping with 6-Sheep
---> 6-Wolf looping with 7-Sheep
---> 6-Wolf looping with 8-Sheep
---> 6-Wolf looping with 9-Sheep
---> 6-Wolf looping with 10-Sheep
---> 6-Wolf looping with 11-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 6-Wolf (y=49, x=5, store=836.0) before normal moving
-->else1 ends: 6-Wolf (y=50, x=4, store=836.0) after normal moving
....el1___________ 6-Wolf moved normally___________
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 190 ************

-> ------------ 0-Sheep initialised with (y=89, x=87, store=617.9470920562744) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store > Min_ernergy(600) (y=89, x=87, store=617.9470920562744).
--> 0-Sheep looping with 0-Sheep.
--> 0-Sheep looping with 1-Sheep.
----> D <=AD. Sheep Breeding/Sharing proximity of 3.0(<=5) entered by CS 0-Sheep (y=89, x=87, store=617.9470920562744) with CS 1-Sheep (y=92, x=87, store=315.3142926096916).
-----> 0-Sheep (y=89, x=87, store=617.9470920562744) and CS 1-Sheep (y=92, x=87, store=315.3142926096916 will not mate as CS 1-Sheep store <600. They will share resource to become average.
-----> Shared resources = True
-----> 0-Sheep (y=89, x=87, store=466.630692332983) and CS 1-Sheep (y=92, x=87, store=466.630692332983) after sharing resources!
_____________ 0-Sheep and CS 1-Sheep shared resources ____________
_______ Breeding=False, Failed breeding=False, Share=True for 0-Sheep __________

-> ------------ 1-Sheep initialised with (y=69, x=116, store=454.51744079589844) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=69, x=116, store=454.51744079589844). Will move normally and eat
-->1-Sheep (y=69, x=116, store=454.51744079589844) before normal moving and eating
-->1-Sheep (y=68, x=115, store=464.51744079589844) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=92, x=87, store=466.630692332983) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=92, x=87, store=466.630692332983). Will move normally and eat
-->2-Sheep (y=92, x=87, store=466.630692332983) before normal moving and eating
-->2-Sheep (y=93, x=86, store=476.630692332983) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=67, x=117, store=464.51744079589844) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=67, x=117, store=464.51744079589844). Will move normally and eat
-->3-Sheep (y=67, x=117, store=464.51744079589844) before normal moving and eating
-->3-Sheep (y=66, x=118, store=474.51744079589844) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=69, x=118, store=595.6437683105469) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=69, x=118, store=595.6437683105469). Will move normally and eat
-->4-Sheep (y=69, x=118, store=595.6437683105469) before normal moving and eating
-->4-Sheep (y=70, x=119, store=605.6437683105469) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=93, x=93, store=461.37308046221733) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=93, x=93, store=461.37308046221733). Will move normally and eat
-->5-Sheep (y=93, x=93, store=461.37308046221733) before normal moving and eating
-->5-Sheep (y=94, x=92, store=471.37308046221733) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=85, x=90, store=531.848760470748) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=85, x=90, store=531.848760470748). Will move normally and eat
-->6-Sheep (y=85, x=90, store=531.848760470748) before normal moving and eating
-->6-Sheep (y=84, x=91, store=541.848760470748) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=69, x=106, store=605.6437683105469) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store > Min_ernergy(600) (y=69, x=106, store=605.6437683105469).
--> 7-Sheep looping with 0-Sheep.
--> 7-Sheep looping with 1-Sheep.
----> ---- (AD < D < MD).
----> Min distance=21.540659228538015 for 7-Sheep (y=69, x=106, store=605.6437683105469) with 1-Sheep (y=77, x=126, store=640).
--> 7-Sheep looping with 2-Sheep.
--> 7-Sheep looping with 3-Sheep.
->CS Found!
-> 7-Sheep (y=69, x=106, store=605.6437683105469) before moving closer (while eating) to CS-Sheep: (y=77, x=126, store=640).
-> 7-Wolf (y=73, x=116, store=615.6437683105469) after moving closer (while eating) to CS-Sheep: (y=77, x=126, store=640).
___________ 7-Sheep moved closer CS___________


-> ------------ 8-Sheep initialised with (y=91, x=91, store=541.848760470748) -----------
--> 8-Sheep looping with 0-Wolf.
--> 8-Sheep looping with 1-Wolf.
--> 8-Sheep looping with 2-Wolf.
--> 8-Sheep looping with 3-Wolf.
--> 8-Sheep looping with 4-Wolf.
--> 8-Sheep looping with 5-Wolf.
--> 8-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->8-Sheep has Store < Min_ernergy(600) (y=91, x=91, store=541.848760470748). Will move normally and eat
-->8-Sheep (y=91, x=91, store=541.848760470748) before normal moving and eating
-->8-Sheep (y=92, x=92, store=551.848760470748) after normal moving and eating
___e2________ 8-Sheep moved normally and ate ___________


-> ------------ 9-Sheep initialised with (y=77, x=126, store=640) -----------
--> 9-Sheep looping with 0-Wolf.
--> 9-Sheep looping with 1-Wolf.
--> 9-Sheep looping with 2-Wolf.
--> 9-Sheep looping with 3-Wolf.
--> 9-Sheep looping with 4-Wolf.
--> 9-Sheep looping with 5-Wolf.
--> 9-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->9-Sheep has Store > Min_ernergy(600) (y=77, x=126, store=640).
--> 9-Sheep looping with 0-Sheep.
--> 9-Sheep looping with 1-Sheep.
-> NO CS Found.
-> 9-Sheep (y=77, x=126, store=640) before normally moving and eating.
-> 9-Sheep (y=78, x=125, store=650) after normally moving and eating.
___e1________ 9-Sheep moved normally and ate ___________


-> ------------ 10-Sheep initialised with (y=108, x=105, store=510) -----------
--> 10-Sheep looping with 0-Wolf.
--> 10-Sheep looping with 1-Wolf.
--> 10-Sheep looping with 2-Wolf.
--> 10-Sheep looping with 3-Wolf.
--> 10-Sheep looping with 4-Wolf.
--> 10-Sheep looping with 5-Wolf.
--> 10-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->10-Sheep has Store < Min_ernergy(600) (y=108, x=105, store=510). Will move normally and eat
-->10-Sheep (y=108, x=105, store=510) before normal moving and eating
-->10-Sheep (y=107, x=106, store=520) after normal moving and eating
___e2________ 10-Sheep moved normally and ate ___________


-> ------------ 11-Sheep initialised with (y=102, x=99, store=410) -----------
--> 11-Sheep looping with 0-Wolf.
--> 11-Sheep looping with 1-Wolf.
--> 11-Sheep looping with 2-Wolf.
--> 11-Sheep looping with 3-Wolf.
--> 11-Sheep looping with 4-Wolf.
--> 11-Sheep looping with 5-Wolf.
--> 11-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->11-Sheep has Store < Min_ernergy(600) (y=102, x=99, store=410). Will move normally and eat
-->11-Sheep (y=102, x=99, store=410) before normal moving and eating
-->11-Sheep (y=103, x=98, store=420) after normal moving and eating
___e2________ 11-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=249, x=48, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=249, x=48, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
---> 0-Wolf looping with 8-Sheep
---> 0-Wolf looping with 9-Sheep
---> 0-Wolf looping with 10-Sheep
---> 0-Wolf looping with 11-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=249, x=48, store=100) before normal moving
-->else1 ends: 0-Wolf (y=250, x=49, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=110, x=269, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=110, x=269, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
---> 1-Wolf looping with 8-Sheep
---> 1-Wolf looping with 9-Sheep
---> 1-Wolf looping with 10-Sheep
---> 1-Wolf looping with 11-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=110, x=269, store=300) before normal moving
-->else1 ends: 1-Wolf (y=111, x=270, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=228, x=110, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=228, x=110, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
---> 2-Wolf looping with 8-Sheep
---> 2-Wolf looping with 9-Sheep
---> 2-Wolf looping with 10-Sheep
---> 2-Wolf looping with 11-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=228, x=110, store=200) before normal moving
-->else1 ends: 2-Wolf (y=227, x=109, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=72, x=4, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=72, x=4, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
---> 3-Wolf looping with 8-Sheep
---> 3-Wolf looping with 9-Sheep
---> 3-Wolf looping with 10-Sheep
---> 3-Wolf looping with 11-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=72, x=4, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=73, x=3, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=50, x=16, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=50, x=16, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
---> 4-Wolf looping with 8-Sheep
---> 4-Wolf looping with 9-Sheep
---> 4-Wolf looping with 10-Sheep
---> 4-Wolf looping with 11-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=50, x=16, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=49, x=17, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=38, x=0, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=38, x=0, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
---> 5-Wolf looping with 8-Sheep
---> 5-Wolf looping with 9-Sheep
---> 5-Wolf looping with 10-Sheep
---> 5-Wolf looping with 11-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=38, x=0, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=37, x=0, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=50, x=4, store=836.0) --------
--> 6-Wolf has > 500 store (y=50, x=4, store=836.0) and Random >= 0.5. so will try to find CW to move closer or breed/fight if within AD(5).
-> No CW found. although store >500 and p>=0.5!
--->else2 begins: 6-Wolf (y=50, x=4, store=836.0) before normal moving.
--->else2 begins: 6-Wolf (y=49, x=3, store=836.0) after normal moving.
.... el2 _______  6-Wolf moved normally _______ 
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 191 ************

-> ------------ 0-Sheep initialised with (y=89, x=87, store=466.630692332983) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=89, x=87, store=466.630692332983). Will move normally and eat
-->0-Sheep (y=89, x=87, store=466.630692332983) before normal moving and eating
-->0-Sheep (y=90, x=88, store=476.630692332983) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=68, x=115, store=464.51744079589844) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=68, x=115, store=464.51744079589844). Will move normally and eat
-->1-Sheep (y=68, x=115, store=464.51744079589844) before normal moving and eating
-->1-Sheep (y=67, x=114, store=474.51744079589844) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=93, x=86, store=476.630692332983) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=93, x=86, store=476.630692332983). Will move normally and eat
-->2-Sheep (y=93, x=86, store=476.630692332983) before normal moving and eating
-->2-Sheep (y=94, x=87, store=486.630692332983) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=66, x=118, store=474.51744079589844) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=66, x=118, store=474.51744079589844). Will move normally and eat
-->3-Sheep (y=66, x=118, store=474.51744079589844) before normal moving and eating
-->3-Sheep (y=67, x=117, store=484.51744079589844) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=70, x=119, store=605.6437683105469) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store > Min_ernergy(600) (y=70, x=119, store=605.6437683105469).
--> 4-Sheep looping with 0-Sheep.
--> 4-Sheep looping with 1-Sheep.
--> 4-Sheep looping with 2-Sheep.
----> D <=AD. Sheep Breeding/Sharing proximity of 4.242640687119285(<=5) entered by CS 4-Sheep (y=70, x=119, store=605.6437683105469) with CS 2-Sheep (y=73, x=116, store=615.6437683105469).
----->4-Sheep (y=70, x=119, store=605.6437683105469) and CS 2-Sheep (y=73, x=116, store=615.6437683105469 have > Min_energy (600) store. So they will try breeding if p>0.5
------>1.B Random <0.5. So the breeding will fail.
------> 4-Sheep (y=70, x=119, store=605.6437683105469) before failed breeding with CS 2-Sheep (y=73, x=116, store=615.6437683105469)
------> Failed Sheep Breeding = True
------> 4-Sheep (y=70, x=119, store=305.32188415527344) after failed breeding with CS 2-Sheep (y=73, x=116, store=305.32188415527344).
_____________ 4-Sheep Fail Mated with CS 2-Sheep ____________
_______ Breeding=False, Failed breeding=True, Share=False for 4-Sheep __________

-> ------------ 5-Sheep initialised with (y=94, x=92, store=471.37308046221733) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=94, x=92, store=471.37308046221733). Will move normally and eat
-->5-Sheep (y=94, x=92, store=471.37308046221733) before normal moving and eating
-->5-Sheep (y=95, x=93, store=481.37308046221733) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=84, x=91, store=541.848760470748) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=84, x=91, store=541.848760470748). Will move normally and eat
-->6-Sheep (y=84, x=91, store=541.848760470748) before normal moving and eating
-->6-Sheep (y=83, x=92, store=551.848760470748) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=73, x=116, store=305.32188415527344) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=73, x=116, store=305.32188415527344). Will move normally and eat
-->7-Sheep (y=73, x=116, store=305.32188415527344) before normal moving and eating
-->7-Sheep (y=72, x=115, store=315.32188415527344) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________


-> ------------ 8-Sheep initialised with (y=92, x=92, store=551.848760470748) -----------
--> 8-Sheep looping with 0-Wolf.
--> 8-Sheep looping with 1-Wolf.
--> 8-Sheep looping with 2-Wolf.
--> 8-Sheep looping with 3-Wolf.
--> 8-Sheep looping with 4-Wolf.
--> 8-Sheep looping with 5-Wolf.
--> 8-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->8-Sheep has Store < Min_ernergy(600) (y=92, x=92, store=551.848760470748). Will move normally and eat
-->8-Sheep (y=92, x=92, store=551.848760470748) before normal moving and eating
-->8-Sheep (y=93, x=93, store=561.848760470748) after normal moving and eating
___e2________ 8-Sheep moved normally and ate ___________


-> ------------ 9-Sheep initialised with (y=78, x=125, store=650) -----------
--> 9-Sheep looping with 0-Wolf.
--> 9-Sheep looping with 1-Wolf.
--> 9-Sheep looping with 2-Wolf.
--> 9-Sheep looping with 3-Wolf.
--> 9-Sheep looping with 4-Wolf.
--> 9-Sheep looping with 5-Wolf.
--> 9-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->9-Sheep has Store > Min_ernergy(600) (y=78, x=125, store=650).
--> 9-Sheep looping with 0-Sheep.
--> 9-Sheep looping with 1-Sheep.
-> NO CS Found.
-> 9-Sheep (y=78, x=125, store=650) before normally moving and eating.
-> 9-Sheep (y=79, x=126, store=660) after normally moving and eating.
___e1________ 9-Sheep moved normally and ate ___________


-> ------------ 10-Sheep initialised with (y=107, x=106, store=520) -----------
--> 10-Sheep looping with 0-Wolf.
--> 10-Sheep looping with 1-Wolf.
--> 10-Sheep looping with 2-Wolf.
--> 10-Sheep looping with 3-Wolf.
--> 10-Sheep looping with 4-Wolf.
--> 10-Sheep looping with 5-Wolf.
--> 10-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->10-Sheep has Store < Min_ernergy(600) (y=107, x=106, store=520). Will move normally and eat
-->10-Sheep (y=107, x=106, store=520) before normal moving and eating
-->10-Sheep (y=108, x=107, store=530) after normal moving and eating
___e2________ 10-Sheep moved normally and ate ___________


-> ------------ 11-Sheep initialised with (y=103, x=98, store=420) -----------
--> 11-Sheep looping with 0-Wolf.
--> 11-Sheep looping with 1-Wolf.
--> 11-Sheep looping with 2-Wolf.
--> 11-Sheep looping with 3-Wolf.
--> 11-Sheep looping with 4-Wolf.
--> 11-Sheep looping with 5-Wolf.
--> 11-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->11-Sheep has Store < Min_ernergy(600) (y=103, x=98, store=420). Will move normally and eat
-->11-Sheep (y=103, x=98, store=420) before normal moving and eating
-->11-Sheep (y=104, x=99, store=430) after normal moving and eating
___e2________ 11-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=250, x=49, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=250, x=49, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
---> 0-Wolf looping with 8-Sheep
---> 0-Wolf looping with 9-Sheep
---> 0-Wolf looping with 10-Sheep
---> 0-Wolf looping with 11-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=250, x=49, store=100) before normal moving
-->else1 ends: 0-Wolf (y=251, x=48, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=111, x=270, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=111, x=270, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
---> 1-Wolf looping with 8-Sheep
---> 1-Wolf looping with 9-Sheep
---> 1-Wolf looping with 10-Sheep
---> 1-Wolf looping with 11-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=111, x=270, store=300) before normal moving
-->else1 ends: 1-Wolf (y=110, x=269, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=227, x=109, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=227, x=109, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
---> 2-Wolf looping with 8-Sheep
---> 2-Wolf looping with 9-Sheep
---> 2-Wolf looping with 10-Sheep
---> 2-Wolf looping with 11-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=227, x=109, store=200) before normal moving
-->else1 ends: 2-Wolf (y=228, x=110, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=73, x=3, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=73, x=3, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
---> 3-Wolf looping with 8-Sheep
---> 3-Wolf looping with 9-Sheep
---> 3-Wolf looping with 10-Sheep
---> 3-Wolf looping with 11-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=73, x=3, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=74, x=4, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=49, x=17, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=49, x=17, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
---> 4-Wolf looping with 8-Sheep
---> 4-Wolf looping with 9-Sheep
---> 4-Wolf looping with 10-Sheep
---> 4-Wolf looping with 11-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=49, x=17, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=50, x=16, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=37, x=0, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=37, x=0, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
---> 5-Wolf looping with 8-Sheep
---> 5-Wolf looping with 9-Sheep
---> 5-Wolf looping with 10-Sheep
---> 5-Wolf looping with 11-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=37, x=0, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=38, x=1, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=49, x=3, store=836.0) --------
--> 6-Wolf has > 500 store (y=49, x=3, store=836.0) and Random >= 0.5. so will try to find CW to move closer or breed/fight if within AD(5).
-> No CW found. although store >500 and p>=0.5!
--->else2 begins: 6-Wolf (y=49, x=3, store=836.0) before normal moving.
--->else2 begins: 6-Wolf (y=48, x=2, store=836.0) after normal moving.
.... el2 _______  6-Wolf moved normally _______ 
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 192 ************

-> ------------ 0-Sheep initialised with (y=90, x=88, store=476.630692332983) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=90, x=88, store=476.630692332983). Will move normally and eat
-->0-Sheep (y=90, x=88, store=476.630692332983) before normal moving and eating
-->0-Sheep (y=91, x=89, store=486.630692332983) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=67, x=114, store=474.51744079589844) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=67, x=114, store=474.51744079589844). Will move normally and eat
-->1-Sheep (y=67, x=114, store=474.51744079589844) before normal moving and eating
-->1-Sheep (y=66, x=113, store=484.51744079589844) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=94, x=87, store=486.630692332983) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=94, x=87, store=486.630692332983). Will move normally and eat
-->2-Sheep (y=94, x=87, store=486.630692332983) before normal moving and eating
-->2-Sheep (y=95, x=86, store=496.630692332983) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=67, x=117, store=484.51744079589844) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=67, x=117, store=484.51744079589844). Will move normally and eat
-->3-Sheep (y=67, x=117, store=484.51744079589844) before normal moving and eating
-->3-Sheep (y=66, x=116, store=494.51744079589844) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=70, x=119, store=305.32188415527344) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=70, x=119, store=305.32188415527344). Will move normally and eat
-->4-Sheep (y=70, x=119, store=305.32188415527344) before normal moving and eating
-->4-Sheep (y=71, x=120, store=315.32188415527344) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=95, x=93, store=481.37308046221733) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=95, x=93, store=481.37308046221733). Will move normally and eat
-->5-Sheep (y=95, x=93, store=481.37308046221733) before normal moving and eating
-->5-Sheep (y=96, x=92, store=491.37308046221733) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=83, x=92, store=551.848760470748) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=83, x=92, store=551.848760470748). Will move normally and eat
-->6-Sheep (y=83, x=92, store=551.848760470748) before normal moving and eating
-->6-Sheep (y=84, x=91, store=561.848760470748) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=72, x=115, store=315.32188415527344) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=72, x=115, store=315.32188415527344). Will move normally and eat
-->7-Sheep (y=72, x=115, store=315.32188415527344) before normal moving and eating
-->7-Sheep (y=73, x=116, store=325.32188415527344) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________


-> ------------ 8-Sheep initialised with (y=93, x=93, store=561.848760470748) -----------
--> 8-Sheep looping with 0-Wolf.
--> 8-Sheep looping with 1-Wolf.
--> 8-Sheep looping with 2-Wolf.
--> 8-Sheep looping with 3-Wolf.
--> 8-Sheep looping with 4-Wolf.
--> 8-Sheep looping with 5-Wolf.
--> 8-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->8-Sheep has Store < Min_ernergy(600) (y=93, x=93, store=561.848760470748). Will move normally and eat
-->8-Sheep (y=93, x=93, store=561.848760470748) before normal moving and eating
-->8-Sheep (y=94, x=94, store=571.848760470748) after normal moving and eating
___e2________ 8-Sheep moved normally and ate ___________


-> ------------ 9-Sheep initialised with (y=79, x=126, store=660) -----------
--> 9-Sheep looping with 0-Wolf.
--> 9-Sheep looping with 1-Wolf.
--> 9-Sheep looping with 2-Wolf.
--> 9-Sheep looping with 3-Wolf.
--> 9-Sheep looping with 4-Wolf.
--> 9-Sheep looping with 5-Wolf.
--> 9-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->9-Sheep has Store > Min_ernergy(600) (y=79, x=126, store=660).
--> 9-Sheep looping with 0-Sheep.
--> 9-Sheep looping with 1-Sheep.
-> NO CS Found.
-> 9-Sheep (y=79, x=126, store=660) before normally moving and eating.
-> 9-Sheep (y=80, x=125, store=670) after normally moving and eating.
___e1________ 9-Sheep moved normally and ate ___________


-> ------------ 10-Sheep initialised with (y=108, x=107, store=530) -----------
--> 10-Sheep looping with 0-Wolf.
--> 10-Sheep looping with 1-Wolf.
--> 10-Sheep looping with 2-Wolf.
--> 10-Sheep looping with 3-Wolf.
--> 10-Sheep looping with 4-Wolf.
--> 10-Sheep looping with 5-Wolf.
--> 10-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->10-Sheep has Store < Min_ernergy(600) (y=108, x=107, store=530). Will move normally and eat
-->10-Sheep (y=108, x=107, store=530) before normal moving and eating
-->10-Sheep (y=107, x=108, store=540) after normal moving and eating
___e2________ 10-Sheep moved normally and ate ___________


-> ------------ 11-Sheep initialised with (y=104, x=99, store=430) -----------
--> 11-Sheep looping with 0-Wolf.
--> 11-Sheep looping with 1-Wolf.
--> 11-Sheep looping with 2-Wolf.
--> 11-Sheep looping with 3-Wolf.
--> 11-Sheep looping with 4-Wolf.
--> 11-Sheep looping with 5-Wolf.
--> 11-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->11-Sheep has Store < Min_ernergy(600) (y=104, x=99, store=430). Will move normally and eat
-->11-Sheep (y=104, x=99, store=430) before normal moving and eating
-->11-Sheep (y=103, x=98, store=440) after normal moving and eating
___e2________ 11-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=251, x=48, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=251, x=48, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
---> 0-Wolf looping with 8-Sheep
---> 0-Wolf looping with 9-Sheep
---> 0-Wolf looping with 10-Sheep
---> 0-Wolf looping with 11-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=251, x=48, store=100) before normal moving
-->else1 ends: 0-Wolf (y=250, x=49, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=110, x=269, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=110, x=269, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
---> 1-Wolf looping with 8-Sheep
---> 1-Wolf looping with 9-Sheep
---> 1-Wolf looping with 10-Sheep
---> 1-Wolf looping with 11-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=110, x=269, store=300) before normal moving
-->else1 ends: 1-Wolf (y=111, x=270, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=228, x=110, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=228, x=110, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
---> 2-Wolf looping with 8-Sheep
---> 2-Wolf looping with 9-Sheep
---> 2-Wolf looping with 10-Sheep
---> 2-Wolf looping with 11-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=228, x=110, store=200) before normal moving
-->else1 ends: 2-Wolf (y=229, x=109, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=74, x=4, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=74, x=4, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
---> 3-Wolf looping with 8-Sheep
---> 3-Wolf looping with 9-Sheep
---> 3-Wolf looping with 10-Sheep
---> 3-Wolf looping with 11-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=74, x=4, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=73, x=3, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=50, x=16, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=50, x=16, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
---> 4-Wolf looping with 8-Sheep
---> 4-Wolf looping with 9-Sheep
---> 4-Wolf looping with 10-Sheep
---> 4-Wolf looping with 11-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=50, x=16, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=49, x=17, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=38, x=1, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=38, x=1, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
---> 5-Wolf looping with 8-Sheep
---> 5-Wolf looping with 9-Sheep
---> 5-Wolf looping with 10-Sheep
---> 5-Wolf looping with 11-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=38, x=1, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=39, x=2, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=48, x=2, store=836.0) --------
--> 6-Wolf has > 500 store (y=48, x=2, store=836.0) and Random >= 0.5. so will try to find CW to move closer or breed/fight if within AD(5).
-> No CW found. although store >500 and p>=0.5!
--->else2 begins: 6-Wolf (y=48, x=2, store=836.0) before normal moving.
--->else2 begins: 6-Wolf (y=49, x=1, store=836.0) after normal moving.
.... el2 _______  6-Wolf moved normally _______ 
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 193 ************

-> ------------ 0-Sheep initialised with (y=91, x=89, store=486.630692332983) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=91, x=89, store=486.630692332983). Will move normally and eat
-->0-Sheep (y=91, x=89, store=486.630692332983) before normal moving and eating
-->0-Sheep (y=90, x=90, store=496.630692332983) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=66, x=113, store=484.51744079589844) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=66, x=113, store=484.51744079589844). Will move normally and eat
-->1-Sheep (y=66, x=113, store=484.51744079589844) before normal moving and eating
-->1-Sheep (y=67, x=112, store=494.51744079589844) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=95, x=86, store=496.630692332983) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=95, x=86, store=496.630692332983). Will move normally and eat
-->2-Sheep (y=95, x=86, store=496.630692332983) before normal moving and eating
-->2-Sheep (y=94, x=85, store=506.630692332983) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=66, x=116, store=494.51744079589844) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=66, x=116, store=494.51744079589844). Will move normally and eat
-->3-Sheep (y=66, x=116, store=494.51744079589844) before normal moving and eating
-->3-Sheep (y=67, x=115, store=504.51744079589844) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=71, x=120, store=315.32188415527344) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=71, x=120, store=315.32188415527344). Will move normally and eat
-->4-Sheep (y=71, x=120, store=315.32188415527344) before normal moving and eating
-->4-Sheep (y=70, x=121, store=325.32188415527344) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=96, x=92, store=491.37308046221733) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=96, x=92, store=491.37308046221733). Will move normally and eat
-->5-Sheep (y=96, x=92, store=491.37308046221733) before normal moving and eating
-->5-Sheep (y=95, x=91, store=501.37308046221733) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=84, x=91, store=561.848760470748) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=84, x=91, store=561.848760470748). Will move normally and eat
-->6-Sheep (y=84, x=91, store=561.848760470748) before normal moving and eating
-->6-Sheep (y=85, x=90, store=571.848760470748) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=73, x=116, store=325.32188415527344) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=73, x=116, store=325.32188415527344). Will move normally and eat
-->7-Sheep (y=73, x=116, store=325.32188415527344) before normal moving and eating
-->7-Sheep (y=74, x=115, store=335.32188415527344) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________


-> ------------ 8-Sheep initialised with (y=94, x=94, store=571.848760470748) -----------
--> 8-Sheep looping with 0-Wolf.
--> 8-Sheep looping with 1-Wolf.
--> 8-Sheep looping with 2-Wolf.
--> 8-Sheep looping with 3-Wolf.
--> 8-Sheep looping with 4-Wolf.
--> 8-Sheep looping with 5-Wolf.
--> 8-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->8-Sheep has Store < Min_ernergy(600) (y=94, x=94, store=571.848760470748). Will move normally and eat
-->8-Sheep (y=94, x=94, store=571.848760470748) before normal moving and eating
-->8-Sheep (y=95, x=95, store=581.848760470748) after normal moving and eating
___e2________ 8-Sheep moved normally and ate ___________


-> ------------ 9-Sheep initialised with (y=80, x=125, store=670) -----------
--> 9-Sheep looping with 0-Wolf.
--> 9-Sheep looping with 1-Wolf.
--> 9-Sheep looping with 2-Wolf.
--> 9-Sheep looping with 3-Wolf.
--> 9-Sheep looping with 4-Wolf.
--> 9-Sheep looping with 5-Wolf.
--> 9-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->9-Sheep has Store > Min_ernergy(600) (y=80, x=125, store=670).
--> 9-Sheep looping with 0-Sheep.
--> 9-Sheep looping with 1-Sheep.
-> NO CS Found.
-> 9-Sheep (y=80, x=125, store=670) before normally moving and eating.
-> 9-Sheep (y=79, x=124, store=680) after normally moving and eating.
___e1________ 9-Sheep moved normally and ate ___________


-> ------------ 10-Sheep initialised with (y=107, x=108, store=540) -----------
--> 10-Sheep looping with 0-Wolf.
--> 10-Sheep looping with 1-Wolf.
--> 10-Sheep looping with 2-Wolf.
--> 10-Sheep looping with 3-Wolf.
--> 10-Sheep looping with 4-Wolf.
--> 10-Sheep looping with 5-Wolf.
--> 10-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->10-Sheep has Store < Min_ernergy(600) (y=107, x=108, store=540). Will move normally and eat
-->10-Sheep (y=107, x=108, store=540) before normal moving and eating
-->10-Sheep (y=108, x=109, store=550) after normal moving and eating
___e2________ 10-Sheep moved normally and ate ___________


-> ------------ 11-Sheep initialised with (y=103, x=98, store=440) -----------
--> 11-Sheep looping with 0-Wolf.
--> 11-Sheep looping with 1-Wolf.
--> 11-Sheep looping with 2-Wolf.
--> 11-Sheep looping with 3-Wolf.
--> 11-Sheep looping with 4-Wolf.
--> 11-Sheep looping with 5-Wolf.
--> 11-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->11-Sheep has Store < Min_ernergy(600) (y=103, x=98, store=440). Will move normally and eat
-->11-Sheep (y=103, x=98, store=440) before normal moving and eating
-->11-Sheep (y=104, x=97, store=450) after normal moving and eating
___e2________ 11-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=250, x=49, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=250, x=49, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
---> 0-Wolf looping with 8-Sheep
---> 0-Wolf looping with 9-Sheep
---> 0-Wolf looping with 10-Sheep
---> 0-Wolf looping with 11-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=250, x=49, store=100) before normal moving
-->else1 ends: 0-Wolf (y=251, x=50, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=111, x=270, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=111, x=270, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
---> 1-Wolf looping with 8-Sheep
---> 1-Wolf looping with 9-Sheep
---> 1-Wolf looping with 10-Sheep
---> 1-Wolf looping with 11-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=111, x=270, store=300) before normal moving
-->else1 ends: 1-Wolf (y=110, x=271, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=229, x=109, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=229, x=109, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
---> 2-Wolf looping with 8-Sheep
---> 2-Wolf looping with 9-Sheep
---> 2-Wolf looping with 10-Sheep
---> 2-Wolf looping with 11-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=229, x=109, store=200) before normal moving
-->else1 ends: 2-Wolf (y=228, x=108, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=73, x=3, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=73, x=3, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
---> 3-Wolf looping with 8-Sheep
---> 3-Wolf looping with 9-Sheep
---> 3-Wolf looping with 10-Sheep
---> 3-Wolf looping with 11-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=73, x=3, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=72, x=4, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=49, x=17, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=49, x=17, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
---> 4-Wolf looping with 8-Sheep
---> 4-Wolf looping with 9-Sheep
---> 4-Wolf looping with 10-Sheep
---> 4-Wolf looping with 11-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=49, x=17, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=50, x=16, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=39, x=2, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=39, x=2, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
---> 5-Wolf looping with 8-Sheep
---> 5-Wolf looping with 9-Sheep
---> 5-Wolf looping with 10-Sheep
---> 5-Wolf looping with 11-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=39, x=2, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=40, x=1, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=49, x=1, store=836.0) --------
--> if and elif not satisfied
--> 6-Wolf has > Min_energy(500) store (y=49, x=1, store=836.0) but Random < bf_e/2(0.25). So will move normally.
--->else3 begins: 6-Wolf (y=49, x=1, store=836.0) before normal moving.
--->else3 begins: 6-Wolf (y=48, x=2, store=836.0) after normal moving.
....e3_______ 6-Wolf moved normally_______
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 194 ************

-> ------------ 0-Sheep initialised with (y=90, x=90, store=496.630692332983) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=90, x=90, store=496.630692332983). Will move normally and eat
-->0-Sheep (y=90, x=90, store=496.630692332983) before normal moving and eating
-->0-Sheep (y=91, x=91, store=506.630692332983) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=67, x=112, store=494.51744079589844) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=67, x=112, store=494.51744079589844). Will move normally and eat
-->1-Sheep (y=67, x=112, store=494.51744079589844) before normal moving and eating
-->1-Sheep (y=68, x=113, store=504.51744079589844) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=94, x=85, store=506.630692332983) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=94, x=85, store=506.630692332983). Will move normally and eat
-->2-Sheep (y=94, x=85, store=506.630692332983) before normal moving and eating
-->2-Sheep (y=93, x=84, store=516.630692332983) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=67, x=115, store=504.51744079589844) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=67, x=115, store=504.51744079589844). Will move normally and eat
-->3-Sheep (y=67, x=115, store=504.51744079589844) before normal moving and eating
-->3-Sheep (y=66, x=116, store=514.5174407958984) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=70, x=121, store=325.32188415527344) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=70, x=121, store=325.32188415527344). Will move normally and eat
-->4-Sheep (y=70, x=121, store=325.32188415527344) before normal moving and eating
-->4-Sheep (y=71, x=120, store=335.32188415527344) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=95, x=91, store=501.37308046221733) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=95, x=91, store=501.37308046221733). Will move normally and eat
-->5-Sheep (y=95, x=91, store=501.37308046221733) before normal moving and eating
-->5-Sheep (y=96, x=90, store=511.37308046221733) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=85, x=90, store=571.848760470748) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=85, x=90, store=571.848760470748). Will move normally and eat
-->6-Sheep (y=85, x=90, store=571.848760470748) before normal moving and eating
-->6-Sheep (y=84, x=89, store=581.848760470748) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=74, x=115, store=335.32188415527344) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=74, x=115, store=335.32188415527344). Will move normally and eat
-->7-Sheep (y=74, x=115, store=335.32188415527344) before normal moving and eating
-->7-Sheep (y=75, x=114, store=345.32188415527344) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________


-> ------------ 8-Sheep initialised with (y=95, x=95, store=581.848760470748) -----------
--> 8-Sheep looping with 0-Wolf.
--> 8-Sheep looping with 1-Wolf.
--> 8-Sheep looping with 2-Wolf.
--> 8-Sheep looping with 3-Wolf.
--> 8-Sheep looping with 4-Wolf.
--> 8-Sheep looping with 5-Wolf.
--> 8-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->8-Sheep has Store < Min_ernergy(600) (y=95, x=95, store=581.848760470748). Will move normally and eat
-->8-Sheep (y=95, x=95, store=581.848760470748) before normal moving and eating
-->8-Sheep (y=94, x=96, store=591.848760470748) after normal moving and eating
___e2________ 8-Sheep moved normally and ate ___________


-> ------------ 9-Sheep initialised with (y=79, x=124, store=680) -----------
--> 9-Sheep looping with 0-Wolf.
--> 9-Sheep looping with 1-Wolf.
--> 9-Sheep looping with 2-Wolf.
--> 9-Sheep looping with 3-Wolf.
--> 9-Sheep looping with 4-Wolf.
--> 9-Sheep looping with 5-Wolf.
--> 9-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->9-Sheep has Store > Min_ernergy(600) (y=79, x=124, store=680).
--> 9-Sheep looping with 0-Sheep.
--> 9-Sheep looping with 1-Sheep.
-> NO CS Found.
-> 9-Sheep (y=79, x=124, store=680) before normally moving and eating.
-> 9-Sheep (y=78, x=125, store=690) after normally moving and eating.
___e1________ 9-Sheep moved normally and ate ___________


-> ------------ 10-Sheep initialised with (y=108, x=109, store=550) -----------
--> 10-Sheep looping with 0-Wolf.
--> 10-Sheep looping with 1-Wolf.
--> 10-Sheep looping with 2-Wolf.
--> 10-Sheep looping with 3-Wolf.
--> 10-Sheep looping with 4-Wolf.
--> 10-Sheep looping with 5-Wolf.
--> 10-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->10-Sheep has Store < Min_ernergy(600) (y=108, x=109, store=550). Will move normally and eat
-->10-Sheep (y=108, x=109, store=550) before normal moving and eating
-->10-Sheep (y=109, x=110, store=560) after normal moving and eating
___e2________ 10-Sheep moved normally and ate ___________


-> ------------ 11-Sheep initialised with (y=104, x=97, store=450) -----------
--> 11-Sheep looping with 0-Wolf.
--> 11-Sheep looping with 1-Wolf.
--> 11-Sheep looping with 2-Wolf.
--> 11-Sheep looping with 3-Wolf.
--> 11-Sheep looping with 4-Wolf.
--> 11-Sheep looping with 5-Wolf.
--> 11-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->11-Sheep has Store < Min_ernergy(600) (y=104, x=97, store=450). Will move normally and eat
-->11-Sheep (y=104, x=97, store=450) before normal moving and eating
-->11-Sheep (y=103, x=98, store=460) after normal moving and eating
___e2________ 11-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=251, x=50, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=251, x=50, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
---> 0-Wolf looping with 8-Sheep
---> 0-Wolf looping with 9-Sheep
---> 0-Wolf looping with 10-Sheep
---> 0-Wolf looping with 11-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=251, x=50, store=100) before normal moving
-->else1 ends: 0-Wolf (y=250, x=49, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=110, x=271, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=110, x=271, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
---> 1-Wolf looping with 8-Sheep
---> 1-Wolf looping with 9-Sheep
---> 1-Wolf looping with 10-Sheep
---> 1-Wolf looping with 11-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=110, x=271, store=300) before normal moving
-->else1 ends: 1-Wolf (y=109, x=270, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=228, x=108, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=228, x=108, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
---> 2-Wolf looping with 8-Sheep
---> 2-Wolf looping with 9-Sheep
---> 2-Wolf looping with 10-Sheep
---> 2-Wolf looping with 11-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=228, x=108, store=200) before normal moving
-->else1 ends: 2-Wolf (y=229, x=107, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=72, x=4, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=72, x=4, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
---> 3-Wolf looping with 8-Sheep
---> 3-Wolf looping with 9-Sheep
---> 3-Wolf looping with 10-Sheep
---> 3-Wolf looping with 11-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=72, x=4, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=73, x=3, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=50, x=16, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=50, x=16, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
---> 4-Wolf looping with 8-Sheep
---> 4-Wolf looping with 9-Sheep
---> 4-Wolf looping with 10-Sheep
---> 4-Wolf looping with 11-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=50, x=16, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=51, x=17, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=40, x=1, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=40, x=1, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
---> 5-Wolf looping with 8-Sheep
---> 5-Wolf looping with 9-Sheep
---> 5-Wolf looping with 10-Sheep
---> 5-Wolf looping with 11-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=40, x=1, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=39, x=0, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=48, x=2, store=836.0) --------
--> if and elif not satisfied
--> 6-Wolf has > Min_energy(500) store (y=48, x=2, store=836.0) but Random < bf_e/2(0.25). So will move normally.
--->else3 begins: 6-Wolf (y=48, x=2, store=836.0) before normal moving.
--->else3 begins: 6-Wolf (y=49, x=3, store=836.0) after normal moving.
....e3_______ 6-Wolf moved normally_______
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 195 ************

-> ------------ 0-Sheep initialised with (y=91, x=91, store=506.630692332983) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=91, x=91, store=506.630692332983). Will move normally and eat
-->0-Sheep (y=91, x=91, store=506.630692332983) before normal moving and eating
-->0-Sheep (y=90, x=90, store=516.630692332983) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=68, x=113, store=504.51744079589844) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=68, x=113, store=504.51744079589844). Will move normally and eat
-->1-Sheep (y=68, x=113, store=504.51744079589844) before normal moving and eating
-->1-Sheep (y=67, x=114, store=514.5174407958984) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=93, x=84, store=516.630692332983) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=93, x=84, store=516.630692332983). Will move normally and eat
-->2-Sheep (y=93, x=84, store=516.630692332983) before normal moving and eating
-->2-Sheep (y=92, x=85, store=526.630692332983) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=66, x=116, store=514.5174407958984) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=66, x=116, store=514.5174407958984). Will move normally and eat
-->3-Sheep (y=66, x=116, store=514.5174407958984) before normal moving and eating
-->3-Sheep (y=65, x=117, store=524.5174407958984) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=71, x=120, store=335.32188415527344) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=71, x=120, store=335.32188415527344). Will move normally and eat
-->4-Sheep (y=71, x=120, store=335.32188415527344) before normal moving and eating
-->4-Sheep (y=72, x=121, store=345.32188415527344) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=96, x=90, store=511.37308046221733) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=96, x=90, store=511.37308046221733). Will move normally and eat
-->5-Sheep (y=96, x=90, store=511.37308046221733) before normal moving and eating
-->5-Sheep (y=97, x=89, store=521.3730804622173) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=84, x=89, store=581.848760470748) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=84, x=89, store=581.848760470748). Will move normally and eat
-->6-Sheep (y=84, x=89, store=581.848760470748) before normal moving and eating
-->6-Sheep (y=83, x=90, store=591.848760470748) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=75, x=114, store=345.32188415527344) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=75, x=114, store=345.32188415527344). Will move normally and eat
-->7-Sheep (y=75, x=114, store=345.32188415527344) before normal moving and eating
-->7-Sheep (y=76, x=113, store=355.32188415527344) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________


-> ------------ 8-Sheep initialised with (y=94, x=96, store=591.848760470748) -----------
--> 8-Sheep looping with 0-Wolf.
--> 8-Sheep looping with 1-Wolf.
--> 8-Sheep looping with 2-Wolf.
--> 8-Sheep looping with 3-Wolf.
--> 8-Sheep looping with 4-Wolf.
--> 8-Sheep looping with 5-Wolf.
--> 8-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->8-Sheep has Store < Min_ernergy(600) (y=94, x=96, store=591.848760470748). Will move normally and eat
-->8-Sheep (y=94, x=96, store=591.848760470748) before normal moving and eating
-->8-Sheep (y=93, x=95, store=601.848760470748) after normal moving and eating
___e2________ 8-Sheep moved normally and ate ___________


-> ------------ 9-Sheep initialised with (y=78, x=125, store=690) -----------
--> 9-Sheep looping with 0-Wolf.
--> 9-Sheep looping with 1-Wolf.
--> 9-Sheep looping with 2-Wolf.
--> 9-Sheep looping with 3-Wolf.
--> 9-Sheep looping with 4-Wolf.
--> 9-Sheep looping with 5-Wolf.
--> 9-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->9-Sheep has Store > Min_ernergy(600) (y=78, x=125, store=690).
--> 9-Sheep looping with 0-Sheep.
--> 9-Sheep looping with 1-Sheep.
-> NO CS Found.
-> 9-Sheep (y=78, x=125, store=690) before normally moving and eating.
-> 9-Sheep (y=77, x=124, store=700) after normally moving and eating.
___e1________ 9-Sheep moved normally and ate ___________


-> ------------ 10-Sheep initialised with (y=109, x=110, store=560) -----------
--> 10-Sheep looping with 0-Wolf.
--> 10-Sheep looping with 1-Wolf.
--> 10-Sheep looping with 2-Wolf.
--> 10-Sheep looping with 3-Wolf.
--> 10-Sheep looping with 4-Wolf.
--> 10-Sheep looping with 5-Wolf.
--> 10-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->10-Sheep has Store < Min_ernergy(600) (y=109, x=110, store=560). Will move normally and eat
-->10-Sheep (y=109, x=110, store=560) before normal moving and eating
-->10-Sheep (y=110, x=111, store=570) after normal moving and eating
___e2________ 10-Sheep moved normally and ate ___________


-> ------------ 11-Sheep initialised with (y=103, x=98, store=460) -----------
--> 11-Sheep looping with 0-Wolf.
--> 11-Sheep looping with 1-Wolf.
--> 11-Sheep looping with 2-Wolf.
--> 11-Sheep looping with 3-Wolf.
--> 11-Sheep looping with 4-Wolf.
--> 11-Sheep looping with 5-Wolf.
--> 11-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->11-Sheep has Store < Min_ernergy(600) (y=103, x=98, store=460). Will move normally and eat
-->11-Sheep (y=103, x=98, store=460) before normal moving and eating
-->11-Sheep (y=102, x=97, store=470) after normal moving and eating
___e2________ 11-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=250, x=49, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=250, x=49, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
---> 0-Wolf looping with 8-Sheep
---> 0-Wolf looping with 9-Sheep
---> 0-Wolf looping with 10-Sheep
---> 0-Wolf looping with 11-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=250, x=49, store=100) before normal moving
-->else1 ends: 0-Wolf (y=249, x=50, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=109, x=270, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=109, x=270, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
---> 1-Wolf looping with 8-Sheep
---> 1-Wolf looping with 9-Sheep
---> 1-Wolf looping with 10-Sheep
---> 1-Wolf looping with 11-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=109, x=270, store=300) before normal moving
-->else1 ends: 1-Wolf (y=110, x=269, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=229, x=107, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=229, x=107, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
---> 2-Wolf looping with 8-Sheep
---> 2-Wolf looping with 9-Sheep
---> 2-Wolf looping with 10-Sheep
---> 2-Wolf looping with 11-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=229, x=107, store=200) before normal moving
-->else1 ends: 2-Wolf (y=230, x=108, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=73, x=3, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=73, x=3, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
---> 3-Wolf looping with 8-Sheep
---> 3-Wolf looping with 9-Sheep
---> 3-Wolf looping with 10-Sheep
---> 3-Wolf looping with 11-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=73, x=3, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=72, x=2, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=51, x=17, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=51, x=17, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
---> 4-Wolf looping with 8-Sheep
---> 4-Wolf looping with 9-Sheep
---> 4-Wolf looping with 10-Sheep
---> 4-Wolf looping with 11-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=51, x=17, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=50, x=18, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=39, x=0, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=39, x=0, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
---> 5-Wolf looping with 8-Sheep
---> 5-Wolf looping with 9-Sheep
---> 5-Wolf looping with 10-Sheep
---> 5-Wolf looping with 11-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=39, x=0, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=40, x=0, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=49, x=3, store=836.0) --------
--> 6-Wolf has > 500 store (y=49, x=3, store=836.0) and Random >= 0.5. so will try to find CW to move closer or breed/fight if within AD(5).
-> No CW found. although store >500 and p>=0.5!
--->else2 begins: 6-Wolf (y=49, x=3, store=836.0) before normal moving.
--->else2 begins: 6-Wolf (y=50, x=4, store=836.0) after normal moving.
.... el2 _______  6-Wolf moved normally _______ 
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 196 ************

-> ------------ 0-Sheep initialised with (y=90, x=90, store=516.630692332983) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=90, x=90, store=516.630692332983). Will move normally and eat
-->0-Sheep (y=90, x=90, store=516.630692332983) before normal moving and eating
-->0-Sheep (y=89, x=91, store=526.630692332983) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=67, x=114, store=514.5174407958984) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=67, x=114, store=514.5174407958984). Will move normally and eat
-->1-Sheep (y=67, x=114, store=514.5174407958984) before normal moving and eating
-->1-Sheep (y=66, x=115, store=524.5174407958984) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=92, x=85, store=526.630692332983) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=92, x=85, store=526.630692332983). Will move normally and eat
-->2-Sheep (y=92, x=85, store=526.630692332983) before normal moving and eating
-->2-Sheep (y=91, x=86, store=536.630692332983) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=65, x=117, store=524.5174407958984) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=65, x=117, store=524.5174407958984). Will move normally and eat
-->3-Sheep (y=65, x=117, store=524.5174407958984) before normal moving and eating
-->3-Sheep (y=64, x=116, store=534.5174407958984) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=72, x=121, store=345.32188415527344) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=72, x=121, store=345.32188415527344). Will move normally and eat
-->4-Sheep (y=72, x=121, store=345.32188415527344) before normal moving and eating
-->4-Sheep (y=71, x=122, store=355.32188415527344) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=97, x=89, store=521.3730804622173) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=97, x=89, store=521.3730804622173). Will move normally and eat
-->5-Sheep (y=97, x=89, store=521.3730804622173) before normal moving and eating
-->5-Sheep (y=98, x=88, store=531.3730804622173) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=83, x=90, store=591.848760470748) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store < Min_ernergy(600) (y=83, x=90, store=591.848760470748). Will move normally and eat
-->6-Sheep (y=83, x=90, store=591.848760470748) before normal moving and eating
-->6-Sheep (y=84, x=89, store=601.848760470748) after normal moving and eating
___e2________ 6-Sheep moved normally and ate ___________


-> ------------ 7-Sheep initialised with (y=76, x=113, store=355.32188415527344) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=76, x=113, store=355.32188415527344). Will move normally and eat
-->7-Sheep (y=76, x=113, store=355.32188415527344) before normal moving and eating
-->7-Sheep (y=75, x=114, store=365.32188415527344) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________


-> ------------ 8-Sheep initialised with (y=93, x=95, store=601.848760470748) -----------
--> 8-Sheep looping with 0-Wolf.
--> 8-Sheep looping with 1-Wolf.
--> 8-Sheep looping with 2-Wolf.
--> 8-Sheep looping with 3-Wolf.
--> 8-Sheep looping with 4-Wolf.
--> 8-Sheep looping with 5-Wolf.
--> 8-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->8-Sheep has Store > Min_ernergy(600) (y=93, x=95, store=601.848760470748).
--> 8-Sheep looping with 0-Sheep.
--> 8-Sheep looping with 1-Sheep.
----> ---- (AD < D < MD).
----> Min distance=23.345235059857504 for 8-Sheep (y=93, x=95, store=601.848760470748) with 1-Sheep (y=110, x=111, store=570).
--> 8-Sheep looping with 2-Sheep.
----> ---- (AD < D < MD).
----> Min distance=9.219544457292887 for 8-Sheep (y=93, x=95, store=601.848760470748) with 2-Sheep (y=102, x=97, store=470).
->CS Found!
-> 8-Sheep (y=93, x=95, store=601.848760470748) before moving closer (while eating) to CS-Sheep: (y=102, x=97, store=470).
-> 8-Wolf (y=97, x=96, store=611.848760470748) after moving closer (while eating) to CS-Sheep: (y=102, x=97, store=470).
___________ 8-Sheep moved closer CS___________


-> ------------ 9-Sheep initialised with (y=77, x=124, store=700) -----------
--> 9-Sheep looping with 0-Wolf.
--> 9-Sheep looping with 1-Wolf.
--> 9-Sheep looping with 2-Wolf.
--> 9-Sheep looping with 3-Wolf.
--> 9-Sheep looping with 4-Wolf.
--> 9-Sheep looping with 5-Wolf.
--> 9-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->9-Sheep has Store > Min_ernergy(600) (y=77, x=124, store=700).
--> 9-Sheep looping with 0-Sheep.
--> 9-Sheep looping with 1-Sheep.
-> NO CS Found.
-> 9-Sheep (y=77, x=124, store=700) before normally moving and eating.
-> 9-Sheep (y=78, x=123, store=710) after normally moving and eating.
___e1________ 9-Sheep moved normally and ate ___________


-> ------------ 10-Sheep initialised with (y=110, x=111, store=570) -----------
--> 10-Sheep looping with 0-Wolf.
--> 10-Sheep looping with 1-Wolf.
--> 10-Sheep looping with 2-Wolf.
--> 10-Sheep looping with 3-Wolf.
--> 10-Sheep looping with 4-Wolf.
--> 10-Sheep looping with 5-Wolf.
--> 10-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->10-Sheep has Store < Min_ernergy(600) (y=110, x=111, store=570). Will move normally and eat
-->10-Sheep (y=110, x=111, store=570) before normal moving and eating
-->10-Sheep (y=111, x=112, store=580) after normal moving and eating
___e2________ 10-Sheep moved normally and ate ___________


-> ------------ 11-Sheep initialised with (y=102, x=97, store=470) -----------
--> 11-Sheep looping with 0-Wolf.
--> 11-Sheep looping with 1-Wolf.
--> 11-Sheep looping with 2-Wolf.
--> 11-Sheep looping with 3-Wolf.
--> 11-Sheep looping with 4-Wolf.
--> 11-Sheep looping with 5-Wolf.
--> 11-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->11-Sheep has Store < Min_ernergy(600) (y=102, x=97, store=470). Will move normally and eat
-->11-Sheep (y=102, x=97, store=470) before normal moving and eating
-->11-Sheep (y=103, x=96, store=480) after normal moving and eating
___e2________ 11-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=249, x=50, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=249, x=50, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
---> 0-Wolf looping with 8-Sheep
---> 0-Wolf looping with 9-Sheep
---> 0-Wolf looping with 10-Sheep
---> 0-Wolf looping with 11-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=249, x=50, store=100) before normal moving
-->else1 ends: 0-Wolf (y=248, x=51, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=110, x=269, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=110, x=269, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
---> 1-Wolf looping with 8-Sheep
---> 1-Wolf looping with 9-Sheep
---> 1-Wolf looping with 10-Sheep
---> 1-Wolf looping with 11-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=110, x=269, store=300) before normal moving
-->else1 ends: 1-Wolf (y=109, x=270, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=230, x=108, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=230, x=108, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
---> 2-Wolf looping with 8-Sheep
---> 2-Wolf looping with 9-Sheep
---> 2-Wolf looping with 10-Sheep
---> 2-Wolf looping with 11-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=230, x=108, store=200) before normal moving
-->else1 ends: 2-Wolf (y=229, x=107, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=72, x=2, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=72, x=2, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
---> 3-Wolf looping with 8-Sheep
---> 3-Wolf looping with 9-Sheep
---> 3-Wolf looping with 10-Sheep
---> 3-Wolf looping with 11-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=72, x=2, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=73, x=3, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=50, x=18, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=50, x=18, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
---> 4-Wolf looping with 8-Sheep
---> 4-Wolf looping with 9-Sheep
---> 4-Wolf looping with 10-Sheep
---> 4-Wolf looping with 11-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=50, x=18, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=51, x=17, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=40, x=0, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=40, x=0, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
---> 5-Wolf looping with 8-Sheep
---> 5-Wolf looping with 9-Sheep
---> 5-Wolf looping with 10-Sheep
---> 5-Wolf looping with 11-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=40, x=0, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=39, x=1, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=50, x=4, store=836.0) --------
--> if and elif not satisfied
--> 6-Wolf has > Min_energy(500) store (y=50, x=4, store=836.0) but Random < bf_e/2(0.25). So will move normally.
--->else3 begins: 6-Wolf (y=50, x=4, store=836.0) before normal moving.
--->else3 begins: 6-Wolf (y=51, x=3, store=836.0) after normal moving.
....e3_______ 6-Wolf moved normally_______
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 197 ************

-> ------------ 0-Sheep initialised with (y=89, x=91, store=526.630692332983) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=89, x=91, store=526.630692332983). Will move normally and eat
-->0-Sheep (y=89, x=91, store=526.630692332983) before normal moving and eating
-->0-Sheep (y=88, x=90, store=536.630692332983) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=66, x=115, store=524.5174407958984) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=66, x=115, store=524.5174407958984). Will move normally and eat
-->1-Sheep (y=66, x=115, store=524.5174407958984) before normal moving and eating
-->1-Sheep (y=67, x=114, store=534.5174407958984) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=91, x=86, store=536.630692332983) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=91, x=86, store=536.630692332983). Will move normally and eat
-->2-Sheep (y=91, x=86, store=536.630692332983) before normal moving and eating
-->2-Sheep (y=92, x=87, store=546.630692332983) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=64, x=116, store=534.5174407958984) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=64, x=116, store=534.5174407958984). Will move normally and eat
-->3-Sheep (y=64, x=116, store=534.5174407958984) before normal moving and eating
-->3-Sheep (y=65, x=115, store=544.5174407958984) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=71, x=122, store=355.32188415527344) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=71, x=122, store=355.32188415527344). Will move normally and eat
-->4-Sheep (y=71, x=122, store=355.32188415527344) before normal moving and eating
-->4-Sheep (y=72, x=121, store=365.32188415527344) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=98, x=88, store=531.3730804622173) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=98, x=88, store=531.3730804622173). Will move normally and eat
-->5-Sheep (y=98, x=88, store=531.3730804622173) before normal moving and eating
-->5-Sheep (y=99, x=87, store=541.3730804622173) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=84, x=89, store=601.848760470748) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store > Min_ernergy(600) (y=84, x=89, store=601.848760470748).
--> 6-Sheep looping with 0-Sheep.
--> 6-Sheep looping with 1-Sheep.
----> ---- (AD < D < MD).
----> Min distance=14.7648230602334 for 6-Sheep (y=84, x=89, store=601.848760470748) with 1-Sheep (y=97, x=96, store=611.848760470748).
--> 6-Sheep looping with 2-Sheep.
--> 6-Sheep looping with 3-Sheep.
--> 6-Sheep looping with 4-Sheep.
->CS Found!
-> 6-Sheep (y=84, x=89, store=601.848760470748) before moving closer (while eating) to CS-Sheep: (y=97, x=96, store=611.848760470748).
-> 6-Wolf (y=90, x=92, store=611.848760470748) after moving closer (while eating) to CS-Sheep: (y=97, x=96, store=611.848760470748).
___________ 6-Sheep moved closer CS___________


-> ------------ 7-Sheep initialised with (y=75, x=114, store=365.32188415527344) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=75, x=114, store=365.32188415527344). Will move normally and eat
-->7-Sheep (y=75, x=114, store=365.32188415527344) before normal moving and eating
-->7-Sheep (y=76, x=113, store=375.32188415527344) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________


-> ------------ 8-Sheep initialised with (y=97, x=96, store=611.848760470748) -----------
--> 8-Sheep looping with 0-Wolf.
--> 8-Sheep looping with 1-Wolf.
--> 8-Sheep looping with 2-Wolf.
--> 8-Sheep looping with 3-Wolf.
--> 8-Sheep looping with 4-Wolf.
--> 8-Sheep looping with 5-Wolf.
--> 8-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->8-Sheep has Store > Min_ernergy(600) (y=97, x=96, store=611.848760470748).
--> 8-Sheep looping with 0-Sheep.
--> 8-Sheep looping with 1-Sheep.
----> ---- (AD < D < MD).
----> Min distance=21.2602916254693 for 8-Sheep (y=97, x=96, store=611.848760470748) with 1-Sheep (y=111, x=112, store=580).
--> 8-Sheep looping with 2-Sheep.
----> ---- (AD < D < MD).
----> Min distance=6.0 for 8-Sheep (y=97, x=96, store=611.848760470748) with 2-Sheep (y=103, x=96, store=480).
->CS Found!
-> 8-Sheep (y=97, x=96, store=611.848760470748) before moving closer (while eating) to CS-Sheep: (y=103, x=96, store=480).
-> 8-Wolf (y=100, x=96, store=621.848760470748) after moving closer (while eating) to CS-Sheep: (y=103, x=96, store=480).
___________ 8-Sheep moved closer CS___________


-> ------------ 9-Sheep initialised with (y=78, x=123, store=710) -----------
--> 9-Sheep looping with 0-Wolf.
--> 9-Sheep looping with 1-Wolf.
--> 9-Sheep looping with 2-Wolf.
--> 9-Sheep looping with 3-Wolf.
--> 9-Sheep looping with 4-Wolf.
--> 9-Sheep looping with 5-Wolf.
--> 9-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->9-Sheep has Store > Min_ernergy(600) (y=78, x=123, store=710).
--> 9-Sheep looping with 0-Sheep.
--> 9-Sheep looping with 1-Sheep.
-> NO CS Found.
-> 9-Sheep (y=78, x=123, store=710) before normally moving and eating.
-> 9-Sheep (y=79, x=122, store=720) after normally moving and eating.
___e1________ 9-Sheep moved normally and ate ___________


-> ------------ 10-Sheep initialised with (y=111, x=112, store=580) -----------
--> 10-Sheep looping with 0-Wolf.
--> 10-Sheep looping with 1-Wolf.
--> 10-Sheep looping with 2-Wolf.
--> 10-Sheep looping with 3-Wolf.
--> 10-Sheep looping with 4-Wolf.
--> 10-Sheep looping with 5-Wolf.
--> 10-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->10-Sheep has Store < Min_ernergy(600) (y=111, x=112, store=580). Will move normally and eat
-->10-Sheep (y=111, x=112, store=580) before normal moving and eating
-->10-Sheep (y=110, x=111, store=590) after normal moving and eating
___e2________ 10-Sheep moved normally and ate ___________


-> ------------ 11-Sheep initialised with (y=103, x=96, store=480) -----------
--> 11-Sheep looping with 0-Wolf.
--> 11-Sheep looping with 1-Wolf.
--> 11-Sheep looping with 2-Wolf.
--> 11-Sheep looping with 3-Wolf.
--> 11-Sheep looping with 4-Wolf.
--> 11-Sheep looping with 5-Wolf.
--> 11-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->11-Sheep has Store < Min_ernergy(600) (y=103, x=96, store=480). Will move normally and eat
-->11-Sheep (y=103, x=96, store=480) before normal moving and eating
-->11-Sheep (y=104, x=97, store=490) after normal moving and eating
___e2________ 11-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=248, x=51, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=248, x=51, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
---> 0-Wolf looping with 8-Sheep
---> 0-Wolf looping with 9-Sheep
---> 0-Wolf looping with 10-Sheep
---> 0-Wolf looping with 11-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=248, x=51, store=100) before normal moving
-->else1 ends: 0-Wolf (y=247, x=52, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=109, x=270, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=109, x=270, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
---> 1-Wolf looping with 8-Sheep
---> 1-Wolf looping with 9-Sheep
---> 1-Wolf looping with 10-Sheep
---> 1-Wolf looping with 11-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=109, x=270, store=300) before normal moving
-->else1 ends: 1-Wolf (y=108, x=269, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=229, x=107, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=229, x=107, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
---> 2-Wolf looping with 8-Sheep
---> 2-Wolf looping with 9-Sheep
---> 2-Wolf looping with 10-Sheep
---> 2-Wolf looping with 11-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=229, x=107, store=200) before normal moving
-->else1 ends: 2-Wolf (y=228, x=106, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=73, x=3, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=73, x=3, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
---> 3-Wolf looping with 8-Sheep
---> 3-Wolf looping with 9-Sheep
---> 3-Wolf looping with 10-Sheep
---> 3-Wolf looping with 11-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=73, x=3, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=74, x=2, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=51, x=17, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=51, x=17, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
---> 4-Wolf looping with 8-Sheep
---> 4-Wolf looping with 9-Sheep
---> 4-Wolf looping with 10-Sheep
---> 4-Wolf looping with 11-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=51, x=17, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=52, x=18, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=39, x=1, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=39, x=1, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
---> 5-Wolf looping with 8-Sheep
---> 5-Wolf looping with 9-Sheep
---> 5-Wolf looping with 10-Sheep
---> 5-Wolf looping with 11-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=39, x=1, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=40, x=0, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=51, x=3, store=836.0) --------
--> 6-Wolf has > 500 store (y=51, x=3, store=836.0) and Random >= 0.5. so will try to find CW to move closer or breed/fight if within AD(5).
-> No CW found. although store >500 and p>=0.5!
--->else2 begins: 6-Wolf (y=51, x=3, store=836.0) before normal moving.
--->else2 begins: 6-Wolf (y=50, x=4, store=836.0) after normal moving.
.... el2 _______  6-Wolf moved normally _______ 
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 198 ************

-> ------------ 0-Sheep initialised with (y=88, x=90, store=536.630692332983) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=88, x=90, store=536.630692332983). Will move normally and eat
-->0-Sheep (y=88, x=90, store=536.630692332983) before normal moving and eating
-->0-Sheep (y=87, x=89, store=546.630692332983) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=67, x=114, store=534.5174407958984) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=67, x=114, store=534.5174407958984). Will move normally and eat
-->1-Sheep (y=67, x=114, store=534.5174407958984) before normal moving and eating
-->1-Sheep (y=66, x=115, store=544.5174407958984) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=92, x=87, store=546.630692332983) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=92, x=87, store=546.630692332983). Will move normally and eat
-->2-Sheep (y=92, x=87, store=546.630692332983) before normal moving and eating
-->2-Sheep (y=91, x=86, store=556.630692332983) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=65, x=115, store=544.5174407958984) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=65, x=115, store=544.5174407958984). Will move normally and eat
-->3-Sheep (y=65, x=115, store=544.5174407958984) before normal moving and eating
-->3-Sheep (y=64, x=114, store=554.5174407958984) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=72, x=121, store=365.32188415527344) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=72, x=121, store=365.32188415527344). Will move normally and eat
-->4-Sheep (y=72, x=121, store=365.32188415527344) before normal moving and eating
-->4-Sheep (y=71, x=120, store=375.32188415527344) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=99, x=87, store=541.3730804622173) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=99, x=87, store=541.3730804622173). Will move normally and eat
-->5-Sheep (y=99, x=87, store=541.3730804622173) before normal moving and eating
-->5-Sheep (y=100, x=86, store=551.3730804622173) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=90, x=92, store=611.848760470748) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store > Min_ernergy(600) (y=90, x=92, store=611.848760470748).
--> 6-Sheep looping with 0-Sheep.
--> 6-Sheep looping with 1-Sheep.
----> ---- (AD < D < MD).
----> Min distance=10.770329614269007 for 6-Sheep (y=90, x=92, store=611.848760470748) with 1-Sheep (y=100, x=96, store=621.848760470748).
--> 6-Sheep looping with 2-Sheep.
--> 6-Sheep looping with 3-Sheep.
--> 6-Sheep looping with 4-Sheep.
->CS Found!
-> 6-Sheep (y=90, x=92, store=611.848760470748) before moving closer (while eating) to CS-Sheep: (y=100, x=96, store=621.848760470748).
-> 6-Wolf (y=95, x=94, store=621.848760470748) after moving closer (while eating) to CS-Sheep: (y=100, x=96, store=621.848760470748).
___________ 6-Sheep moved closer CS___________


-> ------------ 7-Sheep initialised with (y=76, x=113, store=375.32188415527344) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=76, x=113, store=375.32188415527344). Will move normally and eat
-->7-Sheep (y=76, x=113, store=375.32188415527344) before normal moving and eating
-->7-Sheep (y=75, x=112, store=385.32188415527344) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________


-> ------------ 8-Sheep initialised with (y=100, x=96, store=621.848760470748) -----------
--> 8-Sheep looping with 0-Wolf.
--> 8-Sheep looping with 1-Wolf.
--> 8-Sheep looping with 2-Wolf.
--> 8-Sheep looping with 3-Wolf.
--> 8-Sheep looping with 4-Wolf.
--> 8-Sheep looping with 5-Wolf.
--> 8-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->8-Sheep has Store > Min_ernergy(600) (y=100, x=96, store=621.848760470748).
--> 8-Sheep looping with 0-Sheep.
--> 8-Sheep looping with 1-Sheep.
----> ---- (AD < D < MD).
----> Min distance=18.027756377319946 for 8-Sheep (y=100, x=96, store=621.848760470748) with 1-Sheep (y=110, x=111, store=590).
--> 8-Sheep looping with 2-Sheep.
----> D <=AD. Sheep Breeding/Sharing proximity of 4.123105625617661(<=5) entered by CS 8-Sheep (y=100, x=96, store=621.848760470748) with CS 2-Sheep (y=104, x=97, store=490).
-----> 8-Sheep (y=100, x=96, store=621.848760470748) and CS 2-Sheep (y=104, x=97, store=490 will not mate as CS 2-Sheep store <600. They will share resource to become average.
-----> Shared resources = True
-----> 8-Sheep (y=100, x=96, store=555.924380235374) and CS 2-Sheep (y=104, x=97, store=555.924380235374) after sharing resources!
_____________ 8-Sheep and CS 2-Sheep shared resources ____________
_______ Breeding=False, Failed breeding=False, Share=True for 8-Sheep __________

-> ------------ 9-Sheep initialised with (y=79, x=122, store=720) -----------
--> 9-Sheep looping with 0-Wolf.
--> 9-Sheep looping with 1-Wolf.
--> 9-Sheep looping with 2-Wolf.
--> 9-Sheep looping with 3-Wolf.
--> 9-Sheep looping with 4-Wolf.
--> 9-Sheep looping with 5-Wolf.
--> 9-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->9-Sheep has Store > Min_ernergy(600) (y=79, x=122, store=720).
--> 9-Sheep looping with 0-Sheep.
--> 9-Sheep looping with 1-Sheep.
-> NO CS Found.
-> 9-Sheep (y=79, x=122, store=720) before normally moving and eating.
-> 9-Sheep (y=80, x=121, store=730) after normally moving and eating.
___e1________ 9-Sheep moved normally and ate ___________


-> ------------ 10-Sheep initialised with (y=110, x=111, store=590) -----------
--> 10-Sheep looping with 0-Wolf.
--> 10-Sheep looping with 1-Wolf.
--> 10-Sheep looping with 2-Wolf.
--> 10-Sheep looping with 3-Wolf.
--> 10-Sheep looping with 4-Wolf.
--> 10-Sheep looping with 5-Wolf.
--> 10-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->10-Sheep has Store < Min_ernergy(600) (y=110, x=111, store=590). Will move normally and eat
-->10-Sheep (y=110, x=111, store=590) before normal moving and eating
-->10-Sheep (y=111, x=110, store=600) after normal moving and eating
___e2________ 10-Sheep moved normally and ate ___________


-> ------------ 11-Sheep initialised with (y=104, x=97, store=555.924380235374) -----------
--> 11-Sheep looping with 0-Wolf.
--> 11-Sheep looping with 1-Wolf.
--> 11-Sheep looping with 2-Wolf.
--> 11-Sheep looping with 3-Wolf.
--> 11-Sheep looping with 4-Wolf.
--> 11-Sheep looping with 5-Wolf.
--> 11-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->11-Sheep has Store < Min_ernergy(600) (y=104, x=97, store=555.924380235374). Will move normally and eat
-->11-Sheep (y=104, x=97, store=555.924380235374) before normal moving and eating
-->11-Sheep (y=103, x=96, store=565.924380235374) after normal moving and eating
___e2________ 11-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=247, x=52, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=247, x=52, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
---> 0-Wolf looping with 8-Sheep
---> 0-Wolf looping with 9-Sheep
---> 0-Wolf looping with 10-Sheep
---> 0-Wolf looping with 11-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=247, x=52, store=100) before normal moving
-->else1 ends: 0-Wolf (y=248, x=51, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=108, x=269, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=108, x=269, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
---> 1-Wolf looping with 8-Sheep
---> 1-Wolf looping with 9-Sheep
---> 1-Wolf looping with 10-Sheep
---> 1-Wolf looping with 11-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=108, x=269, store=300) before normal moving
-->else1 ends: 1-Wolf (y=109, x=270, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=228, x=106, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=228, x=106, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
---> 2-Wolf looping with 8-Sheep
---> 2-Wolf looping with 9-Sheep
---> 2-Wolf looping with 10-Sheep
---> 2-Wolf looping with 11-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=228, x=106, store=200) before normal moving
-->else1 ends: 2-Wolf (y=227, x=105, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=74, x=2, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=74, x=2, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
---> 3-Wolf looping with 8-Sheep
---> 3-Wolf looping with 9-Sheep
---> 3-Wolf looping with 10-Sheep
---> 3-Wolf looping with 11-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=74, x=2, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=75, x=3, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=52, x=18, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=52, x=18, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
---> 4-Wolf looping with 8-Sheep
---> 4-Wolf looping with 9-Sheep
---> 4-Wolf looping with 10-Sheep
---> 4-Wolf looping with 11-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=52, x=18, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=51, x=17, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=40, x=0, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=40, x=0, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
---> 5-Wolf looping with 8-Sheep
---> 5-Wolf looping with 9-Sheep
---> 5-Wolf looping with 10-Sheep
---> 5-Wolf looping with 11-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=40, x=0, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=39, x=1, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=50, x=4, store=836.0) --------
--> 6-Wolf has > 500 store (y=50, x=4, store=836.0) and Random >= 0.5. so will try to find CW to move closer or breed/fight if within AD(5).
-> No CW found. although store >500 and p>=0.5!
--->else2 begins: 6-Wolf (y=50, x=4, store=836.0) before normal moving.
--->else2 begins: 6-Wolf (y=49, x=3, store=836.0) after normal moving.
.... el2 _______  6-Wolf moved normally _______ 
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 199 ************

-> ------------ 0-Sheep initialised with (y=87, x=89, store=546.630692332983) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=87, x=89, store=546.630692332983). Will move normally and eat
-->0-Sheep (y=87, x=89, store=546.630692332983) before normal moving and eating
-->0-Sheep (y=88, x=90, store=556.630692332983) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=66, x=115, store=544.5174407958984) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=66, x=115, store=544.5174407958984). Will move normally and eat
-->1-Sheep (y=66, x=115, store=544.5174407958984) before normal moving and eating
-->1-Sheep (y=65, x=114, store=554.5174407958984) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=91, x=86, store=556.630692332983) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=91, x=86, store=556.630692332983). Will move normally and eat
-->2-Sheep (y=91, x=86, store=556.630692332983) before normal moving and eating
-->2-Sheep (y=92, x=87, store=566.630692332983) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=64, x=114, store=554.5174407958984) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=64, x=114, store=554.5174407958984). Will move normally and eat
-->3-Sheep (y=64, x=114, store=554.5174407958984) before normal moving and eating
-->3-Sheep (y=63, x=113, store=564.5174407958984) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=71, x=120, store=375.32188415527344) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=71, x=120, store=375.32188415527344). Will move normally and eat
-->4-Sheep (y=71, x=120, store=375.32188415527344) before normal moving and eating
-->4-Sheep (y=72, x=121, store=385.32188415527344) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=100, x=86, store=551.3730804622173) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=100, x=86, store=551.3730804622173). Will move normally and eat
-->5-Sheep (y=100, x=86, store=551.3730804622173) before normal moving and eating
-->5-Sheep (y=101, x=85, store=561.3730804622173) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=95, x=94, store=621.848760470748) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store > Min_ernergy(600) (y=95, x=94, store=621.848760470748).
--> 6-Sheep looping with 0-Sheep.
--> 6-Sheep looping with 1-Sheep.
----> ---- (AD < D < MD).
----> Min distance=5.385164807134504 for 6-Sheep (y=95, x=94, store=621.848760470748) with 1-Sheep (y=100, x=96, store=555.924380235374).
--> 6-Sheep looping with 2-Sheep.
--> 6-Sheep looping with 3-Sheep.
--> 6-Sheep looping with 4-Sheep.
->CS Found!
-> 6-Sheep (y=95, x=94, store=621.848760470748) before moving closer (while eating) to CS-Sheep: (y=100, x=96, store=555.924380235374).
-> 6-Wolf (y=97, x=95, store=631.848760470748) after moving closer (while eating) to CS-Sheep: (y=100, x=96, store=555.924380235374).
___________ 6-Sheep moved closer CS___________


-> ------------ 7-Sheep initialised with (y=75, x=112, store=385.32188415527344) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=75, x=112, store=385.32188415527344). Will move normally and eat
-->7-Sheep (y=75, x=112, store=385.32188415527344) before normal moving and eating
-->7-Sheep (y=74, x=113, store=395.32188415527344) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________


-> ------------ 8-Sheep initialised with (y=100, x=96, store=555.924380235374) -----------
--> 8-Sheep looping with 0-Wolf.
--> 8-Sheep looping with 1-Wolf.
--> 8-Sheep looping with 2-Wolf.
--> 8-Sheep looping with 3-Wolf.
--> 8-Sheep looping with 4-Wolf.
--> 8-Sheep looping with 5-Wolf.
--> 8-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->8-Sheep has Store < Min_ernergy(600) (y=100, x=96, store=555.924380235374). Will move normally and eat
-->8-Sheep (y=100, x=96, store=555.924380235374) before normal moving and eating
-->8-Sheep (y=101, x=95, store=565.924380235374) after normal moving and eating
___e2________ 8-Sheep moved normally and ate ___________


-> ------------ 9-Sheep initialised with (y=80, x=121, store=730) -----------
--> 9-Sheep looping with 0-Wolf.
--> 9-Sheep looping with 1-Wolf.
--> 9-Sheep looping with 2-Wolf.
--> 9-Sheep looping with 3-Wolf.
--> 9-Sheep looping with 4-Wolf.
--> 9-Sheep looping with 5-Wolf.
--> 9-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->9-Sheep has Store > Min_ernergy(600) (y=80, x=121, store=730).
--> 9-Sheep looping with 0-Sheep.
--> 9-Sheep looping with 1-Sheep.
-> NO CS Found.
-> 9-Sheep (y=80, x=121, store=730) before normally moving and eating.
-> 9-Sheep (y=81, x=122, store=740) after normally moving and eating.
___e1________ 9-Sheep moved normally and ate ___________


-> ------------ 10-Sheep initialised with (y=111, x=110, store=600) -----------
--> 10-Sheep looping with 0-Wolf.
--> 10-Sheep looping with 1-Wolf.
--> 10-Sheep looping with 2-Wolf.
--> 10-Sheep looping with 3-Wolf.
--> 10-Sheep looping with 4-Wolf.
--> 10-Sheep looping with 5-Wolf.
--> 10-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->10-Sheep has Store < Min_ernergy(600) (y=111, x=110, store=600). Will move normally and eat
-->10-Sheep (y=111, x=110, store=600) before normal moving and eating
-->10-Sheep (y=112, x=109, store=610) after normal moving and eating
___e2________ 10-Sheep moved normally and ate ___________


-> ------------ 11-Sheep initialised with (y=103, x=96, store=565.924380235374) -----------
--> 11-Sheep looping with 0-Wolf.
--> 11-Sheep looping with 1-Wolf.
--> 11-Sheep looping with 2-Wolf.
--> 11-Sheep looping with 3-Wolf.
--> 11-Sheep looping with 4-Wolf.
--> 11-Sheep looping with 5-Wolf.
--> 11-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->11-Sheep has Store < Min_ernergy(600) (y=103, x=96, store=565.924380235374). Will move normally and eat
-->11-Sheep (y=103, x=96, store=565.924380235374) before normal moving and eating
-->11-Sheep (y=104, x=95, store=575.924380235374) after normal moving and eating
___e2________ 11-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=248, x=51, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=248, x=51, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
---> 0-Wolf looping with 8-Sheep
---> 0-Wolf looping with 9-Sheep
---> 0-Wolf looping with 10-Sheep
---> 0-Wolf looping with 11-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=248, x=51, store=100) before normal moving
-->else1 ends: 0-Wolf (y=249, x=52, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=109, x=270, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=109, x=270, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
---> 1-Wolf looping with 8-Sheep
---> 1-Wolf looping with 9-Sheep
---> 1-Wolf looping with 10-Sheep
---> 1-Wolf looping with 11-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=109, x=270, store=300) before normal moving
-->else1 ends: 1-Wolf (y=108, x=271, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=227, x=105, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=227, x=105, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
---> 2-Wolf looping with 8-Sheep
---> 2-Wolf looping with 9-Sheep
---> 2-Wolf looping with 10-Sheep
---> 2-Wolf looping with 11-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=227, x=105, store=200) before normal moving
-->else1 ends: 2-Wolf (y=228, x=104, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=75, x=3, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=75, x=3, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
---> 3-Wolf looping with 8-Sheep
---> 3-Wolf looping with 9-Sheep
---> 3-Wolf looping with 10-Sheep
---> 3-Wolf looping with 11-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=75, x=3, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=74, x=2, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=51, x=17, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=51, x=17, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
---> 4-Wolf looping with 8-Sheep
---> 4-Wolf looping with 9-Sheep
---> 4-Wolf looping with 10-Sheep
---> 4-Wolf looping with 11-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=51, x=17, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=52, x=16, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=39, x=1, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=39, x=1, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
---> 5-Wolf looping with 8-Sheep
---> 5-Wolf looping with 9-Sheep
---> 5-Wolf looping with 10-Sheep
---> 5-Wolf looping with 11-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=39, x=1, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=38, x=0, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=49, x=3, store=836.0) --------
--> if and elif not satisfied
--> 6-Wolf has > Min_energy(500) store (y=49, x=3, store=836.0) but Random < bf_e/2(0.25). So will move normally.
--->else3 begins: 6-Wolf (y=49, x=3, store=836.0) before normal moving.
--->else3 begins: 6-Wolf (y=50, x=2, store=836.0) after normal moving.
....e3_______ 6-Wolf moved normally_______
________________Wolf Cycle Ends_________________

*************** ITERATION NUMBER 200 ************

-> ------------ 0-Sheep initialised with (y=88, x=90, store=556.630692332983) -----------
--> 0-Sheep looping with 0-Wolf.
--> 0-Sheep looping with 1-Wolf.
--> 0-Sheep looping with 2-Wolf.
--> 0-Sheep looping with 3-Wolf.
--> 0-Sheep looping with 4-Wolf.
--> 0-Sheep looping with 5-Wolf.
--> 0-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->0-Sheep has Store < Min_ernergy(600) (y=88, x=90, store=556.630692332983). Will move normally and eat
-->0-Sheep (y=88, x=90, store=556.630692332983) before normal moving and eating
-->0-Sheep (y=89, x=89, store=566.630692332983) after normal moving and eating
___e2________ 0-Sheep moved normally and ate ___________


-> ------------ 1-Sheep initialised with (y=65, x=114, store=554.5174407958984) -----------
--> 1-Sheep looping with 0-Wolf.
--> 1-Sheep looping with 1-Wolf.
--> 1-Sheep looping with 2-Wolf.
--> 1-Sheep looping with 3-Wolf.
--> 1-Sheep looping with 4-Wolf.
--> 1-Sheep looping with 5-Wolf.
--> 1-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->1-Sheep has Store < Min_ernergy(600) (y=65, x=114, store=554.5174407958984). Will move normally and eat
-->1-Sheep (y=65, x=114, store=554.5174407958984) before normal moving and eating
-->1-Sheep (y=64, x=113, store=564.5174407958984) after normal moving and eating
___e2________ 1-Sheep moved normally and ate ___________


-> ------------ 2-Sheep initialised with (y=92, x=87, store=566.630692332983) -----------
--> 2-Sheep looping with 0-Wolf.
--> 2-Sheep looping with 1-Wolf.
--> 2-Sheep looping with 2-Wolf.
--> 2-Sheep looping with 3-Wolf.
--> 2-Sheep looping with 4-Wolf.
--> 2-Sheep looping with 5-Wolf.
--> 2-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->2-Sheep has Store < Min_ernergy(600) (y=92, x=87, store=566.630692332983). Will move normally and eat
-->2-Sheep (y=92, x=87, store=566.630692332983) before normal moving and eating
-->2-Sheep (y=91, x=88, store=576.630692332983) after normal moving and eating
___e2________ 2-Sheep moved normally and ate ___________


-> ------------ 3-Sheep initialised with (y=63, x=113, store=564.5174407958984) -----------
--> 3-Sheep looping with 0-Wolf.
--> 3-Sheep looping with 1-Wolf.
--> 3-Sheep looping with 2-Wolf.
--> 3-Sheep looping with 3-Wolf.
--> 3-Sheep looping with 4-Wolf.
--> 3-Sheep looping with 5-Wolf.
--> 3-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->3-Sheep has Store < Min_ernergy(600) (y=63, x=113, store=564.5174407958984). Will move normally and eat
-->3-Sheep (y=63, x=113, store=564.5174407958984) before normal moving and eating
-->3-Sheep (y=62, x=112, store=574.5174407958984) after normal moving and eating
___e2________ 3-Sheep moved normally and ate ___________


-> ------------ 4-Sheep initialised with (y=72, x=121, store=385.32188415527344) -----------
--> 4-Sheep looping with 0-Wolf.
--> 4-Sheep looping with 1-Wolf.
--> 4-Sheep looping with 2-Wolf.
--> 4-Sheep looping with 3-Wolf.
--> 4-Sheep looping with 4-Wolf.
--> 4-Sheep looping with 5-Wolf.
--> 4-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->4-Sheep has Store < Min_ernergy(600) (y=72, x=121, store=385.32188415527344). Will move normally and eat
-->4-Sheep (y=72, x=121, store=385.32188415527344) before normal moving and eating
-->4-Sheep (y=73, x=120, store=395.32188415527344) after normal moving and eating
___e2________ 4-Sheep moved normally and ate ___________


-> ------------ 5-Sheep initialised with (y=101, x=85, store=561.3730804622173) -----------
--> 5-Sheep looping with 0-Wolf.
--> 5-Sheep looping with 1-Wolf.
--> 5-Sheep looping with 2-Wolf.
--> 5-Sheep looping with 3-Wolf.
--> 5-Sheep looping with 4-Wolf.
--> 5-Sheep looping with 5-Wolf.
--> 5-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->5-Sheep has Store < Min_ernergy(600) (y=101, x=85, store=561.3730804622173). Will move normally and eat
-->5-Sheep (y=101, x=85, store=561.3730804622173) before normal moving and eating
-->5-Sheep (y=100, x=84, store=571.3730804622173) after normal moving and eating
___e2________ 5-Sheep moved normally and ate ___________


-> ------------ 6-Sheep initialised with (y=97, x=95, store=631.848760470748) -----------
--> 6-Sheep looping with 0-Wolf.
--> 6-Sheep looping with 1-Wolf.
--> 6-Sheep looping with 2-Wolf.
--> 6-Sheep looping with 3-Wolf.
--> 6-Sheep looping with 4-Wolf.
--> 6-Sheep looping with 5-Wolf.
--> 6-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->6-Sheep has Store > Min_ernergy(600) (y=97, x=95, store=631.848760470748).
--> 6-Sheep looping with 0-Sheep.
--> 6-Sheep looping with 1-Sheep.
----> D <=AD. Sheep Breeding/Sharing proximity of 4.0(<=5) entered by CS 6-Sheep (y=97, x=95, store=631.848760470748) with CS 1-Sheep (y=101, x=95, store=565.924380235374).
-----> 6-Sheep (y=97, x=95, store=631.848760470748) and CS 1-Sheep (y=101, x=95, store=565.924380235374 will not mate as CS 1-Sheep store <600. They will share resource to become average.
-----> Shared resources = True
-----> 6-Sheep (y=97, x=95, store=598.886570353061) and CS 1-Sheep (y=101, x=95, store=598.886570353061) after sharing resources!
_____________ 6-Sheep and CS 1-Sheep shared resources ____________
_______ Breeding=False, Failed breeding=False, Share=True for 6-Sheep __________

-> ------------ 7-Sheep initialised with (y=74, x=113, store=395.32188415527344) -----------
--> 7-Sheep looping with 0-Wolf.
--> 7-Sheep looping with 1-Wolf.
--> 7-Sheep looping with 2-Wolf.
--> 7-Sheep looping with 3-Wolf.
--> 7-Sheep looping with 4-Wolf.
--> 7-Sheep looping with 5-Wolf.
--> 7-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->7-Sheep has Store < Min_ernergy(600) (y=74, x=113, store=395.32188415527344). Will move normally and eat
-->7-Sheep (y=74, x=113, store=395.32188415527344) before normal moving and eating
-->7-Sheep (y=75, x=112, store=405.32188415527344) after normal moving and eating
___e2________ 7-Sheep moved normally and ate ___________


-> ------------ 8-Sheep initialised with (y=101, x=95, store=598.886570353061) -----------
--> 8-Sheep looping with 0-Wolf.
--> 8-Sheep looping with 1-Wolf.
--> 8-Sheep looping with 2-Wolf.
--> 8-Sheep looping with 3-Wolf.
--> 8-Sheep looping with 4-Wolf.
--> 8-Sheep looping with 5-Wolf.
--> 8-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->8-Sheep has Store < Min_ernergy(600) (y=101, x=95, store=598.886570353061). Will move normally and eat
-->8-Sheep (y=101, x=95, store=598.886570353061) before normal moving and eating
-->8-Sheep (y=100, x=96, store=608.886570353061) after normal moving and eating
___e2________ 8-Sheep moved normally and ate ___________


-> ------------ 9-Sheep initialised with (y=81, x=122, store=740) -----------
--> 9-Sheep looping with 0-Wolf.
--> 9-Sheep looping with 1-Wolf.
--> 9-Sheep looping with 2-Wolf.
--> 9-Sheep looping with 3-Wolf.
--> 9-Sheep looping with 4-Wolf.
--> 9-Sheep looping with 5-Wolf.
--> 9-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->9-Sheep has Store > Min_ernergy(600) (y=81, x=122, store=740).
--> 9-Sheep looping with 0-Sheep.
--> 9-Sheep looping with 1-Sheep.
-> NO CS Found.
-> 9-Sheep (y=81, x=122, store=740) before normally moving and eating.
-> 9-Sheep (y=82, x=121, store=750) after normally moving and eating.
___e1________ 9-Sheep moved normally and ate ___________


-> ------------ 10-Sheep initialised with (y=112, x=109, store=610) -----------
--> 10-Sheep looping with 0-Wolf.
--> 10-Sheep looping with 1-Wolf.
--> 10-Sheep looping with 2-Wolf.
--> 10-Sheep looping with 3-Wolf.
--> 10-Sheep looping with 4-Wolf.
--> 10-Sheep looping with 5-Wolf.
--> 10-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->10-Sheep has Store > Min_ernergy(600) (y=112, x=109, store=610).
--> 10-Sheep looping with 0-Sheep.
----> ---- (AD < D < MD).
----> Min distance=16.1245154965971 for 10-Sheep (y=112, x=109, store=610) with 0-Sheep (y=104, x=95, store=575.924380235374).
->CS Found!
-> 10-Sheep (y=112, x=109, store=610) before moving closer (while eating) to CS-Sheep: (y=104, x=95, store=575.924380235374).
-> 10-Wolf (y=108, x=102, store=620) after moving closer (while eating) to CS-Sheep: (y=104, x=95, store=575.924380235374).
___________ 10-Sheep moved closer CS___________


-> ------------ 11-Sheep initialised with (y=104, x=95, store=575.924380235374) -----------
--> 11-Sheep looping with 0-Wolf.
--> 11-Sheep looping with 1-Wolf.
--> 11-Sheep looping with 2-Wolf.
--> 11-Sheep looping with 3-Wolf.
--> 11-Sheep looping with 4-Wolf.
--> 11-Sheep looping with 5-Wolf.
--> 11-Sheep looping with 6-Wolf.
-> NO CW FOUND. Will try to either (if energy allows: find CS to move closer+eat OR breed/share) OR (move/eat normally if low energy).
->11-Sheep has Store < Min_ernergy(600) (y=104, x=95, store=575.924380235374). Will move normally and eat
-->11-Sheep (y=104, x=95, store=575.924380235374) before normal moving and eating
-->11-Sheep (y=105, x=96, store=585.924380235374) after normal moving and eating
___e2________ 11-Sheep moved normally and ate ___________

________________Sheep Cycle Ends________________
________________Wolf Cycle Begins________________

---------0-Wolf initialised with (y=249, x=52, store=100) --------
--> 0-Wolf has <=Min_energy(500) store (y=249, x=52, store=100). Tries to find food (sheep).
---> 0-Wolf looping with 0-Sheep
---> 0-Wolf looping with 1-Sheep
---> 0-Wolf looping with 2-Sheep
---> 0-Wolf looping with 3-Sheep
---> 0-Wolf looping with 4-Sheep
---> 0-Wolf looping with 5-Sheep
---> 0-Wolf looping with 6-Sheep
---> 0-Wolf looping with 7-Sheep
---> 0-Wolf looping with 8-Sheep
---> 0-Wolf looping with 9-Sheep
---> 0-Wolf looping with 10-Sheep
---> 0-Wolf looping with 11-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 0-Wolf (y=249, x=52, store=100) before normal moving
-->else1 ends: 0-Wolf (y=248, x=53, store=100) after normal moving
....el1___________ 0-Wolf moved normally___________

---------1-Wolf initialised with (y=108, x=271, store=300) --------
--> 1-Wolf has <=Min_energy(500) store (y=108, x=271, store=300). Tries to find food (sheep).
---> 1-Wolf looping with 0-Sheep
---> 1-Wolf looping with 1-Sheep
---> 1-Wolf looping with 2-Sheep
---> 1-Wolf looping with 3-Sheep
---> 1-Wolf looping with 4-Sheep
---> 1-Wolf looping with 5-Sheep
---> 1-Wolf looping with 6-Sheep
---> 1-Wolf looping with 7-Sheep
---> 1-Wolf looping with 8-Sheep
---> 1-Wolf looping with 9-Sheep
---> 1-Wolf looping with 10-Sheep
---> 1-Wolf looping with 11-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 1-Wolf (y=108, x=271, store=300) before normal moving
-->else1 ends: 1-Wolf (y=107, x=270, store=300) after normal moving
....el1___________ 1-Wolf moved normally___________

---------2-Wolf initialised with (y=228, x=104, store=200) --------
--> 2-Wolf has <=Min_energy(500) store (y=228, x=104, store=200). Tries to find food (sheep).
---> 2-Wolf looping with 0-Sheep
---> 2-Wolf looping with 1-Sheep
---> 2-Wolf looping with 2-Sheep
---> 2-Wolf looping with 3-Sheep
---> 2-Wolf looping with 4-Sheep
---> 2-Wolf looping with 5-Sheep
---> 2-Wolf looping with 6-Sheep
---> 2-Wolf looping with 7-Sheep
---> 2-Wolf looping with 8-Sheep
---> 2-Wolf looping with 9-Sheep
---> 2-Wolf looping with 10-Sheep
---> 2-Wolf looping with 11-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 2-Wolf (y=228, x=104, store=200) before normal moving
-->else1 ends: 2-Wolf (y=227, x=105, store=200) after normal moving
....el1___________ 2-Wolf moved normally___________

---------3-Wolf initialised with (y=74, x=2, store=301.5) --------
--> 3-Wolf has <=Min_energy(500) store (y=74, x=2, store=301.5). Tries to find food (sheep).
---> 3-Wolf looping with 0-Sheep
---> 3-Wolf looping with 1-Sheep
---> 3-Wolf looping with 2-Sheep
---> 3-Wolf looping with 3-Sheep
---> 3-Wolf looping with 4-Sheep
---> 3-Wolf looping with 5-Sheep
---> 3-Wolf looping with 6-Sheep
---> 3-Wolf looping with 7-Sheep
---> 3-Wolf looping with 8-Sheep
---> 3-Wolf looping with 9-Sheep
---> 3-Wolf looping with 10-Sheep
---> 3-Wolf looping with 11-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 3-Wolf (y=74, x=2, store=301.5) before normal moving
-->else1 ends: 3-Wolf (y=73, x=3, store=301.5) after normal moving
....el1___________ 3-Wolf moved normally___________

---------4-Wolf initialised with (y=52, x=16, store=301.5) --------
--> 4-Wolf has <=Min_energy(500) store (y=52, x=16, store=301.5). Tries to find food (sheep).
---> 4-Wolf looping with 0-Sheep
---> 4-Wolf looping with 1-Sheep
---> 4-Wolf looping with 2-Sheep
---> 4-Wolf looping with 3-Sheep
---> 4-Wolf looping with 4-Sheep
---> 4-Wolf looping with 5-Sheep
---> 4-Wolf looping with 6-Sheep
---> 4-Wolf looping with 7-Sheep
---> 4-Wolf looping with 8-Sheep
---> 4-Wolf looping with 9-Sheep
---> 4-Wolf looping with 10-Sheep
---> 4-Wolf looping with 11-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 4-Wolf (y=52, x=16, store=301.5) before normal moving
-->else1 ends: 4-Wolf (y=51, x=17, store=301.5) after normal moving
....el1___________ 4-Wolf moved normally___________

---------5-Wolf initialised with (y=38, x=0, store=436.0) --------
--> 5-Wolf has <=Min_energy(500) store (y=38, x=0, store=436.0). Tries to find food (sheep).
---> 5-Wolf looping with 0-Sheep
---> 5-Wolf looping with 1-Sheep
---> 5-Wolf looping with 2-Sheep
---> 5-Wolf looping with 3-Sheep
---> 5-Wolf looping with 4-Sheep
---> 5-Wolf looping with 5-Sheep
---> 5-Wolf looping with 6-Sheep
---> 5-Wolf looping with 7-Sheep
---> 5-Wolf looping with 8-Sheep
---> 5-Wolf looping with 9-Sheep
---> 5-Wolf looping with 10-Sheep
---> 5-Wolf looping with 11-Sheep
-> No CS found and store <min_energy(500)!
-->else1 begins: 5-Wolf (y=38, x=0, store=436.0) before normal moving
-->else1 ends: 5-Wolf (y=39, x=1, store=436.0) after normal moving
....el1___________ 5-Wolf moved normally___________

---------6-Wolf initialised with (y=50, x=2, store=836.0) --------
--> if and elif not satisfied
--> 6-Wolf has > Min_energy(500) store (y=50, x=2, store=836.0) but Random < bf_e/2(0.25). So will move normally.
--->else3 begins: 6-Wolf (y=50, x=2, store=836.0) before normal moving.
--->else3 begins: 6-Wolf (y=51, x=3, store=836.0) after normal moving.
....e3_______ 6-Wolf moved normally_______
________________Wolf Cycle Ends_________________
